var annotated_dup =
[
    [ "pgrouting", "namespacepgrouting.html", "namespacepgrouting" ],
    [ "AssertFailedException", "classAssertFailedException.html", "classAssertFailedException" ],
    [ "Column_info_t", "structColumn__info__t.html", "structColumn__info__t" ],
    [ "contracted_rt", "structcontracted__rt.html", "structcontracted__rt" ],
    [ "Coordinate_t", "structCoordinate__t.html", "structCoordinate__t" ],
    [ "CostHolder", "structCostHolder.html", "structCostHolder" ],
    [ "Delauny_t", "structDelauny__t.html", "structDelauny__t" ],
    [ "edge", "structedge.html", "structedge" ],
    [ "edge_columns", "structedge__columns.html", "structedge__columns" ],
    [ "edge_t", "structedge__t.html", "structedge__t" ],
    [ "EventHandler", "classEventHandler.html", "classEventHandler" ],
    [ "General_path_element_t", "structGeneral__path__element__t.html", "structGeneral__path__element__t" ],
    [ "General_vehicle_orders_t", "structGeneral__vehicle__orders__t.html", "structGeneral__vehicle__orders__t" ],
    [ "GeomText_t", "structGeomText__t.html", "structGeomText__t" ],
    [ "GraphDefinition", "classGraphDefinition.html", "classGraphDefinition" ],
    [ "GraphEdgeInfo", "classGraphEdgeInfo.html", "classGraphEdgeInfo" ],
    [ "Identifiers", "classIdentifiers.html", "classIdentifiers" ],
    [ "Line_graph_full_rt", "structLine__graph__full__rt.html", "structLine__graph__full__rt" ],
    [ "Line_graph_rt", "structLine__graph__rt.html", "structLine__graph__rt" ],
    [ "matrix_cell", "structmatrix__cell.html", "structmatrix__cell" ],
    [ "PARENT_PATH", "structPARENT__PATH.html", "structPARENT__PATH" ],
    [ "Path", "classPath.html", "classPath" ],
    [ "path_element", "structpath__element.html", "structpath__element" ],
    [ "Path_t", "structPath__t.html", "structPath__t" ],
    [ "Pgr_allpairs", "classPgr__allpairs.html", "classPgr__allpairs" ],
    [ "pgr_basic_edge_t", "structpgr__basic__edge__t.html", "structpgr__basic__edge__t" ],
    [ "Pgr_bellman_ford", "classPgr__bellman__ford.html", "classPgr__bellman__ford" ],
    [ "pgr_bipartite_rt", "structpgr__bipartite__rt.html", "structpgr__bipartite__rt" ],
    [ "pgr_boyer_t", "structpgr__boyer__t.html", "structpgr__boyer__t" ],
    [ "pgr_combination_t", "structpgr__combination__t.html", "structpgr__combination__t" ],
    [ "pgr_components_rt", "structpgr__components__rt.html", "structpgr__components__rt" ],
    [ "pgr_costFlow_t", "structpgr__costFlow__t.html", "structpgr__costFlow__t" ],
    [ "Pgr_dag", "classPgr__dag.html", "classPgr__dag" ],
    [ "pgr_edge_t", "structpgr__edge__t.html", "structpgr__edge__t" ],
    [ "Pgr_edge_xy_t", "structPgr__edge__xy__t.html", "structPgr__edge__xy__t" ],
    [ "pgr_flow_t", "structpgr__flow__t.html", "structpgr__flow__t" ],
    [ "pgr_ltdtree_rt", "structpgr__ltdtree__rt.html", "structpgr__ltdtree__rt" ],
    [ "pgr_makeConnected_t", "structpgr__makeConnected__t.html", "structpgr__makeConnected__t" ],
    [ "pgr_mst_rt", "structpgr__mst__rt.html", "structpgr__mst__rt" ],
    [ "Pgr_point_t", "structPgr__point__t.html", "structPgr__point__t" ],
    [ "pgr_prim_rt", "structpgr__prim__rt.html", "structpgr__prim__rt" ],
    [ "Pgr_randomSpanningTree", "classPgr__randomSpanningTree.html", "classPgr__randomSpanningTree" ],
    [ "pgr_randomSpanningTree_t", "structpgr__randomSpanningTree__t.html", "structpgr__randomSpanningTree__t" ],
    [ "Pgr_stoerWagner", "classPgr__stoerWagner.html", "classPgr__stoerWagner" ],
    [ "pgr_stoerWagner_t", "structpgr__stoerWagner__t.html", "structpgr__stoerWagner__t" ],
    [ "Pgr_topologicalSort", "classPgr__topologicalSort.html", "classPgr__topologicalSort" ],
    [ "pgr_topologicalSort_t", "structpgr__topologicalSort__t.html", "structpgr__topologicalSort__t" ],
    [ "Pgr_transitiveClosure", "classPgr__transitiveClosure.html", "classPgr__transitiveClosure" ],
    [ "pgr_vertex_color_rt", "structpgr__vertex__color__rt.html", "structpgr__vertex__color__rt" ],
    [ "PickDeliveryOrders_t", "structPickDeliveryOrders__t.html", "structPickDeliveryOrders__t" ],
    [ "Point_on_edge_t", "structPoint__on__edge__t.html", "structPoint__on__edge__t" ],
    [ "restrict_columns", "structrestrict__columns.html", "structrestrict__columns" ],
    [ "restrict_struct", "structrestrict__struct.html", "structrestrict__struct" ],
    [ "Restriction_t", "structRestriction__t.html", "structRestriction__t" ],
    [ "Routes_t", "structRoutes__t.html", "structRoutes__t" ],
    [ "Rule", "structRule.html", "structRule" ],
    [ "SIGINT_Handler", "classSIGINT__Handler.html", "classSIGINT__Handler" ],
    [ "SignalHandler", "classSignalHandler.html", "classSignalHandler" ],
    [ "SIGQUIT_Handler", "classSIGQUIT__Handler.html", "classSIGQUIT__Handler" ],
    [ "transitiveClosure_rt", "structtransitiveClosure__rt.html", "structtransitiveClosure__rt" ],
    [ "UserQuitException", "classUserQuitException.html", "classUserQuitException" ],
    [ "Vehicle_t", "structVehicle__t.html", "structVehicle__t" ]
];