Search.setIndex({"docnames": ["BFS-category", "DFS-category", "KSP-category", "TSP-family", "VRP-category", "aStar-family", "allpairs-family", "bdAstar-family", "bdDijkstra-family", "chinesePostmanProblem-family", "coloring-family", "components-family", "contraction-family", "cost-category", "costMatrix-category", "dijkstra-family", "drivingDistance-category", "experimental", "flow-family", "index", "kruskal-family", "pgRouting-concepts", "pgRouting-installation", "pgRouting-introduction", "pgr_KSP", "pgr_TSP", "pgr_TSPeuclidean", "pgr_aStar", "pgr_aStarCost", "pgr_aStarCostMatrix", "pgr_alphaShape", "pgr_analyzeGraph", "pgr_analyzeOneWay", "pgr_articulationPoints", "pgr_bdAstar", "pgr_bdAstarCost", "pgr_bdAstarCostMatrix", "pgr_bdDijkstra", "pgr_bdDijkstraCost", "pgr_bdDijkstraCostMatrix", "pgr_bellmanFord", "pgr_biconnectedComponents", "pgr_binaryBreadthFirstSearch", "pgr_bipartite", "pgr_boykovKolmogorov", "pgr_breadthFirstSearch", "pgr_bridges", "pgr_chinesePostman", "pgr_chinesePostmanCost", "pgr_connectedComponents", "pgr_contraction", "pgr_createTopology", "pgr_createVerticesTable", "pgr_dagShortestPath", "pgr_depthFirstSearch", "pgr_dijkstra", "pgr_dijkstraCost", "pgr_dijkstraCostMatrix", "pgr_dijkstraNear", "pgr_dijkstraNearCost", "pgr_dijkstraVia", "pgr_drivingDistance", "pgr_edgeColoring", "pgr_edgeDisjointPaths", "pgr_edmondsKarp", "pgr_edwardMoore", "pgr_extractVertices", "pgr_floydWarshall", "pgr_full_version", "pgr_isPlanar", "pgr_johnson", "pgr_kruskal", "pgr_kruskalBFS", "pgr_kruskalDD", "pgr_kruskalDFS", "pgr_lengauerTarjanDominatorTree", "pgr_lineGraph", "pgr_lineGraphFull", "pgr_makeConnected", "pgr_maxCardinalityMatch", "pgr_maxFlow", "pgr_maxFlowMinCost", "pgr_maxFlowMinCost_Cost", "pgr_nodeNetwork", "pgr_pickDeliver", "pgr_pickDeliverEuclidean", "pgr_prim", "pgr_primBFS", "pgr_primDD", "pgr_primDFS", "pgr_pushRelabel", "pgr_sequentialVertexColoring", "pgr_stoerWagner", "pgr_strongComponents", "pgr_topologicalSort", "pgr_transitiveClosure", "pgr_trsp", "pgr_turnRestrictedPath", "pgr_version", "pgr_vrpOneDepot", "pgr_withPoints", "pgr_withPointsCost", "pgr_withPointsCostMatrix", "pgr_withPointsDD", "pgr_withPointsKSP", "prim-family", "proposed", "reference", "release_notes", "routingFunctions", "sampledata", "spanningTree-family", "support", "topology-functions", "transformation-family", "traversal-family", "via-category", "withPoints-category", "withPoints-family"], "filenames": ["BFS-category.rst", "DFS-category.rst", "KSP-category.rst", "TSP-family.rst", "VRP-category.rst", "aStar-family.rst", "allpairs-family.rst", "bdAstar-family.rst", "bdDijkstra-family.rst", "chinesePostmanProblem-family.rst", "coloring-family.rst", "components-family.rst", "contraction-family.rst", "cost-category.rst", "costMatrix-category.rst", "dijkstra-family.rst", "drivingDistance-category.rst", "experimental.rst", "flow-family.rst", "index.rst", "kruskal-family.rst", "pgRouting-concepts.rst", "pgRouting-installation.rst", "pgRouting-introduction.rst", "pgr_KSP.rst", "pgr_TSP.rst", "pgr_TSPeuclidean.rst", "pgr_aStar.rst", "pgr_aStarCost.rst", "pgr_aStarCostMatrix.rst", "pgr_alphaShape.rst", "pgr_analyzeGraph.rst", "pgr_analyzeOneWay.rst", "pgr_articulationPoints.rst", "pgr_bdAstar.rst", "pgr_bdAstarCost.rst", "pgr_bdAstarCostMatrix.rst", "pgr_bdDijkstra.rst", "pgr_bdDijkstraCost.rst", "pgr_bdDijkstraCostMatrix.rst", "pgr_bellmanFord.rst", "pgr_biconnectedComponents.rst", "pgr_binaryBreadthFirstSearch.rst", "pgr_bipartite.rst", "pgr_boykovKolmogorov.rst", "pgr_breadthFirstSearch.rst", "pgr_bridges.rst", "pgr_chinesePostman.rst", "pgr_chinesePostmanCost.rst", "pgr_connectedComponents.rst", "pgr_contraction.rst", "pgr_createTopology.rst", "pgr_createVerticesTable.rst", "pgr_dagShortestPath.rst", "pgr_depthFirstSearch.rst", "pgr_dijkstra.rst", "pgr_dijkstraCost.rst", "pgr_dijkstraCostMatrix.rst", "pgr_dijkstraNear.rst", "pgr_dijkstraNearCost.rst", "pgr_dijkstraVia.rst", "pgr_drivingDistance.rst", "pgr_edgeColoring.rst", "pgr_edgeDisjointPaths.rst", "pgr_edmondsKarp.rst", "pgr_edwardMoore.rst", "pgr_extractVertices.rst", "pgr_floydWarshall.rst", "pgr_full_version.rst", "pgr_isPlanar.rst", "pgr_johnson.rst", "pgr_kruskal.rst", "pgr_kruskalBFS.rst", "pgr_kruskalDD.rst", "pgr_kruskalDFS.rst", "pgr_lengauerTarjanDominatorTree.rst", "pgr_lineGraph.rst", "pgr_lineGraphFull.rst", "pgr_makeConnected.rst", "pgr_maxCardinalityMatch.rst", "pgr_maxFlow.rst", "pgr_maxFlowMinCost.rst", "pgr_maxFlowMinCost_Cost.rst", "pgr_nodeNetwork.rst", "pgr_pickDeliver.rst", "pgr_pickDeliverEuclidean.rst", "pgr_prim.rst", "pgr_primBFS.rst", "pgr_primDD.rst", "pgr_primDFS.rst", "pgr_pushRelabel.rst", "pgr_sequentialVertexColoring.rst", "pgr_stoerWagner.rst", "pgr_strongComponents.rst", "pgr_topologicalSort.rst", "pgr_transitiveClosure.rst", "pgr_trsp.rst", "pgr_turnRestrictedPath.rst", "pgr_version.rst", "pgr_vrpOneDepot.rst", "pgr_withPoints.rst", "pgr_withPointsCost.rst", "pgr_withPointsCostMatrix.rst", "pgr_withPointsDD.rst", "pgr_withPointsKSP.rst", "prim-family.rst", "proposed.rst", "reference.rst", "release_notes.rst", "routingFunctions.rst", "sampledata.rst", "spanningTree-family.rst", "support.rst", "topology-functions.rst", "transformation-family.rst", "traversal-family.rst", "via-category.rst", "withPoints-category.rst", "withPoints-family.rst"], "titles": ["BFS - Category", "DFS - Category", "K shortest paths - Category", "Traveling Sales Person - Family of functions", "Vehicle Routing Functions - Category (Experimental)", "A* - Family of functions", "All Pairs - Family of Functions", "Bidirectional A* - Family of functions", "Bidirectional Dijkstra - Family of functions", "Chinese Postman Problem - Family of functions (Experimental)", "Coloring - Family of functions", "Components - Family of functions", "Contraction - Family of functions", "Cost - Category", "Cost Matrix - Category", "Dijkstra - Family of functions", "Driving Distance - Category", "Experimental Functions", "Flow - Family of functions", "Table of Contents", "Kruskal - Family of functions", "pgRouting Concepts", "Installation", "Introduction", "pgr_KSP", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pgr_TSP</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pgr_TSPeuclidean</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pgr_aStar</span></code>", "pgr_aStarCost", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pgr_aStarCostMatrix</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pgr_alphaShape</span></code>", "pgr_analyzeGraph", "pgr_analyzeOneWay", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pgr_articulationPoints</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pgr_bdAstar</span></code>", "pgr_bdAstarCost", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pgr_bdAstarCostMatrix</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pgr_bdDijkstra</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pgr_bdDijkstraCost</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pgr_bdDijkstraCostMatrix</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pgr_bellmanFord</span> <span class=\"pre\">-</span> <span class=\"pre\">Experimental</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pgr_biconnectedComponents</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pgr_binaryBreadthFirstSearch</span></code> - Experimental", "pgr_bipartite -Experimental", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pgr_boykovKolmogorov</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pgr_breadthFirstSearch</span></code> - Experimental", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pgr_bridges</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pgr_chinesePostman</span></code> - Experimental", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pgr_chinesePostmanCost</span></code> - Experimental", "pgr_connectedComponents", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pgr_contraction</span></code>", "pgr_createTopology", "pgr_createVerticesTable", "pgr_dagShortestPath - Experimental", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pgr_depthFirstSearch</span></code> - Proposed", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pgr_dijkstra</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pgr_dijkstraCost</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pgr_dijkstraCostMatrix</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pgr_dijkstraNear</span></code> - Proposed", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pgr_dijkstraNearCost</span></code> - Proposed", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pgr_dijkstraVia</span></code> - Proposed", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pgr_drivingDistance</span></code>", "pgr_edgeColoring - Experimental", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pgr_edgeDisjointPaths</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pgr_edmondsKarp</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pgr_edwardMoore</span> <span class=\"pre\">-</span> <span class=\"pre\">Experimental</span></code>", "pgr_extractVertices \u2013 Proposed", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pgr_floydWarshall</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pgr_full_version</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pgr_isPlanar</span></code> - Experimental", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pgr_johnson</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pgr_kruskal</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pgr_kruskalBFS</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pgr_kruskalDD</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pgr_kruskalDFS</span></code>", "pgr_lengauerTarjanDominatorTree -Experimental", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pgr_lineGraph</span></code> - Experimental", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pgr_lineGraphFull</span></code> - Experimental", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pgr_makeConnected</span></code> - Experimental", "pgr_maxCardinalityMatch", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pgr_maxFlow</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pgr_maxFlowMinCost</span></code> - Experimental", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pgr_maxFlowMinCost_Cost</span></code> - Experimental", "pgr_nodeNetwork", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pgr_pickDeliver</span></code> - Experimental", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pgr_pickDeliverEuclidean</span></code> - Experimental", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pgr_prim</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pgr_primBFS</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pgr_primDD</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pgr_primDFS</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pgr_pushRelabel</span></code>", "pgr_sequentialVertexColoring - Proposed", "pgr_stoerWagner - Experimental", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pgr_strongComponents</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pgr_topologicalSort</span></code> - Experimental", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pgr_transitiveClosure</span></code> - Experimental", "pgr_trsp - Turn Restriction Shortest Path (TRSP)", "pgr_turnRestrictedPath - Experimental", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pgr_version</span></code>", "pgr_vrpOneDepot - Experimental", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pgr_withPoints</span></code> - Proposed", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pgr_withPointsCost</span></code> - Proposed", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pgr_withPointsCostMatrix</span></code> - proposed", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pgr_withPointsDD</span></code> - Proposed", "pgr_withPointsKSP - Proposed", "Prim - Family of functions", "Proposed Functions", "Reference", "Release Notes", "Function Families", "Sample Data", "Spanning Tree - Category", "Support", "Topology - Family of Functions", "Transformation - Family of functions (Experimental)", "Traversal - Family of functions", "Via - Category", "withPoints - Category", "withPoints - Family of functions"], "terms": {"support": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 113, 114, 115, 116, 117, 118], "version": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118], "latest": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118], "3": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118], "pgr_kruskalbf": [0, 19, 20, 108, 109], "pgr_primbf": [0, 19, 105, 108, 109], "travers": [0, 1, 17, 21, 24, 25, 26, 27, 34, 37, 40, 42, 45, 47, 53, 54, 55, 58, 60, 61, 63, 65, 69, 71, 72, 73, 74, 77, 78, 83, 86, 87, 88, 89, 92, 96, 97, 100, 103, 104, 106, 108, 110, 116], "us": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 21, 22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 99, 100, 101, 103, 104, 106, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118], "breadth": [0, 42, 45, 72, 108], "first": [0, 1, 3, 5, 6, 7, 9, 12, 14, 15, 16, 17, 18, 20, 21, 24, 25, 26, 27, 28, 29, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 100, 101, 102, 103, 104, 105, 106, 108, 115, 116, 117, 118], "search": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118], "It": [0, 1, 3, 6, 7, 8, 12, 13, 14, 15, 20, 21, 25, 28, 32, 35, 37, 38, 39, 40, 42, 54, 55, 56, 57, 62, 65, 66, 67, 69, 70, 71, 72, 73, 74, 78, 83, 86, 87, 88, 89, 91, 92, 101, 102, 105, 111, 112, 117, 118], "": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 14, 15, 16, 17, 18, 19, 20, 22, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 100, 101, 102, 103, 104, 105, 106, 108, 109, 111, 113, 116, 117, 118], "implement": [0, 1, 3, 4, 7, 8, 12, 15, 18, 20, 25, 26, 33, 40, 45, 46, 53, 54, 55, 56, 57, 62, 67, 69, 70, 71, 72, 73, 74, 85, 86, 87, 88, 89, 91, 92, 102, 105, 111], "i": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118], "onli": [0, 1, 5, 6, 8, 9, 14, 15, 17, 18, 19, 20, 21, 22, 33, 37, 38, 39, 41, 42, 43, 44, 46, 47, 48, 49, 50, 53, 56, 57, 58, 59, 61, 64, 67, 69, 70, 71, 72, 73, 74, 75, 76, 79, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 94, 96, 97, 100, 101, 102, 103, 105, 108, 109, 111, 117, 118], "undirect": [0, 1, 3, 5, 6, 7, 8, 11, 14, 15, 19, 20, 21, 24, 25, 26, 27, 28, 29, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 49, 50, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 65, 67, 69, 70, 71, 72, 73, 74, 76, 78, 79, 86, 87, 88, 89, 91, 92, 95, 97, 100, 101, 102, 103, 104, 105, 108, 109, 111, 113, 117, 118], "graph": [0, 1, 3, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 22, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 100, 101, 102, 103, 104, 105, 106, 108, 109, 111, 113, 114, 115, 116, 117, 118], "process": [0, 1, 5, 6, 7, 8, 9, 12, 14, 15, 18, 20, 21, 22, 24, 27, 28, 31, 32, 34, 35, 37, 38, 39, 40, 42, 44, 47, 48, 50, 51, 52, 53, 55, 56, 57, 64, 66, 67, 70, 71, 72, 73, 74, 77, 81, 82, 83, 86, 87, 88, 89, 90, 92, 94, 95, 97, 100, 101, 102, 104, 105, 108, 110, 111, 117, 118], "done": [0, 1, 2, 4, 6, 8, 9, 10, 12, 13, 14, 15, 16, 18, 20, 21, 22, 37, 38, 39, 42, 44, 47, 48, 50, 54, 55, 56, 57, 58, 59, 60, 64, 66, 67, 70, 71, 72, 73, 74, 77, 78, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 100, 101, 102, 103, 104, 105, 106, 110, 111, 113, 115, 116, 117, 118], "posit": [0, 1, 6, 8, 9, 14, 15, 18, 20, 21, 24, 25, 27, 31, 34, 37, 38, 39, 40, 42, 44, 47, 48, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 63, 64, 65, 66, 67, 70, 71, 72, 73, 74, 77, 79, 81, 82, 86, 87, 88, 89, 90, 92, 96, 97, 100, 101, 102, 103, 104, 105, 111, 116, 117, 118], "cost": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118], "when": [0, 1, 3, 4, 5, 6, 7, 8, 9, 12, 14, 15, 16, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 116], "connect": [0, 1, 3, 9, 11, 12, 17, 19, 20, 22, 26, 33, 41, 43, 46, 47, 48, 58, 59, 71, 72, 73, 74, 77, 78, 86, 87, 88, 89, 91, 92, 93, 95, 105, 108, 109, 111], "The": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118], "make": [0, 1, 2, 4, 9, 10, 11, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 26, 27, 28, 32, 34, 35, 37, 38, 39, 40, 42, 43, 45, 47, 48, 50, 53, 54, 55, 56, 57, 58, 59, 60, 62, 65, 69, 71, 72, 73, 74, 75, 76, 77, 78, 81, 82, 84, 85, 86, 87, 88, 89, 91, 92, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 108, 111, 113, 114, 115, 116, 117, 118], "up": [0, 1, 4, 12, 15, 20, 21, 22, 32, 52, 54, 71, 72, 73, 74, 77, 85, 86, 87, 88, 89, 96, 105, 110, 111], "tree": [0, 1, 16, 19, 20, 45, 54, 61, 71, 72, 73, 74, 75, 86, 87, 88, 89, 103, 105, 109], "find": [0, 1, 7, 8, 20, 23, 55, 58, 59, 60, 71, 72, 73, 74, 86, 87, 88, 89, 92, 96, 100, 104, 105, 108, 111, 112, 116], "minimum": [0, 1, 10, 20, 25, 41, 43, 48, 49, 62, 71, 72, 73, 74, 78, 82, 86, 87, 88, 89, 91, 92, 93, 105, 108, 111], "span": [0, 1, 16, 19, 20, 45, 54, 61, 71, 72, 73, 74, 86, 87, 88, 89, 103, 105, 109], "each": [0, 1, 3, 6, 13, 14, 17, 18, 20, 21, 22, 23, 25, 26, 28, 32, 35, 38, 39, 41, 42, 43, 44, 45, 49, 54, 56, 57, 64, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 81, 82, 86, 87, 88, 89, 90, 91, 92, 93, 96, 102, 105, 111, 114, 116, 117, 118], "compon": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118], "forest": [0, 1, 20, 45, 54, 71, 72, 73, 74, 86, 87, 88, 89, 105, 111], "type": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118], "descript": [0, 3, 4, 6, 10, 12, 14, 15, 16, 18, 21, 84, 85, 110, 116, 117, 118], "text": [0, 4, 6, 9, 14, 15, 16, 18, 21, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 108, 110, 116, 117, 118], "describ": [0, 4, 6, 9, 14, 15, 16, 21, 24, 25, 26, 27, 28, 29, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 100, 101, 102, 103, 104, 116, 117, 118], "below": [0, 4, 6, 9, 14, 15, 16, 21, 22, 25, 26, 27, 28, 29, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 100, 101, 102, 103, 112, 117, 118], "root": [0, 16, 45, 54, 61, 72, 73, 74, 75, 87, 88, 89, 103], "vid": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118], "bigint": [0, 4, 6, 9, 10, 12, 14, 15, 16, 18, 20, 21, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 100, 101, 102, 103, 104, 105, 108, 110, 116, 117, 118], "identifi": [0, 4, 5, 6, 7, 9, 10, 13, 14, 15, 16, 18, 20, 21, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 100, 101, 102, 103, 104, 105, 110, 116, 117, 118], "vertex": [0, 3, 4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 20, 24, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 67, 69, 70, 71, 75, 76, 78, 79, 80, 81, 82, 84, 86, 90, 91, 92, 93, 94, 95, 97, 100, 101, 102, 104, 105, 106, 108, 110, 113, 114, 116, 117, 118], "valu": [0, 4, 5, 6, 7, 8, 10, 13, 14, 15, 16, 18, 21, 24, 25, 26, 27, 28, 29, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 110, 116, 117, 118], "0": [0, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 109, 110, 111, 112, 113, 114, 117, 118], "get": [0, 3, 4, 5, 6, 15, 19, 24, 31, 45, 51, 52, 54, 58, 59, 66, 68, 72, 74, 77, 83, 87, 89, 104, 106, 109], "start": [0, 3, 4, 6, 7, 8, 13, 14, 15, 18, 21, 22, 24, 26, 27, 28, 29, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 100, 101, 102, 103, 104, 105, 110, 116, 117, 118], "aleatori": [0, 45, 54, 72, 74, 87, 89], "node": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118], "arrai": [0, 12, 14, 15, 16, 21, 25, 26, 27, 28, 29, 32, 34, 35, 36, 37, 38, 39, 40, 42, 44, 45, 50, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 72, 73, 74, 80, 81, 82, 87, 88, 89, 90, 96, 97, 100, 101, 102, 103, 108, 110, 116, 117, 118], "ani": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118], "integ": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118], "vertic": [0, 6, 8, 14, 15, 16, 18, 19, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 50, 52, 53, 55, 56, 57, 58, 59, 62, 63, 64, 65, 67, 69, 70, 75, 76, 79, 80, 81, 82, 83, 90, 91, 92, 93, 94, 95, 100, 101, 102, 106, 108, 109, 111, 113, 116], "ar": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118], "ignor": [0, 8, 13, 14, 15, 16, 18, 21, 25, 26, 27, 28, 29, 34, 35, 36, 37, 38, 39, 40, 42, 44, 45, 49, 53, 54, 55, 56, 57, 60, 61, 64, 65, 66, 72, 73, 74, 79, 80, 81, 82, 87, 88, 89, 90, 97, 100, 101, 102, 103, 108, 116], "For": [0, 4, 5, 6, 7, 8, 12, 15, 16, 18, 19, 22, 27, 28, 29, 31, 32, 34, 35, 36, 37, 38, 39, 40, 42, 45, 51, 53, 54, 56, 58, 59, 61, 65, 66, 67, 70, 72, 73, 74, 76, 78, 87, 88, 89, 92, 94, 96, 100, 101, 103, 104, 110, 111, 112, 117, 118], "optim": [0, 3, 4, 8, 15, 16, 25, 26, 30, 37, 38, 39, 40, 42, 45, 53, 54, 55, 56, 61, 62, 65, 72, 73, 74, 84, 85, 87, 88, 89, 91, 94, 100, 101, 103], "purpos": [0, 8, 15, 16, 37, 38, 39, 40, 42, 45, 53, 54, 55, 56, 61, 65, 72, 73, 74, 87, 88, 89, 94, 100, 101, 103, 110], "duplic": [0, 8, 13, 14, 15, 16, 18, 26, 37, 38, 39, 40, 42, 44, 45, 53, 54, 55, 56, 57, 61, 64, 65, 72, 73, 74, 77, 80, 81, 82, 87, 88, 89, 90, 100, 101, 102, 103], "where": [0, 3, 4, 5, 6, 7, 8, 9, 12, 14, 15, 16, 18, 20, 21, 24, 25, 26, 27, 28, 29, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 108, 110, 112, 116, 117, 118], "smallint": [0, 4, 6, 9, 14, 15, 16, 18, 20, 21, 24, 27, 28, 29, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 100, 101, 102, 103, 104, 105, 116, 117, 118], "numer": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118], "real": [0, 4, 6, 9, 14, 15, 16, 18, 20, 21, 24, 27, 28, 29, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 100, 101, 102, 103, 104, 105, 108, 116, 117, 118], "float": [0, 4, 5, 6, 9, 12, 14, 15, 16, 18, 20, 21, 24, 25, 26, 27, 28, 29, 30, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 100, 101, 102, 103, 104, 105, 110, 116, 117, 118], "default": [0, 3, 4, 5, 6, 9, 12, 14, 15, 16, 18, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 100, 101, 102, 103, 104, 105, 110, 116, 117, 118], "max_depth": [0, 45, 54, 72, 74, 87, 89], "9223372036854775807": [0, 45, 54, 72, 74, 87, 89], "upper": [0, 14, 16, 39, 45, 54, 57, 61, 72, 73, 74, 81, 82, 87, 88, 89, 96, 102, 103], "limit": [0, 4, 16, 21, 45, 49, 52, 54, 58, 59, 61, 72, 73, 74, 85, 87, 88, 89, 103, 110], "depth": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118], "neg": [0, 6, 8, 9, 14, 15, 16, 18, 20, 21, 24, 27, 28, 29, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 100, 101, 102, 103, 104, 105, 110, 116, 117, 118], "throw": [0, 45, 53, 54, 72, 74, 87, 89, 94, 96], "an": [0, 3, 4, 7, 8, 9, 11, 14, 15, 18, 19, 21, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 72, 74, 76, 77, 83, 84, 85, 87, 89, 91, 92, 95, 96, 97, 100, 101, 102, 105, 108, 109, 110, 111, 112, 113, 116, 117], "error": [0, 31, 32, 45, 51, 52, 54, 72, 74, 87, 89, 94, 96, 108], "id": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118], "sourc": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118], "end": [0, 4, 6, 7, 8, 9, 13, 14, 15, 16, 18, 20, 22, 24, 25, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 108, 110, 116, 117, 118], "point": [0, 4, 5, 6, 9, 11, 15, 16, 18, 19, 20, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 105, 106, 108, 109, 112, 116], "target": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118], "second": [0, 3, 4, 5, 6, 9, 12, 14, 15, 16, 18, 20, 21, 24, 26, 27, 28, 29, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 100, 101, 102, 103, 104, 105, 110, 116, 117, 118], "weight": [0, 4, 6, 9, 14, 15, 16, 18, 20, 21, 24, 27, 28, 29, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 100, 101, 102, 103, 104, 105, 116, 117, 118], "reverse_cost": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118], "1": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 109, 110, 111, 112, 113, 114, 116, 117, 118], "doe": [0, 4, 6, 8, 9, 13, 14, 15, 16, 18, 20, 21, 24, 27, 28, 29, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 100, 102, 104, 105, 108, 116], "exist": [0, 5, 6, 7, 8, 9, 14, 15, 16, 18, 20, 21, 24, 25, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 108, 110, 116, 117, 118], "therefor": [0, 4, 5, 6, 7, 9, 14, 15, 16, 18, 19, 20, 21, 24, 27, 28, 29, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 100, 101, 102, 103, 104, 105, 109, 113, 116, 117, 118], "part": [0, 1, 2, 4, 6, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 23, 24, 27, 28, 29, 30, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 99, 100, 101, 102, 103, 104, 105, 106, 108, 113, 114, 115, 116, 117, 118], "return": [0, 3, 5, 6, 7, 8, 10, 12, 13, 14, 15, 18, 19, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 108, 116], "set": [0, 4, 5, 6, 10, 12, 14, 15, 18, 21, 24, 25, 26, 27, 28, 29, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 110, 112, 116, 117], "OF": [0, 4, 10, 21, 24, 25, 26, 27, 28, 29, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 100, 101, 102, 103, 104], "seq": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118], "start_vid": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118], "agg_cost": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118], "sequenti": [0, 4, 10, 14, 18, 21, 24, 27, 34, 37, 40, 41, 42, 44, 45, 47, 49, 53, 54, 55, 58, 60, 61, 63, 64, 65, 72, 73, 74, 75, 76, 77, 78, 79, 81, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 100, 101, 102, 103, 104, 116, 117, 118], "from": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 99, 100, 101, 102, 103, 104, 105, 106, 108, 110, 114, 115, 116, 117, 118], "reach": [0, 21, 45, 54, 63, 72, 73, 74, 87, 88, 89, 96], "arriv": [0, 4, 15, 18, 21, 27, 28, 34, 35, 37, 38, 40, 42, 44, 45, 53, 54, 55, 56, 58, 59, 61, 63, 64, 65, 72, 73, 74, 80, 81, 82, 84, 85, 87, 88, 89, 90, 100, 101, 103, 104, 110, 117, 118], "aggreg": [0, 4, 5, 6, 8, 13, 14, 15, 18, 19, 21, 24, 25, 26, 27, 28, 29, 34, 35, 36, 37, 38, 39, 40, 42, 44, 45, 47, 53, 54, 55, 56, 57, 58, 59, 61, 63, 64, 65, 67, 70, 72, 73, 74, 81, 82, 87, 88, 89, 90, 97, 100, 101, 102, 103, 104, 109, 116], "boost": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118], "prim": [0, 1, 16, 19, 21, 86, 87, 88, 89, 108, 109, 111], "algorithm": [0, 1, 2, 3, 5, 6, 7, 8, 10, 12, 15, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 50, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 67, 69, 70, 71, 72, 73, 74, 75, 78, 79, 80, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 100, 101, 102, 103, 104, 105, 106, 108, 109, 111, 114, 117, 118], "kruskal": [0, 1, 16, 19, 21, 71, 72, 73, 74, 108, 109, 111], "wikipedia": [0, 1, 3, 4, 5, 7, 10, 18, 20, 21, 24, 25, 26, 27, 33, 34, 37, 38, 40, 41, 42, 43, 45, 46, 49, 53, 54, 55, 56, 58, 59, 60, 62, 64, 65, 71, 72, 73, 74, 75, 76, 77, 79, 80, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 99, 105, 111], "indic": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 111, 112, 113, 114, 115, 116, 117, 118], "tabl": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 20, 22, 24, 25, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 113, 114, 115, 116, 117, 118], "index": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118], "page": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 113, 114, 115, 116, 117, 118], "path_id": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118], "path_seq": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118], "end_vid": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118], "route_agg_cost": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118], "start_pid": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118], "end_pid": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118], "vertex_id": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118], "color_id": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118], "edge_id": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118], "degre": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118], "in_edg": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118], "out_edg": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118], "x": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118], "y": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118], "geom": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118], "fraction": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118], "side": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 102, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116], "distanc": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118], "build_typ": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118], "compile_d": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118], "librari": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118], "system": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118], "postgresql": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118], "compil": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118], "hash": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118], "sorted_v": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118], "target_arrai": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118], "contracted_vertic": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118], "idom": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118], "from_v": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118], "flow": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118], "residual_capac": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118], "mincut": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118], "vehicle_numb": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118], "vehicle_id": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118], "stop": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118], "order_id": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118], "stop_typ": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118], "cargo": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118], "travel_tim": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118], "arrival_tim": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118], "wait_tim": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118], "service_tim": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118], "departure_tim": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118], "pgr_kruskaldf": [1, 19, 20, 108, 109], "pgr_primdf": [1, 19, 105, 108, 109], "propos": [1, 2, 4, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 21, 27, 28, 29, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 47, 48, 51, 53, 55, 56, 57, 62, 63, 64, 65, 69, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 90, 92, 94, 95, 96, 97, 99, 108, 109, 110, 113, 114, 115, 116, 117, 118], "function": [1, 2, 13, 14, 16, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 108, 110, 111, 116, 117], "next": [1, 2, 4, 9, 10, 11, 13, 14, 15, 16, 17, 18, 21, 24, 25, 26, 27, 34, 37, 40, 42, 43, 45, 47, 48, 53, 54, 55, 58, 59, 60, 62, 63, 65, 66, 69, 75, 76, 77, 78, 81, 82, 84, 85, 91, 92, 94, 95, 97, 99, 100, 101, 102, 103, 104, 106, 113, 114, 115, 116, 117, 118], "mayor": [1, 2, 10, 13, 14, 15, 16, 54, 58, 59, 60, 66, 91, 100, 101, 102, 103, 104, 106, 110, 113, 115, 116, 117, 118], "releas": [1, 2, 4, 9, 10, 11, 13, 14, 15, 16, 17, 18, 22, 40, 42, 43, 45, 47, 48, 53, 54, 58, 59, 60, 62, 65, 66, 69, 75, 76, 77, 78, 81, 82, 83, 84, 85, 91, 92, 94, 95, 97, 99, 100, 101, 102, 103, 104, 106, 113, 114, 115, 116, 117, 118], "thei": [1, 2, 4, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 21, 25, 40, 42, 43, 45, 47, 48, 53, 54, 58, 59, 60, 62, 65, 66, 69, 75, 76, 77, 78, 81, 82, 83, 84, 85, 91, 92, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 106, 108, 110, 113, 114, 115, 116, 117, 118], "offici": [1, 2, 4, 9, 10, 11, 13, 14, 15, 16, 17, 18, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 108, 113, 114, 115, 116, 117, 118], "current": [1, 2, 4, 5, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 21, 22, 25, 26, 27, 28, 29, 34, 35, 36, 40, 42, 43, 45, 47, 48, 50, 53, 54, 58, 59, 60, 62, 65, 66, 69, 75, 76, 77, 78, 81, 82, 84, 85, 91, 92, 94, 95, 97, 99, 100, 101, 102, 103, 104, 106, 113, 114, 115, 116, 117, 118], "like": [1, 2, 4, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 40, 42, 43, 45, 47, 48, 53, 54, 58, 59, 60, 62, 65, 66, 69, 75, 76, 77, 78, 81, 82, 83, 84, 85, 91, 92, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 106, 113, 114, 115, 116, 117, 118], "name": [1, 2, 4, 9, 10, 11, 13, 14, 15, 16, 17, 18, 21, 22, 26, 27, 31, 32, 34, 40, 42, 43, 45, 47, 48, 50, 51, 52, 53, 54, 58, 59, 60, 62, 65, 66, 68, 69, 75, 76, 77, 78, 81, 82, 83, 84, 85, 91, 92, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 106, 108, 110, 113, 114, 115, 116, 117, 118], "might": [1, 2, 4, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 21, 25, 31, 32, 40, 42, 43, 45, 47, 48, 50, 51, 52, 53, 54, 58, 59, 60, 62, 65, 66, 69, 75, 76, 77, 78, 81, 82, 84, 85, 91, 92, 94, 95, 97, 99, 100, 101, 102, 103, 104, 106, 110, 112, 113, 114, 115, 116, 117, 118], "chang": [1, 2, 4, 5, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 21, 22, 24, 25, 26, 27, 30, 33, 34, 37, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 58, 59, 60, 61, 62, 65, 66, 67, 69, 70, 75, 76, 77, 78, 81, 82, 84, 85, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 103, 104, 106, 113, 114, 115, 116, 117, 118], "But": [1, 2, 10, 13, 14, 15, 16, 21, 54, 58, 59, 60, 66, 91, 96, 100, 101, 102, 103, 104, 106, 113, 115, 116, 117, 118], "still": [1, 2, 10, 12, 13, 14, 15, 16, 25, 54, 58, 59, 60, 66, 77, 91, 100, 101, 102, 103, 104, 106, 113, 115, 116, 117, 118], "can": [1, 2, 3, 4, 7, 8, 10, 12, 13, 14, 15, 16, 18, 21, 22, 23, 25, 26, 31, 32, 33, 38, 39, 40, 41, 42, 43, 44, 46, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 65, 66, 69, 75, 77, 81, 82, 83, 90, 91, 96, 100, 101, 102, 103, 104, 106, 108, 110, 112, 113, 115, 116, 117, 118], "signatur": [1, 2, 4, 9, 10, 11, 13, 14, 15, 16, 17, 18, 21, 22, 106, 108, 113, 114, 115, 116, 117, 118], "pgtap": [1, 2, 4, 9, 10, 11, 13, 14, 15, 16, 17, 18, 22, 40, 42, 43, 45, 47, 48, 53, 54, 58, 59, 60, 62, 65, 66, 69, 75, 76, 77, 78, 81, 82, 84, 85, 91, 92, 94, 95, 97, 99, 100, 101, 102, 103, 104, 106, 113, 114, 115, 116, 117, 118], "test": [1, 2, 4, 6, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 31, 40, 42, 43, 45, 47, 48, 52, 53, 54, 58, 59, 60, 62, 65, 66, 69, 75, 76, 77, 78, 81, 82, 84, 85, 91, 92, 94, 95, 97, 99, 100, 101, 102, 103, 104, 106, 108, 112, 113, 114, 115, 116, 117, 118], "have": [1, 2, 3, 4, 10, 12, 13, 14, 15, 16, 19, 21, 22, 23, 27, 31, 32, 34, 40, 42, 52, 54, 58, 59, 60, 61, 62, 72, 73, 74, 77, 83, 84, 85, 87, 88, 89, 91, 92, 96, 97, 100, 101, 102, 103, 104, 106, 108, 109, 110, 112, 113, 115, 116, 117, 118], "being": [1, 2, 10, 13, 14, 15, 16, 54, 58, 59, 60, 66, 91, 96, 100, 101, 102, 103, 104, 106, 108, 113, 115, 116, 117, 118], "need": [1, 2, 4, 5, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 21, 22, 31, 40, 42, 43, 45, 47, 48, 49, 51, 52, 53, 54, 58, 59, 60, 62, 65, 66, 69, 75, 76, 77, 78, 81, 82, 84, 85, 91, 92, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 106, 110, 113, 114, 115, 116, 117, 118], "more": [1, 2, 4, 6, 10, 12, 13, 14, 15, 16, 19, 21, 22, 25, 33, 40, 42, 53, 54, 58, 59, 60, 62, 66, 67, 70, 77, 84, 85, 91, 94, 96, 97, 100, 101, 102, 103, 104, 106, 108, 110, 113, 115, 116, 117, 118], "document": [1, 2, 4, 9, 10, 11, 12, 13, 14, 16, 17, 21, 22, 23, 40, 42, 43, 45, 47, 48, 49, 53, 54, 58, 59, 60, 62, 65, 66, 68, 69, 75, 76, 77, 78, 79, 81, 82, 84, 85, 86, 87, 88, 89, 91, 92, 94, 95, 97, 98, 99, 100, 101, 102, 103, 104, 106, 108, 110, 112, 113, 114, 115, 116], "refin": [1, 2, 10, 12, 13, 14, 15, 16, 54, 58, 59, 60, 66, 91, 100, 101, 102, 103, 104, 106, 113, 115, 116, 117, 118], "pgr_depthfirstsearch": [1, 106, 108, 115], "In": [1, 12, 14, 15, 18, 21, 23, 31, 40, 44, 49, 51, 52, 53, 58, 59, 62, 64, 66, 77, 81, 82, 90, 92, 96, 100, 101, 102, 103, 104, 110, 112, 116, 117, 118], "gener": [1, 4, 9, 10, 11, 12, 17, 23, 26, 32, 40, 42, 43, 45, 47, 48, 51, 53, 62, 65, 66, 69, 75, 76, 77, 78, 81, 82, 83, 84, 85, 92, 94, 95, 96, 97, 99, 108, 110, 112, 114, 115], "edg": [1, 2, 3, 4, 5, 7, 8, 10, 11, 13, 17, 19, 20, 22, 23, 25, 26, 30, 32, 68, 83, 84, 85, 98, 99, 105, 106, 107, 108, 109, 111, 112, 113, 114, 115], "result": [1, 4, 5, 13, 15, 16, 20, 21, 31, 32, 40, 45, 51, 52, 53, 54, 65, 82, 84, 85, 96, 105, 108, 111, 117, 118], "2": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118], "unsupport": [2, 3, 5, 6, 7, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 44, 46, 49, 50, 51, 52, 55, 56, 57, 60, 61, 63, 64, 67, 70, 76, 77, 79, 80, 83, 85, 90, 93, 96, 98, 99, 100, 101, 102, 103, 104, 106, 108, 109, 110, 112, 113, 114, 118], "5": [2, 3, 4, 5, 6, 7, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 109, 110, 112, 113, 117, 118], "4": [2, 3, 4, 5, 6, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 109, 110, 112, 113, 117, 118], "6": [2, 3, 4, 5, 6, 7, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 109, 110, 112, 113, 114, 117, 118], "pgr_ksp": [2, 15, 19, 108, 109, 118], "yen": [2, 15, 19, 24, 97, 104, 106, 109], "base": [2, 4, 5, 7, 8, 10, 15, 16, 17, 19, 24, 31, 49, 51, 52, 55, 66, 76, 77, 83, 93, 106, 108, 109, 110, 113, 117, 118], "pgr_dijkstra": [2, 5, 8, 12, 15, 19, 21, 27, 28, 29, 34, 35, 36, 37, 38, 39, 57, 66, 77, 96, 108, 109, 118], "pgr_withpointsksp": [2, 106, 108, 118], "pgr_withpoint": [2, 16, 21, 96, 102, 106, 108, 118], "pgr_tsp": [3, 14, 19, 29, 36, 39, 57, 108, 109], "input": [3, 6, 12, 14, 17, 19, 30, 39, 57, 77, 78, 81, 82, 95, 102, 109, 114, 118], "given": [3, 4, 6, 12, 14, 15, 18, 19, 21, 22, 25, 26, 31, 51, 52, 58, 59, 60, 66, 76, 77, 84, 85, 96, 100, 101, 102, 103, 104, 109, 113, 114, 116, 117, 118], "matrix": [3, 5, 6, 7, 8, 15, 17, 19, 21, 29, 36, 39, 57, 67, 70, 102, 106, 108, 109], "cell": [3, 19, 109], "pgr_tspeuclidean": [3, 19, 108, 109], "coordin": [3, 5, 7, 19, 21, 25, 27, 28, 29, 34, 35, 36, 109, 110], "salesperson": [3, 25, 26], "ask": [3, 19, 22, 25, 26, 112], "follow": [3, 4, 6, 9, 12, 15, 18, 19, 21, 22, 23, 25, 26, 31, 47, 48, 49, 50, 51, 52, 55, 58, 59, 66, 69, 77, 79, 83, 84, 85, 91, 95, 96, 97, 108, 109, 110, 112, 113, 117, 118], "question": [3, 21, 25, 26, 112], "list": [3, 19, 25, 26, 60, 61, 78, 96, 103, 108, 116], "citi": [3, 25, 110, 117, 118], "between": [3, 4, 6, 12, 15, 18, 19, 25, 26, 40, 42, 58, 59, 60, 63, 65, 67, 70, 77, 83, 84, 85, 92, 95, 109, 116, 117], "pair": [3, 4, 13, 14, 19, 21, 25, 26, 28, 35, 38, 39, 56, 57, 66, 67, 70, 84, 85, 101, 102, 108, 109, 110], "which": [3, 4, 6, 18, 21, 25, 26, 27, 34, 42, 43, 47, 48, 54, 61, 67, 69, 70, 77, 78, 79, 81, 83, 84, 85, 91, 92, 96, 103, 110, 112, 117], "shortest": [3, 5, 6, 7, 8, 12, 13, 14, 15, 19, 24, 25, 26, 27, 28, 34, 35, 37, 38, 39, 40, 42, 47, 53, 54, 55, 56, 57, 58, 59, 60, 65, 67, 70, 97, 100, 101, 102, 104, 106, 108, 109, 116, 118], "possibl": [3, 4, 9, 10, 11, 12, 17, 18, 19, 20, 21, 25, 26, 40, 42, 43, 45, 47, 48, 53, 54, 62, 65, 69, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 91, 92, 94, 95, 97, 99, 105, 111, 114, 115, 117], "rout": [3, 12, 15, 17, 19, 22, 23, 24, 25, 26, 52, 58, 59, 83, 84, 85, 97, 106, 108, 110, 113, 116, 117, 118], "visit": [3, 4, 21, 25, 26, 54, 72, 74, 87, 89, 116], "exactli": [3, 25, 26, 32, 92], "onc": [3, 21, 22, 25, 26, 54, 66, 75], "wa": [3, 6, 12, 21, 23, 31, 32, 51, 52, 66, 68, 77, 83, 96, 105, 108, 110, 117], "studi": 3, "18th": 3, "centuri": 3, "mathematician": [3, 105], "sir": 3, "william": 3, "rowam": 3, "hamilton": 3, "thoma": 3, "penyngton": 3, "kirkman": 3, "A": [3, 4, 8, 12, 15, 18, 19, 21, 23, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 43, 46, 49, 51, 52, 55, 56, 58, 59, 69, 77, 78, 79, 83, 84, 85, 92, 93, 96, 99, 103, 108, 109, 110, 111], "discuss": 3, "about": [3, 21, 22, 24, 32, 49, 60, 68, 96, 97, 100, 104, 110, 112], "work": [3, 4, 5, 6, 7, 13, 14, 21, 27, 28, 33, 34, 35, 39, 41, 43, 45, 46, 49, 54, 57, 58, 59, 75, 77, 78, 79, 93, 94, 96, 102, 108, 110, 117, 118], "found": [3, 12, 21, 22, 23, 31, 32, 42, 51, 52, 60, 83, 84, 85, 92, 97, 101, 112, 116], "book": 3, "theori": [3, 21, 92], "bigg": 3, "et": 3, "al": [3, 21], "1976": 3, "isbn": 3, "13": [3, 6, 12, 21, 24, 25, 26, 27, 34, 37, 40, 41, 42, 43, 45, 47, 49, 50, 51, 52, 53, 54, 58, 59, 60, 61, 62, 63, 65, 66, 67, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 83, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 99, 100, 104, 110], "978": 3, "0198539162": 3, "10": [3, 4, 6, 12, 21, 24, 25, 26, 27, 28, 29, 31, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 108, 110, 117, 118], "0198539169": 3, "believ": 3, "form": [3, 6, 14, 21, 31, 51, 52, 67, 70, 97, 101, 105, 113, 116], "been": [3, 4, 21, 22, 51, 52, 66, 83, 108, 112, 117], "kalr": 3, "menger": 3, "vienna": 3, "harvard": 3, "later": [3, 23], "promot": [3, 54, 58, 59, 91, 108], "hassler": 3, "whitnei": 3, "merril": 3, "princeton": [3, 37, 38], "detail": [3, 11, 17, 18, 19, 22, 68, 100, 101, 102, 103, 104, 109, 117, 118], "develop": [3, 21, 22, 23, 66, 105, 108, 112], "On": [3, 12, 25, 26, 58, 59, 77, 96, 110, 112], "histori": 3, "combinatori": 3, "till": 3, "1960": 3, "To": [3, 4, 21, 22, 25, 49, 66, 83, 108, 110], "calcul": [3, 4, 7, 8, 12, 15, 16, 17, 18, 19, 21, 24, 25, 29, 36, 39, 44, 47, 48, 57, 63, 64, 66, 67, 69, 70, 73, 75, 78, 79, 80, 81, 82, 88, 90, 97, 101, 102, 104, 109, 110], "number": [3, 4, 5, 6, 12, 21, 24, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 42, 46, 50, 51, 52, 58, 59, 62, 78, 79, 81, 82, 83, 84, 85, 91, 97, 104, 111, 117], "differ": [3, 5, 7, 8, 14, 15, 21, 22, 25, 26, 27, 28, 34, 35, 37, 38, 39, 40, 43, 45, 49, 52, 53, 54, 55, 56, 57, 65, 84, 85, 100, 101, 102, 108, 110, 117, 118], "tour": [3, 25], "through": [3, 12, 18, 21, 44, 60, 64, 81, 82, 90, 91, 96, 112, 117], "n": [3, 24, 96, 97, 104], "There": [3, 4, 5, 7, 12, 18, 21, 27, 28, 34, 35, 44, 49, 64, 66, 79, 80, 81, 82, 83, 84, 85, 90, 101, 102, 110, 112, 117], "choic": [3, 67, 70], "And": [3, 4, 21, 23, 49, 51, 108], "third": [3, 21], "etc": [3, 23, 96, 108, 117, 118], "multipli": [3, 4, 84, 85], "togeth": [3, 78, 96], "we": [3, 6, 19, 22, 31, 32, 42, 51, 52, 67, 70, 77, 83, 96], "now": [3, 12, 21, 23, 49, 77, 83, 108], "sinc": 3, "do": [3, 12, 21, 22, 25, 32, 66, 83, 84, 85, 96, 97, 106, 108, 110, 112, 113], "depend": [3, 4, 5, 9, 10, 11, 13, 14, 17, 18, 19, 21, 38, 39, 40, 42, 43, 45, 47, 48, 53, 56, 57, 62, 65, 69, 75, 76, 77, 78, 81, 82, 84, 85, 92, 94, 95, 96, 97, 99, 102, 108, 110, 113, 114, 115, 116, 117, 118], "direct": [3, 5, 6, 7, 8, 9, 11, 14, 15, 18, 19, 21, 23, 24, 25, 27, 28, 29, 32, 34, 35, 36, 37, 38, 39, 40, 42, 44, 45, 47, 48, 50, 53, 54, 56, 57, 58, 59, 60, 61, 63, 64, 65, 67, 70, 75, 76, 77, 79, 80, 81, 82, 90, 93, 94, 95, 96, 97, 100, 101, 102, 103, 104, 108, 109, 113, 117, 118], "taken": [3, 21, 25, 83, 97, 116], "around": 3, "thi": [3, 4, 5, 6, 7, 8, 12, 14, 15, 18, 19, 21, 22, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 40, 42, 46, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 62, 65, 66, 68, 69, 71, 77, 81, 83, 85, 86, 91, 92, 96, 98, 102, 105, 108, 110, 112, 114, 115, 116, 117, 118], "np": [3, 4, 25, 26, 62, 84, 85, 91], "hard": [3, 4, 25, 26, 62, 84, 85, 91], "metric": [3, 25, 26], "solut": [3, 4, 21, 25, 26, 49, 84, 85, 108], "twice": [3, 25, 26], "long": [3, 25, 26, 31, 51, 52], "worst": [3, 25, 26, 65], "case": [3, 6, 8, 13, 14, 15, 18, 21, 25, 26, 28, 32, 35, 37, 38, 39, 40, 49, 56, 57, 60, 65, 66, 67, 70, 81, 82, 83, 96, 100, 102, 110], "fulli": [3, 21, 25, 26, 49], "obei": [3, 25, 26], "triangl": [3, 14, 25, 26, 30, 39, 57, 102], "inequ": [3, 25, 26], "symmetr": [3, 6, 12, 13, 14, 25, 26, 28, 29, 35, 36, 38, 39, 56, 57, 67, 70, 101, 102], "u": [3, 5, 6, 7, 8, 12, 13, 14, 15, 16, 21, 22, 23, 25, 26, 27, 28, 29, 34, 35, 36, 37, 38, 39, 53, 55, 56, 57, 65, 67, 70, 73, 77, 81, 82, 83, 88, 94, 100, 101, 102, 112], "v": [3, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 16, 18, 21, 25, 26, 27, 28, 29, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 53, 54, 55, 56, 57, 58, 59, 62, 64, 65, 66, 67, 69, 70, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 100, 101, 102, 105, 110, 114], "just": [3, 25, 26, 58, 59], "much": [3, 25, 26, 81, 82, 108], "column": [3, 8, 9, 15, 16, 19, 20, 32, 83, 96, 105, 108, 110, 117, 118], "start_id": [3, 25, 26], "becom": [3, 4, 25, 26, 117, 118], "end_id": [3, 25, 26], "last": [3, 21, 24, 25, 26, 27, 34, 37, 40, 42, 47, 53, 55, 58, 60, 63, 65, 96, 97, 100, 104, 116], "befor": [3, 4, 22, 25, 26, 83, 84, 85, 94, 108], "NOT": [3, 25, 26, 44, 63, 64, 77, 80, 81, 82, 85, 90, 99, 108, 110], "refer": [3, 4, 19, 31, 32, 51, 52, 68, 98, 108, 109], "appro": [3, 25, 26], "approxim": [3, 25, 26], "univers": [3, 23, 26], "waterloo": [3, 26], "salesman": [3, 4, 25, 26], "server": [4, 6, 9, 10, 11, 17, 18, 22, 23, 40, 42, 43, 45, 47, 48, 53, 62, 65, 69, 75, 76, 77, 78, 81, 82, 84, 85, 92, 94, 95, 97, 99, 108, 112, 114, 115], "crash": [4, 9, 10, 11, 17, 18, 40, 42, 43, 45, 47, 48, 53, 62, 65, 69, 75, 76, 77, 78, 81, 82, 84, 85, 92, 94, 95, 97, 99, 108, 114, 115], "These": [4, 9, 10, 11, 17, 18, 23, 40, 42, 43, 45, 47, 48, 53, 62, 65, 69, 75, 76, 77, 78, 81, 82, 84, 85, 92, 94, 95, 96, 97, 99, 106, 113, 114, 115], "creat": [4, 6, 8, 9, 10, 11, 12, 15, 16, 17, 18, 19, 22, 31, 32, 40, 42, 43, 44, 45, 47, 48, 52, 53, 62, 64, 65, 69, 72, 73, 74, 75, 76, 78, 81, 82, 83, 84, 85, 87, 88, 89, 90, 92, 94, 95, 96, 97, 99, 108, 109, 110, 112, 113, 114, 115], "miss": [4, 9, 10, 11, 17, 18, 21, 25, 40, 42, 43, 45, 47, 48, 53, 60, 62, 65, 69, 75, 76, 77, 78, 81, 82, 84, 85, 92, 94, 95, 96, 97, 99, 114, 115, 116], "c": [4, 6, 9, 10, 11, 12, 17, 18, 21, 22, 23, 37, 38, 40, 42, 43, 45, 47, 48, 49, 53, 62, 65, 69, 75, 76, 77, 78, 81, 82, 84, 85, 92, 94, 95, 96, 97, 99, 108, 114, 115], "code": [4, 9, 10, 11, 12, 17, 18, 22, 23, 40, 42, 43, 45, 47, 48, 53, 62, 65, 66, 69, 75, 76, 77, 78, 81, 82, 83, 84, 85, 92, 94, 95, 96, 97, 99, 108, 112, 114, 115], "mai": [4, 9, 10, 11, 17, 18, 21, 31, 32, 40, 41, 42, 43, 45, 47, 48, 51, 52, 53, 62, 65, 69, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 92, 94, 95, 97, 99, 114, 115], "lack": [4, 9, 10, 11, 17, 18, 40, 42, 43, 45, 47, 48, 53, 62, 65, 69, 75, 76, 77, 78, 81, 82, 84, 85, 92, 94, 95, 97, 99, 114, 115], "rewritten": [4, 9, 10, 11, 17, 18, 40, 42, 43, 45, 47, 48, 53, 62, 65, 69, 75, 76, 77, 78, 81, 82, 84, 85, 92, 94, 95, 97, 99, 114, 115], "exampl": [4, 9, 10, 11, 12, 17, 18, 19, 22, 30, 33, 41, 46, 47, 48, 58, 59, 62, 67, 68, 70, 71, 72, 73, 74, 76, 78, 79, 84, 86, 87, 88, 89, 91, 93, 95, 98, 108, 110, 114, 115, 117, 118], "automat": [4, 9, 10, 11, 14, 17, 18, 21, 40, 42, 43, 45, 47, 48, 53, 62, 65, 69, 75, 76, 77, 78, 81, 82, 84, 85, 92, 94, 95, 97, 99, 100, 101, 102, 103, 104, 114, 115, 117, 118], "lot": [4, 9, 10, 11, 17, 18, 21, 40, 42, 43, 45, 47, 48, 53, 62, 65, 69, 75, 76, 77, 78, 81, 82, 84, 85, 92, 94, 95, 97, 99, 114, 115], "feedback": [4, 9, 10, 11, 17, 18, 40, 42, 43, 45, 47, 48, 53, 62, 65, 69, 75, 76, 77, 78, 81, 82, 84, 85, 92, 94, 95, 97, 99, 114, 115], "comun": [4, 9, 10, 11, 17, 18, 40, 42, 43, 45, 47, 48, 53, 62, 65, 69, 75, 76, 77, 78, 81, 82, 84, 85, 92, 94, 95, 97, 99, 114, 115], "pgrout": [4, 6, 9, 10, 11, 17, 18, 22, 23, 40, 42, 43, 45, 47, 48, 53, 62, 65, 66, 68, 69, 75, 76, 77, 78, 81, 82, 83, 84, 85, 91, 92, 94, 95, 96, 97, 98, 99, 110, 112, 113, 114, 115], "deprec": [4, 9, 10, 11, 17, 18, 40, 42, 43, 45, 47, 48, 53, 62, 65, 69, 75, 76, 77, 78, 81, 82, 84, 85, 92, 94, 95, 97, 99, 108, 114, 115], "pickup": [4, 17, 84, 85, 110], "problem": [4, 5, 17, 18, 19, 21, 31, 32, 42, 47, 48, 51, 52, 53, 55, 56, 57, 62, 66, 83, 84, 85, 91, 92, 96, 102, 108, 110, 116, 117, 118], "pgr_pickdeliv": [4, 17, 108], "pgr_pickdelivereuclidean": [4, 17, 108], "euclidean": [4, 17], "distribut": [4, 17, 84, 85], "pgr_vrponedepot": [4, 17, 108], "singl": [4, 17, 41, 42, 50, 65, 108, 111], "depot": [4, 17], "vrp": [4, 108], "generalis": 4, "travel": [4, 14, 19, 25, 26, 29, 36, 39, 57, 77, 84, 85, 100, 101, 102, 109], "tsp": [4, 108], "object": 4, "minim": [4, 20, 42, 54, 71, 72, 73, 74, 81, 105, 108], "total": [4, 6, 12, 20, 28, 30, 35, 50, 56, 60, 71, 72, 73, 74, 81, 82, 83, 84, 85, 105, 116, 117, 118], "sever": [4, 21, 22, 61, 103, 108], "variant": [4, 96], "try": [4, 21, 60, 83, 116], "all": [4, 16, 18, 19, 20, 21, 22, 23, 24, 25, 31, 32, 42, 44, 49, 50, 51, 52, 54, 58, 59, 60, 61, 62, 64, 65, 66, 71, 72, 73, 74, 75, 77, 78, 79, 81, 82, 83, 84, 85, 88, 90, 91, 92, 93, 96, 97, 100, 103, 104, 105, 108, 109, 110, 111, 112, 116, 117, 118], "capacit": [4, 85], "cvrp": 4, "carri": 4, "good": [4, 21, 58, 59, 65, 67, 70], "window": [4, 22, 84, 85, 108], "vrptw": 4, "within": [4, 16, 21, 43, 58, 59, 61, 73, 83, 88, 103, 117], "must": [4, 9, 14, 18, 19, 21, 31, 32, 47, 48, 66, 81, 82, 84, 94, 109, 113], "made": [4, 77, 84, 85, 96, 108], "vrppd": 4, "move": [4, 108, 110], "certain": 4, "other": [4, 15, 19, 21, 23, 42, 43, 49, 62, 65, 66, 83, 92, 93, 96, 101, 102, 104, 108, 112, 116, 117], "No": [4, 12, 16, 21, 29, 36, 73, 83, 84, 85, 88, 96, 97, 99, 104, 108], "multipl": [4, 27, 30, 32, 34, 37, 40, 41, 42, 53, 55, 63, 65, 83, 84, 85, 92, 108], "less": [4, 5, 16, 27, 28, 29, 30, 34, 35, 36, 61, 73, 84, 85, 88, 103], "consid": [4, 6, 12, 14, 15, 21, 24, 25, 27, 28, 29, 30, 34, 35, 36, 37, 38, 39, 40, 42, 45, 50, 54, 55, 56, 57, 58, 59, 60, 61, 63, 65, 67, 69, 70, 76, 78, 83, 84, 85, 96, 97, 100, 101, 102, 103, 104, 112, 117, 118], "better": [4, 84, 85, 108], "durat": [4, 84, 85], "wait": [4, 31, 32, 51, 52, 83, 84, 85], "cvrppdtw": 4, "rel": [4, 14, 15, 21, 24, 27, 34, 37, 40, 42, 53, 55, 58, 60, 63, 65, 84, 85, 97, 100, 101, 102, 103, 104, 116, 117, 118], "servic": [4, 22, 84, 85, 110, 112], "open": [4, 21, 84, 85, 110], "close": [4, 21, 84, 85, 108, 110], "request": [4, 13, 23, 28, 35, 38, 56, 108], "custom": [4, 84, 85], "speed": [4, 5, 12, 21, 51, 52, 65, 84, 85, 110], "same": [4, 5, 6, 7, 8, 13, 14, 15, 18, 21, 25, 26, 27, 28, 31, 32, 34, 35, 37, 38, 39, 40, 42, 43, 44, 45, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 64, 65, 67, 70, 77, 80, 81, 82, 83, 84, 85, 90, 92, 95, 100, 101, 102, 110, 117, 118], "max_cycl": [4, 12, 50, 84, 85], "maximum": [4, 12, 18, 19, 44, 54, 63, 64, 79, 80, 81, 82, 84, 85, 90, 91, 109], "cycl": [4, 20, 40, 43, 53, 84, 85], "perform": [4, 19, 26, 29, 31, 32, 36, 50, 51, 52, 66, 83, 84, 85, 108], "initial_sol": [4, 84, 85], "initi": [4, 84, 85], "One": [4, 6, 77, 84, 85, 108], "per": [4, 21, 58, 59, 84, 85], "truck": [4, 84, 85, 108], "push": [4, 18, 19, 80, 84, 85, 90, 109], "front": [4, 84, 85, 110], "back": [4, 19, 32, 84, 85, 96, 108], "insert": [4, 12, 26, 43, 49, 69, 77, 83, 84, 85, 96, 99, 110, 117, 118], "allow": [4, 5, 12, 21, 58, 59, 84, 85, 96, 97, 108, 110, 116], "common": [4, 19, 21, 23, 76, 79, 83, 112], "both": [4, 14, 21, 22, 32, 40, 49, 54, 58, 59, 83, 96, 100, 101, 102, 103, 104, 108, 110, 117, 118], "p_open": [4, 84, 85, 110], "p_close": [4, 84, 85, 110], "p_servic": [4, 84, 85, 110], "load": [4, 84, 85], "d_open": [4, 84, 85, 110], "d_close": [4, 84, 85, 110], "d_servic": [4, 84, 85, 110], "unload": [4, 84, 85], "p_node_id": [4, 84, 85, 110], "match": [4, 18, 19, 32, 79, 84, 108, 109], "d_node_id": [4, 84, 85, 110], "p_x": [4, 85, 110], "p_y": [4, 85, 110], "d_x": [4, 85, 110], "d_y": [4, 85, 110], "maiximum": [4, 84, 85], "start_open": [4, 84, 85, 110], "start_clos": [4, 84, 85, 110], "start_servic": [4, 84, 85], "end_open": [4, 84, 85], "end_clos": [4, 84, 85], "end_servic": [4, 84, 85], "start_node_id": [4, 84], "end_node_id": [4, 84], "start_x": [4, 85, 110], "start_i": [4, 85, 110], "end_x": [4, 85], "end_i": [4, 85], "vehicle_seq": [4, 84, 85], "stop_seq": [4, 84, 85], "union": [4, 12, 21, 27, 34, 49, 58, 59, 66, 84, 85, 94, 108], "n_": [4, 84, 85], "th": [4, 84, 85, 100], "sumari": [4, 84, 85], "ha": [4, 12, 18, 21, 22, 24, 25, 27, 31, 32, 34, 37, 40, 41, 42, 43, 49, 50, 51, 52, 53, 55, 58, 60, 63, 65, 66, 69, 77, 83, 84, 85, 92, 93, 95, 96, 97, 104, 108, 110, 112, 116, 117], "violat": [4, 84, 85, 97], "happen": [4, 21, 32, 77, 83, 84, 85, 95, 96], "overload": [4, 19, 84, 85], "underload": [4, 84, 85], "m_": [4, 84, 85], "after": [4, 12, 21, 22, 31, 32, 40, 51, 52, 66, 83, 84, 85, 110], "kind": [4, 21, 30, 84, 85, 116, 117], "involv": [4, 12, 21, 22, 77, 84, 85, 96, 117], "leav": [4, 32, 84, 85], "previou": [4, 8, 51, 84, 85, 108], "sum": [4, 6, 13, 14, 18, 28, 35, 38, 39, 56, 57, 67, 70, 84, 85, 92, 101, 102], "spent": [4, 84, 85], "depart": [4, 21, 58, 59, 60, 84, 85, 104, 116], "_time": [4, 84, 85], "continu": [4, 54], "sequenc": [4, 12, 15, 21, 24, 25, 26, 27, 32, 34, 37, 40, 42, 47, 50, 53, 55, 58, 60, 63, 65, 77, 96, 97, 100, 104, 110, 116], "defin": [4, 15, 18, 21, 31, 32, 40, 51, 52, 96, 100, 101, 104], "consider": 4, "consist": [4, 21, 49, 66, 78, 110, 111], "section": [4, 12, 21, 31, 55, 60, 77, 116, 117, 118], "give": [4, 12, 21, 23, 76, 78, 108, 117], "insight": 4, "how": [4, 19, 26, 77, 112, 117, 118], "measur": 4, "volum": 4, "m": [4, 5], "area": [4, 21, 30, 32], "stack": 4, "kg": 4, "box": [4, 6, 67, 70], "fit": [4, 108], "seat": 4, "equal": [4, 16, 18, 61, 62, 73, 84, 88, 103, 117, 118], "dimens": 4, "appl": 4, "feather": 4, "transport": [4, 21, 66], "pack": 4, "If": [4, 5, 7, 14, 15, 21, 22, 27, 28, 34, 35, 42, 43, 66, 75, 84, 100, 101, 102, 103, 104, 112, 117, 118], "convers": [4, 5, 21, 32], "show": [4, 12, 21, 26, 45, 49, 54, 58, 59, 85, 117, 118], "let": [4, 5, 6, 7, 13, 14, 27, 28, 29, 34, 35, 36, 38, 39, 56, 57, 67, 70, 83, 102], "f": [4, 6, 12, 32, 51, 69, 83], "_box": 4, "_weight": 4, "convert": [4, 14, 21, 77, 85, 100, 101, 102, 103, 104, 108, 110, 117, 118], "suppos": [4, 21], "driver": 4, "shift": 4, "9": [4, 6, 12, 21, 24, 25, 26, 27, 30, 34, 37, 40, 41, 42, 43, 44, 45, 47, 49, 50, 51, 52, 53, 54, 58, 60, 61, 62, 63, 64, 65, 66, 72, 73, 74, 75, 76, 77, 79, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 96, 97, 99, 100, 102, 103, 104, 110], "00": 4, "am": 4, "30": [4, 6, 26, 44, 47, 63, 64, 76, 81, 84, 85, 90, 99, 100, 110], "pm": 4, "minut": 4, "mean": [4, 83, 105, 110], "min": [4, 5, 14, 17, 18, 25, 27, 28, 29, 34, 35, 36, 39, 57, 92, 102, 108], "sec": 4, "hour": 4, "16": [4, 6, 12, 21, 24, 25, 26, 27, 31, 34, 37, 40, 41, 42, 43, 44, 45, 47, 49, 50, 51, 52, 53, 54, 58, 59, 60, 61, 62, 63, 64, 65, 66, 69, 71, 72, 73, 74, 75, 76, 77, 79, 81, 83, 84, 85, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 99, 100, 103, 104, 110, 117, 118], "60": [4, 6, 81, 85, 99, 100, 110], "175": [4, 99], "54": [4, 30, 85, 100, 108, 110], "990": 4, "7": [4, 6, 12, 21, 22, 24, 25, 26, 27, 28, 31, 33, 34, 35, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 79, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 108, 110, 117, 118], "540": 4, "act": 4, "alreadi": [4, 96, 112], "desir": [4, 21, 24], "should": [4, 21, 23, 25, 26, 66, 79, 96], "faster": [4, 7, 8, 21, 37, 38, 39, 42, 65, 108], "slower": [4, 40], "lat": [4, 5], "lon": [4, 5], "would": [4, 5, 6, 13, 14, 21, 28, 31, 32, 33, 35, 38, 39, 40, 49, 51, 52, 56, 57, 67, 70, 92, 101, 102], "averag": [4, 5, 6, 14, 39, 57, 65, 102], "veloc": 4, "sai": [4, 5, 23, 96], "25m": [4, 5], "latitud": [4, 5], "45": [4, 5, 6, 85, 100, 110], "longitud": [4, 5], "78846": [4, 5], "81m": [4, 5], "3153": [4, 5], "111319": [4, 5], "46": [4, 5, 85, 100, 110], "4452": [4, 5], "d": [4, 6, 12, 85, 91, 110], "t": [4, 12, 21, 31, 32, 40, 44, 51, 52, 63, 64, 69, 80, 81, 82, 83, 90, 92, 96, 108], "equival": [4, 27, 33, 34, 44, 60, 63, 64, 80, 81, 82, 90], "10m": 4, "approx": 4, "600m": 4, "36": [4, 63, 76, 85, 96, 100, 110], "km": 4, "hr": 4, "meter": [4, 5], "1000m": 4, "lenght": 4, "frac": [4, 21], "100": [4, 31, 32, 44, 51, 52, 64, 77, 81, 85, 90, 96, 110], "600": [4, 81, 85, 110], "0016min": 4, "6min": 4, "0277hr": 4, "1km": 4, "http": [4, 5, 6, 7, 12, 18, 19, 22, 23, 24, 27, 34, 37, 38, 40, 42, 44, 46, 53, 55, 56, 58, 59, 60, 64, 65, 69, 76, 77, 78, 79, 80, 81, 82, 85, 90, 92, 94, 95, 99, 108, 110, 112], "en": [4, 5, 7, 18, 24, 27, 34, 37, 38, 40, 42, 46, 53, 55, 56, 58, 59, 60, 64, 65, 76, 77, 79, 80, 90, 92, 94, 95, 99], "org": [4, 5, 7, 18, 19, 22, 23, 24, 27, 34, 37, 38, 40, 42, 44, 46, 53, 55, 56, 58, 59, 60, 64, 65, 69, 76, 77, 78, 79, 80, 81, 82, 90, 92, 94, 95, 99, 108, 112], "wiki": [4, 5, 7, 18, 22, 23, 24, 27, 34, 37, 38, 40, 42, 46, 53, 55, 56, 58, 59, 60, 64, 65, 66, 76, 77, 79, 80, 90, 92, 94, 95, 99], "vehicle_routing_problem": [4, 99], "sampl": [4, 19, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 65, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 91, 92, 93, 94, 95, 96, 97, 100, 101, 102, 103, 104, 117, 118], "data": [4, 19, 24, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 65, 67, 69, 70, 71, 72, 73, 74, 75, 76, 78, 83, 84, 85, 86, 87, 88, 89, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 108, 117, 118], "network": [4, 12, 18, 19, 23, 26, 30, 31, 32, 33, 41, 42, 43, 46, 49, 51, 52, 55, 58, 59, 60, 61, 62, 67, 70, 71, 76, 77, 78, 83, 85, 86, 87, 91, 93, 96, 101, 104, 108, 110, 113], "pronounc": [5, 7], "star": [5, 7, 96, 108], "dijkstra": [5, 16, 19, 21, 24, 25, 37, 38, 39, 40, 42, 53, 55, 56, 57, 60, 61, 96, 100, 101, 102, 103, 104, 106, 108, 109, 117, 118], "solv": [5, 15, 21, 29, 36, 39, 42, 53, 55, 56, 57, 66, 84, 85, 92, 96, 102, 108, 116], "most": [5, 21, 22, 23, 24, 58, 59, 62, 92, 97, 104, 105, 108], "path": [5, 6, 7, 8, 12, 13, 14, 15, 18, 19, 22, 24, 25, 26, 27, 28, 29, 34, 35, 36, 37, 38, 39, 40, 42, 44, 47, 48, 53, 54, 56, 57, 58, 59, 63, 64, 65, 67, 70, 78, 80, 81, 82, 90, 97, 100, 101, 102, 103, 104, 106, 108, 109, 110, 116, 117, 118], "evalu": [5, 108], "sub": [5, 21], "overal": 5, "pgr_astar": [5, 7, 19, 29, 36, 108, 109], "pgr_astarcost": [5, 13, 19, 108, 109], "pgr_astarcostmatrix": [5, 14, 19, 108, 109], "main": [5, 6, 7, 8, 9, 13, 14, 15, 18, 20, 21, 23, 27, 28, 29, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 53, 54, 57, 62, 63, 64, 65, 67, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 105, 108], "characterist": [5, 6, 7, 9, 15, 18, 20, 27, 28, 29, 30, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 53, 54, 57, 62, 64, 65, 67, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 105, 110, 111], "order": [5, 7, 12, 13, 14, 17, 21, 25, 26, 27, 28, 29, 31, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 45, 46, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 62, 65, 66, 67, 70, 71, 72, 73, 74, 75, 77, 83, 86, 87, 88, 89, 91, 93, 94, 95, 96, 100, 101, 102, 103, 104, 108, 116], "correspond": [5, 7, 16, 27, 28, 29, 31, 32, 34, 35, 36, 61, 73, 76, 88, 103, 110], "row": [5, 6, 7, 12, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 110, 117, 118], "infti": [5, 7, 8, 14, 15, 27, 28, 34, 35, 37, 38, 39, 40, 53, 55, 56, 57, 65, 101, 102], "random": [5, 7, 25, 26, 27, 28, 29, 34, 35, 36, 65], "select": [5, 6, 7, 12, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 110, 117, 118], "run": [5, 7, 8, 9, 15, 20, 27, 28, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 53, 54, 55, 56, 58, 59, 62, 64, 65, 67, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 100, 101, 105, 108], "time": [5, 6, 7, 8, 9, 12, 15, 20, 21, 23, 27, 28, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 53, 54, 55, 56, 58, 59, 62, 64, 65, 67, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 100, 101, 105, 110], "o": [5, 6, 7, 8, 9, 15, 20, 22, 27, 28, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 53, 54, 55, 56, 58, 59, 62, 64, 65, 69, 70, 71, 72, 73, 74, 75, 78, 79, 80, 81, 82, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 100, 101, 105], "e": [5, 6, 7, 8, 9, 12, 15, 18, 20, 21, 27, 28, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 53, 54, 55, 56, 58, 59, 62, 64, 65, 66, 70, 71, 72, 73, 74, 75, 77, 78, 79, 81, 82, 86, 87, 88, 89, 92, 93, 94, 95, 100, 101, 105, 110, 114], "log": [5, 7, 8, 15, 20, 27, 28, 34, 35, 37, 38, 39, 42, 51, 55, 56, 58, 59, 66, 70, 71, 72, 73, 74, 75, 86, 87, 88, 89, 92, 100, 101, 105], "valid": [5, 21, 27, 28, 29, 34, 35, 36, 40, 53, 94, 95], "h": [5, 27, 28, 29, 34, 35, 36], "compar": [5, 26, 27, 28, 29, 34, 35, 36, 85, 108], "ab": [5, 27, 28, 29, 34, 35, 36, 100], "max": [5, 14, 18, 19, 27, 28, 29, 34, 35, 36, 39, 57, 77, 81, 82, 83, 102, 108, 109, 110], "delta": [5, 27, 28, 29, 34, 35, 36, 62], "sqrt": [5, 27, 28, 29, 30, 34, 35, 36, 99], "unit": [5, 27, 28, 29, 31, 34, 35, 36, 51, 83, 84, 85, 112], "manipul": [5, 27, 28, 29, 34, 35, 36], "epsilon": [5, 27, 28, 29, 34, 35, 36], "restrict": [5, 19, 27, 28, 29, 34, 35, 36, 108, 109], "avail": [5, 7, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 112], "handl": [5, 7, 27, 28, 29, 34, 35, 36, 84, 85, 117], "x_1": 5, "x_0": 5, "y_1": 5, "y_0": 5, "analysi": [5, 19, 23, 31, 32, 83], "length": [5, 26, 43], "locat": [5, 84, 85, 108, 110, 117, 118], "81": [5, 85, 110], "bidirect": [5, 19, 21, 27, 34, 35, 36, 37, 38, 39, 108, 109], "www": [5, 6, 7, 12, 22, 23, 27, 34, 37, 38, 44, 58, 59, 64, 69, 78, 79, 80, 81, 82, 85, 90, 110, 112], "lib": [5, 7, 27, 34, 44, 58, 59, 64, 69, 78, 79, 80, 81, 82, 90], "doc": [5, 7, 22, 27, 34, 44, 58, 59, 64, 69, 78, 79, 80, 81, 82, 90, 108], "astar_search": [5, 7, 27, 34], "html": [5, 7, 22, 27, 34, 42, 44, 58, 59, 64, 69, 78, 79, 80, 81, 82, 90], "_search_algorithm": [5, 7, 27, 34], "combin": [6, 13, 14, 39, 57, 92, 102, 108], "pgr_floydwarshal": [6, 19, 70, 108, 109], "floyd": [6, 19, 67, 70, 109], "warshal": [6, 19, 67, 70, 109], "pgr_johnson": [6, 19, 67, 108, 109], "johnson": [6, 19, 70, 109], "infin": [6, 67, 70, 97], "repres": [6, 9, 12, 21, 43, 47, 48, 50, 67, 69, 70, 76, 79, 103, 104, 113, 116], "non": [6, 8, 14, 15, 37, 38, 39, 42, 53, 54, 55, 56, 57, 65, 67, 70, 92, 96, 100, 101, 102], "store": [6, 13, 14, 21, 28, 31, 32, 35, 38, 39, 56, 57, 67, 70, 101, 102, 110, 117], "so": [6, 12, 13, 16, 21, 28, 32, 35, 38, 51, 56, 62, 67, 70, 73, 83, 88, 104, 108, 112], "uniqu": [6, 13, 14, 28, 35, 38, 39, 56, 57, 67, 70, 83, 101, 102, 110], "recommend": [6, 21, 32, 67, 70, 110, 112], "bound": [6, 21, 32, 67, 70, 81, 82], "than": [6, 7, 8, 12, 16, 21, 24, 25, 30, 33, 37, 38, 39, 40, 53, 58, 59, 61, 62, 65, 67, 70, 73, 77, 81, 82, 84, 88, 92, 94, 96, 97, 103, 104], "3500": [6, 67, 70], "boolean": [6, 12, 14, 15, 21, 24, 27, 28, 29, 32, 34, 35, 36, 37, 38, 39, 40, 42, 45, 50, 51, 54, 55, 56, 57, 58, 59, 60, 61, 63, 65, 66, 67, 69, 70, 76, 96, 97, 100, 101, 102, 103, 104, 108, 116, 117, 118], "true": [6, 12, 14, 15, 21, 24, 25, 27, 28, 29, 31, 32, 34, 35, 36, 37, 38, 39, 40, 42, 45, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 63, 65, 66, 67, 69, 70, 76, 81, 83, 96, 97, 100, 101, 102, 103, 104, 116, 117, 118], "fals": [6, 12, 14, 15, 21, 24, 25, 27, 28, 29, 34, 35, 36, 37, 38, 39, 40, 42, 45, 50, 51, 54, 55, 56, 57, 58, 59, 60, 61, 63, 65, 66, 67, 69, 70, 76, 96, 97, 100, 101, 102, 103, 104, 116, 117, 118], "comput": [6, 15, 16, 19, 40, 55, 56, 57, 61, 65, 96, 102, 109], "amd": 6, "64": [6, 85, 108, 110], "cpu": 6, "4g": 6, "memori": 6, "trusti": 6, "posgresql": 6, "bbox": 6, "122": 6, "8": [6, 12, 21, 24, 25, 26, 27, 28, 31, 33, 34, 35, 37, 40, 41, 42, 43, 44, 45, 47, 49, 50, 51, 52, 53, 54, 58, 59, 60, 61, 62, 63, 64, 65, 66, 72, 73, 74, 75, 76, 77, 79, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 110, 117, 118], "wget": [6, 22], "progress": 6, "dot": 6, "mega": 6, "sampledata": [6, 21], "osm": [6, 21, 66], "overpass": [6, 83], "api": 6, "de": 6, "xapi": 6, "meta": 6, "osm2pgrout": [6, 21, 23, 66], "alpha": [6, 16, 19, 30, 61, 79, 108, 109], "createdb": [6, 21, 22], "portland": 6, "psql": [6, 21, 22], "extens": [6, 21, 22, 23, 108], "postgi": [6, 19, 21, 22, 23, 30, 108, 112], "densiti": 6, "pass": [6, 30, 31, 51, 52, 83, 96, 108], "extrem": 6, "low": 6, "size": [6, 12, 21, 50, 60, 92], "were": [6, 12, 77, 83, 96, 108], "execut": [6, 12, 18, 21, 31, 44, 52, 64, 81, 82, 90, 96, 108, 110], "count": [6, 31, 32, 83], "gid": [6, 31, 51, 52], "wai": [6, 19, 21, 31, 32, 49, 51, 52, 66, 94, 113, 118], "present": [6, 14, 21, 41, 62, 75, 77, 91, 100, 101, 102, 103, 104, 117, 118], "record": [6, 12], "dfrac": 6, "out": [6, 12, 17, 21, 22, 32, 66, 114], "500": 6, "18e": 6, "1346": 6, "14": [6, 12, 21, 22, 24, 25, 26, 27, 28, 34, 35, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 56, 58, 60, 61, 62, 63, 64, 65, 66, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 96, 97, 99, 100, 104, 110], "1000": 6, "36e": 6, "2655": 6, "23": [6, 12, 26, 47, 61, 63, 76, 77, 85, 100, 104, 110], "18": [6, 12, 21, 24, 26, 27, 31, 32, 34, 37, 40, 41, 42, 46, 47, 49, 51, 52, 61, 62, 63, 65, 66, 71, 76, 77, 79, 83, 84, 85, 92, 99, 100, 104, 110], "1500": 6, "55e": 6, "4110": 6, "37": [6, 63, 76, 77, 85, 100, 110], "34": [6, 47, 48, 63, 76, 84, 85, 99, 100, 110], "2000": 6, "73e": 6, "5676": 6, "56": [6, 22, 30, 85, 100, 108, 110], "2500": 6, "89e": 6, "7177": 6, "84": [6, 85, 110], "51": [6, 85, 99, 100, 110], "3000": 6, "07e": 6, "8778": 6, "28": [6, 26, 47, 63, 76, 77, 85, 100, 104, 110], "68": [6, 85, 110], "24e": 6, "10526": 6, "08": 6, "95": [6, 85, 99, 110], "4000": 6, "41e": 6, "12484": 6, "24": [6, 26, 47, 63, 76, 77, 83, 85, 96, 100, 104, 108, 110], "4500": 6, "58e": 6, "14354": 6, "49": [6, 85, 100, 110], "47": [6, 85, 100, 110], "5000": [6, 26], "76e": 6, "16503": 6, "05": [6, 31, 51], "78": [6, 85, 110], "5500": 6, "93e": 6, "18623": 6, "53": [6, 85, 96, 100, 108, 110], "03": [6, 22], "6000": 6, "11e": 6, "20710": 6, "6500": 6, "28e": 6, "22752": 6, "99": [6, 85, 110], "7000": 6, "46e": 6, "24687": 6, "11": [6, 12, 21, 22, 24, 25, 26, 27, 34, 37, 40, 41, 42, 43, 44, 45, 47, 49, 51, 52, 53, 54, 58, 59, 60, 61, 62, 63, 64, 65, 66, 69, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 108, 110, 117, 118], "82": [6, 85, 110], "12": [6, 12, 21, 24, 25, 26, 27, 28, 29, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 99, 100, 102, 103, 104, 108, 110, 117, 118], "7500": 6, "64e": 6, "26861": 6, "94": [6, 85, 99, 110], "8000": 6, "83e": 6, "29050": 6, "15": [6, 12, 21, 24, 25, 26, 27, 28, 29, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 110, 117, 118], "61": [6, 85, 100, 110], "09": 6, "8500": 6, "01e": 6, "31693": 6, "17": [6, 12, 21, 24, 25, 26, 27, 31, 34, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 60, 61, 62, 63, 64, 65, 66, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 100, 103, 104, 110, 117, 118], "43": [6, 85, 100, 110], "63": [6, 85, 100, 110], "9000": 6, "17e": 6, "33879": 6, "19": [6, 12, 24, 26, 27, 34, 37, 40, 47, 61, 63, 65, 76, 77, 85, 100, 104, 110], "9500": 6, "35e": 6, "36287": 6, "20": [6, 12, 21, 24, 25, 26, 27, 34, 37, 40, 44, 47, 49, 61, 63, 64, 65, 66, 76, 77, 81, 84, 85, 90, 99, 100, 104, 108, 110], "77": [6, 85, 110], "10000": 6, "52e": 6, "38491": 6, "26": [6, 26, 47, 63, 76, 77, 85, 100, 104, 110], "two": [6, 7, 8, 12, 18, 19, 20, 21, 43, 50, 58, 59, 62, 63, 66, 69, 76, 77, 78, 83, 91, 92, 96, 100, 101, 108, 109, 112, 113, 117, 118], "higher": 6, "WITH": [6, 12, 21, 26, 49, 51, 52, 66, 77, 85, 99, 110], "buffer": 6, "AS": [6, 12, 21, 26, 27, 28, 31, 34, 35, 37, 38, 40, 42, 44, 49, 51, 52, 53, 55, 56, 58, 59, 63, 64, 65, 66, 77, 79, 80, 81, 82, 84, 85, 90, 94, 96, 99, 100, 101, 110], "st_buffer": [6, 21, 31, 49, 51, 52], "st_centroid": 6, "st_extent": 6, "the_geom": [6, 31, 32, 51, 52, 83, 108], "st_envelop": 6, "001": [6, 31, 32, 51, 83], "44": [6, 85, 100, 110], "0608": 6, "1197": 6, "002": 6, "0251": 6, "4330": 6, "003": 6, "223": 6, "0122": 6, "18849": 6, "004": 6, "358": [6, 85, 110], "0085": 6, "71834": 6, "005": 6, "470": 6, "0070": 6, "116290": 6, "22": [6, 12, 26, 27, 34, 37, 40, 47, 61, 63, 65, 76, 77, 85, 99, 100, 104, 110], "006": 6, "639": 6, "0055": 6, "207030": 6, "27": [6, 12, 26, 47, 63, 76, 77, 85, 99, 100, 104, 110], "007": 6, "843": 6, "0043": 6, "346930": 6, "38": [6, 12, 63, 76, 85, 100, 110], "008": 6, "996": 6, "0037": 6, "469936": 6, "90": [6, 85, 110], "009": 6, "1146": 6, "0032": 6, "613135": 6, "62": [6, 85, 99, 100, 110], "010": 6, "1360": 6, "0027": 6, "849304": 6, "87": [6, 85, 110], "011": 6, "1573": 6, "0024": 6, "1147101": 6, "65": [6, 85, 110], "04": [6, 108], "012": 6, "1789": 6, "0021": 6, "1483629": 6, "72": [6, 85, 110], "35": [6, 47, 63, 76, 77, 85, 99, 100, 110], "013": 6, "1975": 6, "0019": 6, "1846897": 6, "86": [6, 85, 110], "014": 6, "2281": 6, "0017": 6, "2438298": 6, "015": 6, "2588": 6, "0015": 6, "3156007": 6, "80": [6, 40, 44, 64, 80, 81, 85, 90, 92, 99, 110], "016": 6, "2958": 6, "0013": 6, "4090618": 6, "67": [6, 85, 110], "76": [6, 85, 110], "017": 6, "3247": 6, "0012": 6, "4868919": 6, "48": [6, 85, 100, 110], "pgr_bdastar": [7, 19, 36, 108, 109], "obtain": [7, 18, 19, 21, 26, 66, 97, 109], "pgr_bdastarcost": [7, 13, 19, 108, 109], "pgr_bdastarcostmatrix": [7, 14, 19, 108, 109], "simultan": [7, 8], "one": [7, 8, 12, 21, 25, 32, 33, 49, 58, 59, 62, 66, 77, 78, 79, 92, 94, 105, 108, 110, 113, 116, 118], "forward": [7, 8], "backward": [7, 8, 108], "meet": [7, 8], "middl": [7, 8], "larg": [7, 8, 12, 21, 37, 38, 39], "bewtween": [7, 8, 37, 38, 39], "expect": [7, 8, 37, 38, 39, 51, 52, 96], "termin": [7, 8, 37, 38, 39], "heurist": [7, 27, 28, 29, 34, 35, 36], "factor": [7, 21, 27, 28, 29, 34, 35, 36, 66, 84, 85, 108], "pgr_bddijkstra": [8, 19, 39, 108, 109], "pgr_bddijkstracost": [8, 13, 19, 108, 109], "pgr_bddijkstracostmatrix": [8, 14, 19, 108, 109], "interpret": [8, 15, 37, 38, 39, 42, 55, 56, 117, 118], "includ": [8, 12, 14, 15, 16, 21, 22, 23, 25, 37, 38, 39, 50, 53, 55, 56, 57, 65, 73, 77, 83, 88, 96, 100, 101, 102, 103, 104, 105, 111, 112, 117, 118], "wors": [8, 25, 37, 38, 39], "scenario": [8, 31, 37, 38, 39, 51, 52], "pgr_chinesepostman": [9, 17, 108], "pgr_chinesepostmancost": [9, 17, 108], "logv": [9, 47, 48, 81, 82], "pgr_sequentialvertexcolor": [10, 106, 108], "greedi": [10, 20, 91, 105, 106], "approach": [10, 17, 49, 91, 106], "experiment": [10, 11, 18, 19, 21, 33, 41, 44, 46, 49, 50, 54, 58, 59, 63, 64, 66, 79, 90, 91, 93, 106, 108, 110, 115], "pgr_bipartit": [10, 17, 108], "bipartit": [10, 17, 43, 62], "df": [10, 17, 19, 49, 93, 109, 115], "pgr_edgecolor": [10, 17, 108], "vize": [10, 17, 62], "theorem": [10, 17, 62], "is_bipartit": [10, 43], "pgr_connectedcompon": [11, 19, 21, 92, 95, 108, 109], "pgr_strongcompon": [11, 19, 108, 109], "strongli": [11, 19, 21, 32, 93, 109], "pgr_biconnectedcompon": [11, 19, 108, 109], "biconnect": [11, 19, 33, 41, 109], "pgr_articulationpoint": [11, 19, 108, 109], "articul": [11, 19, 33, 109], "pgr_bridg": [11, 19, 108, 109], "bridg": [11, 19, 21, 46, 66, 109], "pgr_makeconnect": [11, 17, 108], "pgr_contract": [12, 19, 21, 109], "road": [12, 21, 66, 83, 96, 108], "electr": [12, 21, 66], "some": [12, 21, 22, 23, 25, 32, 40, 50, 62, 77, 108, 110, 113, 117, 118], "reduc": [12, 21, 50], "remov": [12, 22, 33, 41, 46, 49, 50, 79, 93, 96, 108, 117, 118], "origin": [12, 18, 21, 25, 26, 44, 49, 50, 64, 76, 79, 81, 83, 90, 96, 108, 117, 118], "decreas": [12, 40, 50], "space": [12, 50, 69], "flexibl": 12, "framework": 12, "ad": [12, 30, 50, 78, 96, 105, 108, 110, 117, 118], "futur": [12, 108], "user": [12, 14, 19, 21, 22, 23, 39, 51, 52, 57, 102, 108, 109, 112, 113], "forbid": [12, 77], "decid": [12, 83], "leaf": 12, "adjac": [12, 43, 54, 62, 76, 77], "outgo": [12, 18, 31, 32, 44, 51, 52, 64, 81, 82, 90], "least": [12, 20, 30, 62, 91, 92, 108, 112], "incom": [12, 18, 31, 32, 44, 51, 52, 64, 81, 82, 90], "condit": [12, 31, 32, 51, 52, 108], "green": 12, "blue": [12, 43, 69, 110, 117, 118], "unlimit": 12, "adjec": 12, "b": [12, 14, 21, 32, 58, 59, 66, 78, 96, 99, 100, 101, 102, 103, 104, 110, 117, 118], "w": 12, "abov": [12, 21, 22, 75, 96], "becaus": [12, 21, 25, 31, 32, 51, 52, 58, 59, 69, 77, 83, 97, 110], "further": [12, 21, 49], "check": [12, 19, 22, 31, 32, 43, 51, 52, 81, 83, 96, 108], "those": [12, 21, 32, 33, 40, 78, 83, 96, 110, 117], "even": [12, 21, 66, 96], "until": [12, 54, 92], "contrct": 12, "white": 12, "symetr": 12, "go": [12, 15, 21, 22, 24, 25, 27, 34, 37, 40, 42, 47, 53, 55, 58, 60, 63, 65, 66, 77, 79, 83, 96, 97, 100, 104, 108, 116], "rightarrow": [12, 21, 25, 43, 55, 58, 59, 66], "z": 12, "ye": 12, "new": [12, 16, 22, 23, 26, 27, 28, 29, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 108, 112, 114, 117, 118], "red": [12, 33, 110, 117, 118], "color": [12, 17, 43, 62, 91, 106, 108], "affect": [12, 51, 52, 117, 118], "appli": [12, 108], "anoth": [12, 21, 42, 66, 75, 96, 105, 118], "operations_ord": 12, "output": [12, 18, 44, 64, 81, 82, 83, 90, 117], "build": [12, 19, 51, 68, 105, 108], "shown": [12, 96], "queri": [12, 19, 31, 52, 83, 84, 96, 98, 110], "BY": [12, 21, 25, 26, 43, 45, 49, 51, 54, 58, 59, 60, 62, 66, 67, 70, 71, 72, 73, 74, 75, 77, 83, 86, 87, 88, 89, 91, 95, 100, 101, 102, 103, 104, 110], "observ": 12, "appear": [12, 61, 66, 94, 103, 112], "extra": [12, 108, 112], "edge_t": [12, 31, 32, 51, 52, 83, 96, 108], "edge_table_vertices_pgr": 12, "is_contract": 12, "its": [12, 13, 14, 38, 39, 46, 51, 56, 57, 69, 75, 76, 91, 92, 96, 102, 117], "is_new": 12, "alter": [12, 21, 22, 32, 49, 51, 66, 77, 83, 110], "INTO": [12, 21, 26, 43, 49, 51, 66, 69, 77, 85, 99, 110], "contraction_result": 12, "IN": [12, 21, 25, 29, 36, 39, 44, 57, 63, 64, 66, 77, 80, 81, 82, 90, 92, 95, 100, 108], "unnest": [12, 51, 58, 59, 66], "fill": [12, 21, 31, 32, 51, 52, 110], "tha": 12, "AND": [12, 21, 25, 31, 32, 52, 60, 66, 77], "modifi": [12, 19, 50, 100, 101, 103, 104, 106, 108, 109, 113, 117], "21": [12, 26, 27, 34, 37, 40, 47, 61, 63, 65, 76, 77, 83, 85, 100, 104, 110], "vertices_in_graph": 12, "three": [12, 21, 49, 78], "line": [12, 17, 21, 25, 58, 59, 69, 76, 77, 96, 114], "OR": [12, 21, 24, 25, 26, 27, 28, 29, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 49, 53, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 70, 71, 75, 76, 77, 78, 79, 81, 86, 90, 91, 92, 93, 94, 97, 100, 101, 102, 103, 104], "replac": [12, 85, 96, 108], "my_dijkstra": 12, "departur": [12, 15, 18, 21, 24, 27, 28, 34, 35, 37, 38, 40, 42, 44, 53, 55, 56, 58, 59, 63, 64, 65, 80, 81, 82, 90, 97, 100, 101, 104, 117, 118], "destin": [12, 18, 21, 63, 96, 104], "setof": [12, 66, 96], "bodi": 12, "languag": [12, 108], "sql": [12, 22, 96, 108, 112], "volatil": 12, "expand": 12, "25": [12, 25, 26, 32, 47, 63, 76, 77, 85, 96, 99, 100, 104, 110], "edges_to_expand": 12, "40": [12, 63, 76, 77, 85, 99, 100, 110], "vertices_to_expand": 12, "cmu": 12, "edu": [12, 37, 38], "af": 12, "academ": 12, "class": 12, "15210": 12, "f12": 12, "lectur": 12, "lecture16": 12, "pdf": [12, 22, 37, 38], "algo2": 12, "iti": 12, "kit": 12, "routeplan": 12, "geisberger_dipl": 12, "pgr_dijkstracost": [13, 15, 19, 108, 109, 118], "pgr_dijkstranearcost": [13, 15, 19, 58, 106, 108, 109], "pgr_withpointscost": [13, 106, 108, 118], "famili": [13, 14, 17, 21, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 44, 47, 48, 49, 50, 51, 52, 56, 57, 58, 59, 60, 63, 64, 66, 71, 72, 73, 74, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 93, 100, 101, 102, 104, 106, 108, 111, 117], "belong": [13, 14, 27, 33, 34, 39, 41, 42, 49, 57, 93, 95, 100, 101, 102, 108, 118], "paramet": [13, 18, 19, 96, 108], "ascend": [13, 14, 28, 33, 35, 38, 39, 40, 41, 42, 45, 46, 49, 50, 53, 54, 56, 57, 62, 65, 91, 93, 100, 101, 102], "pgr_dijkstracostmatrix": [14, 15, 19, 25, 84, 108, 109, 118], "pgr_withpointscostmatrix": [14, 25, 106, 108, 118], "sale": [14, 19, 25, 26, 29, 36, 39, 57, 102, 109], "person": [14, 19, 21, 25, 26, 29, 36, 39, 57, 102, 109], "collect": [14, 30, 108], "directli": [14, 19, 22, 39, 57, 102, 109, 113], "respons": [14, 39, 57, 102], "By": [14, 18, 39, 44, 57, 64, 81, 82, 90, 102], "geometr": [14, 39, 57, 78, 102], "harmon": [14, 39, 57, 102], "mirror": [14, 39, 57, 102], "imag": [14, 26, 39, 45, 54, 57, 102, 117, 118], "lower": [14, 39, 57, 96, 102], "fix": [14, 21, 25, 39, 50, 57, 66, 83, 96, 102, 108, 110, 117], "pid": [14, 21, 25, 96, 100, 101, 102, 103, 104, 110, 117, 118], "intern": [14, 21, 96, 100, 101, 102, 103, 104, 108, 117, 118], "null": [14, 21, 31, 32, 49, 51, 52, 66, 77, 83, 85, 97, 99, 100, 101, 102, 103, 104, 110, 116, 117, 118], "closest": [14, 61, 100, 101, 102, 103, 104, 108, 117, 118], "postit": [14, 21, 100, 101, 102, 103, 104, 117, 118], "char": [14, 21, 49, 100, 101, 102, 103, 104, 110, 117, 118], "r": [14, 21, 49, 96, 100, 101, 102, 103, 104, 110, 117, 118], "l": [14, 21, 22, 49, 76, 96, 100, 101, 102, 103, 104, 110, 117, 118], "right": [14, 21, 45, 49, 54, 83, 102, 103, 110], "left": [14, 21, 45, 54, 66, 77, 102, 103, 110], "pgr_drivingdist": [15, 16, 19, 30, 103, 108, 109, 118], "catchament": [15, 19, 73, 88, 109], "inform": [15, 19, 22, 25, 31, 32, 51, 52, 68, 72, 74, 77, 85, 87, 89, 96, 98, 106, 108, 109, 110, 113, 117], "k": [15, 19, 24, 91, 97, 104, 106, 108, 109, 118], "pgr_dijkstravia": [15, 21, 96, 106, 108, 116], "seuenc": [15, 106], "pgr_dijkstranear": [15, 21, 59, 77, 106, 108], "nearest": [15, 58, 59, 106, 110], "conceiv": [15, 55, 56, 57, 102], "dutch": [15, 55, 56, 57, 102], "scientist": [15, 55, 56, 57, 102], "edsger": [15, 55, 56, 57, 102], "1956": [15, 40, 55, 56, 57, 102], "produc": [15, 53, 54, 55, 56, 57, 62, 91, 95, 102, 105], "start_": 15, "end_": 15, "id_i": [15, 18], "source_i": [15, 18, 21], "target_i": [15, 18, 21], "cost_i": 15, "revers": [15, 18, 21, 32, 55, 76, 77, 83, 96, 110], "_cost_i": 15, "bigcup": [15, 18], "g_d": [15, 21], "defini": 15, "cup": [15, 18, 21, 55], "begin": [15, 18, 21, 24, 27, 34, 37, 40, 42, 53, 55, 58, 60, 63, 65, 97, 99, 104, 116], "quad": [15, 18], "_cost": [15, 25], "varnoth": [15, 18], "neq": [15, 18, 21], "g_u": 15, "start_v": [15, 47], "g": [15, 18, 21, 22, 62, 76, 108, 111, 114], "if6": 15, "if5": 15, "Then": [15, 18, 22, 92, 96], "boldsymbol": [15, 18], "pi": 15, "_seq_i": 15, "node_i": 15, "edge_i": 15, "agg": [15, 25], "_seq_": 15, "node_1": 15, "node_": 15, "foral": 15, "id_": 15, "cost_": [15, 21], "displaystyl": 15, "sum_": 15, "node_k": 15, "word": [15, 21, 116], "term": [15, 21, 42, 65, 66], "_seq": 15, "empti": [15, 18, 21, 24, 27, 28, 29, 30, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 49, 50, 53, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 67, 70, 71, 75, 76, 77, 78, 79, 81, 82, 83, 86, 90, 91, 92, 93, 94, 96, 97, 101, 102, 103, 104, 108, 116], "pgr_primdd": [16, 19, 105, 108, 109], "pgr_kruskaldd": [16, 19, 20, 108, 109], "post": [16, 19, 109, 117, 118], "pocess": [16, 19, 109], "pgr_alphashap": [16, 19, 61, 103, 108, 109], "shape": [16, 19, 30, 61, 109], "pgr_withpointsdd": [16, 106, 108, 118], "extract": [16, 22, 61, 66, 72, 73, 74, 87, 88, 89, 96, 103, 106, 113], "conform": [16, 61, 73, 88, 103], "inclus": [16, 61, 73, 88, 103], "pgr_maxflowmincost": [17, 18, 21, 82, 108], "pgr_maxflowmincost_cost": [17, 18, 21, 108], "chines": [17, 47, 48, 108], "postman": [17, 47, 48, 108], "transform": [17, 25, 76, 95, 117], "pgr_linegraph": [17, 108, 114], "pgr_linegraphful": [17, 108, 114], "pgr_breadthfirstsearch": [17, 108, 115], "breath": [17, 72, 87, 115], "pgr_binarybreadthfirstsearch": [17, 108, 115], "categori": [17, 20, 21, 24, 25, 28, 29, 35, 36, 39, 45, 54, 57, 60, 71, 72, 73, 74, 84, 85, 86, 87, 88, 89, 97, 100, 102, 104, 105, 106, 108, 110, 115, 118], "vehicl": [17, 21, 32, 66, 117], "deliveri": [17, 84, 85, 110], "Not": [17, 96], "classifi": [17, 66, 108], "pgr_bellmanford": [17, 108], "pgr_dagshortestpath": [17, 108], "pgr_edwardmoor": [17, 108], "pgr_isplanar": [17, 108], "pgr_stoerwagn": [17, 108], "pgr_topologicalsort": [17, 108], "pgr_transitiveclosur": [17, 108], "pgr_turnrestrictedpath": [17, 108, 110], "pgr_lengauertarjandominatortre": [17, 108], "pgr_maxflow": [18, 19, 44, 64, 81, 82, 90, 108, 109], "relabel": [18, 19, 80, 90, 109], "pgr_boykovkolmogorov": [18, 19, 21, 63, 64, 90, 108, 109], "boykov": [18, 19, 44, 109], "kolmogorov": [18, 19, 44, 109], "pgr_edmondskarp": [18, 19, 21, 44, 90, 108, 109], "edmond": [18, 19, 64, 109], "karp": [18, 19, 64, 109], "pgr_pushrelabel": [18, 19, 21, 44, 64, 80, 108, 109], "applic": [18, 19, 21, 66, 69, 77, 91, 109, 110, 113, 117], "pgr_edgedisjointpath": [18, 19, 108, 109], "disjoint": [18, 19, 43, 63, 92, 109], "group": [18, 19, 63, 66, 83, 109], "pgr_maxcardinalitymatch": [18, 19, 108, 109], "cardin": [18, 19, 79, 109], "capac": [18, 21, 44, 49, 64, 66, 80, 81, 82, 84, 85, 90, 99, 110], "residu": [18, 21, 44, 64, 81, 82, 90], "zero": [18, 44, 64, 81, 82, 90], "omit": [18, 21, 31, 44, 51, 52, 64, 81, 82, 90], "super": [18, 44, 64, 81, 82, 90], "guarante": [18, 44, 54, 64, 81, 82, 90], "actual": [18, 21, 66], "vari": [18, 21], "reverse_capac": [18, 21, 44, 49, 64, 66, 80, 81, 82, 90, 110], "int": [18, 21, 44, 47, 64, 79, 81, 90, 92], "edges_sql": [18, 21, 44, 49, 64, 81, 90, 100, 101], "send": [18, 21, 81], "exce": 18, "addition": 18, "except": [18, 21, 84, 96, 97, 110, 116], "sink": [18, 32], "_sql": 18, "_vertex": 18, "capacity_i": 18, "_capacity_i": 18, "definit": [18, 30, 110], "_capac": 18, "pgr": [18, 51, 52, 70], "_maxflow": 18, "phi": 18, "_id_i": 18, "flow_i": 18, "subset": [18, 31, 41, 51, 52, 92, 105], "particular": [18, 41, 45, 53, 54], "_id": 18, "maximum_flow_problem": 18, "extend": [19, 21, 23], "geospati": [19, 23], "databas": [19, 23, 106, 109, 110, 113, 117], "provid": [19, 22, 45, 54, 62, 66, 91, 96, 110, 112], "manual": [19, 21, 23, 27, 28, 34, 35, 37, 38, 40, 42, 44, 53, 55, 56, 63, 64, 65, 80, 81, 82, 90], "v3": [19, 22], "licens": [19, 83], "under": [19, 23, 83, 112, 115], "creativ": [19, 23], "attribut": [19, 21, 23, 66, 113], "share": [19, 23, 76, 83], "alik": [19, 23], "feel": 19, "free": [19, 62], "materi": [19, 21, 66], "you": [19, 22, 32, 42, 83, 96, 112], "credit": 19, "project": [19, 21, 23, 31, 51, 83, 108], "wherev": 19, "link": 19, "see": [19, 21, 108, 112], "introduct": 19, "contributor": 19, "instal": [19, 21, 108], "short": [19, 108], "enabl": 19, "upgrad": 19, "configur": 19, "also": [19, 21, 108, 112], "report": [19, 32, 108], "mail": 19, "gi": [19, 83], "stackexchang": 19, "commerci": 19, "without": [19, 22, 40, 79, 96, 108], "geometri": [19, 30, 31, 32, 51, 52, 83, 108, 109, 113], "topologi": [19, 31, 32, 52, 78, 83, 103, 104, 106, 108, 109], "structur": [19, 31, 32, 51, 52, 108, 110], "inner": [19, 30], "tip": 19, "contribut": [19, 23, 108, 112], "contract": [19, 108, 109, 113], "pgr_kruskal": [19, 20, 21, 108, 109], "pgr_prim": [19, 21, 105, 108, 109], "pgr_version": [19, 22, 68, 107, 108, 109], "pgr_full_vers": [19, 98, 107, 109], "special": [19, 109, 113], "permiss": [19, 109, 113], "administr": [19, 77, 109, 113], "them": [19, 21, 22, 40, 94, 96, 109, 113, 117, 118], "pgr_createtopologi": [19, 31, 32, 52, 83, 109, 113], "pgr_createverticest": [19, 31, 32, 51, 66, 108, 109, 113], "reconstruct": [19, 52, 109, 113], "pgr_analyzegraph": [19, 32, 51, 52, 83, 109, 113], "analyz": [19, 21, 31, 32, 52, 66, 83, 97, 109, 113], "pgr_analyzeonewai": [19, 31, 51, 52, 83, 109, 113], "direction": [19, 21, 32, 52, 77, 83, 109, 113], "pgr_nodenetwork": [19, 31, 108, 109, 113], "pgr_trsp": [19, 21, 108, 109], "turn": [19, 21, 22, 66, 77, 108, 109], "trsp": [19, 108, 109], "drive": [19, 102, 106, 108, 109], "bf": [19, 42, 45, 109, 115], "insid": [20, 24, 25, 26, 27, 28, 29, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 49, 50, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 67, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 100, 101, 102, 103, 104, 105], "add": [20, 21, 22, 23, 32, 49, 50, 78, 83, 112, 117, 118], "simpl": [21, 32, 108, 110], "guid": [21, 22, 23], "step": [21, 22, 77, 83, 100, 105, 112], "cover": 21, "call": [21, 33, 61, 69, 75, 77, 96, 103, 105, 108, 110], "subseteq": 21, "mid": 21, "requir": [21, 22, 24, 25, 31, 32, 49, 51, 52, 66, 97, 104, 108, 112, 117], "With": [21, 25, 26, 49, 96, 108], "manner": [21, 91], "decis": 21, "source_": 21, "target_": 21, "ge": 21, "leftrightarrow": 21, "align": 21, "_cost_": 21, "four": [21, 117, 118], "relationship": 21, "genealogi": 21, "file": [21, 22, 23, 108], "normal": 21, "come": [21, 66, 79, 85, 94, 110], "associ": [21, 22, 83, 113], "although": 21, "visual": [21, 108, 110, 117, 118], "look": [21, 32, 112], "draw": [21, 69], "scale": 21, "access": 21, "cascad": [21, 99], "basic": [21, 49, 83, 105], "element": [21, 97, 116], "design": [21, 66, 108, 110], "serial": [21, 66, 110], "goe": [21, 54, 60, 66], "thru": [21, 66], "pgr_extractvertic": [21, 51, 77, 106, 108, 110, 113], "typic": 21, "your": [21, 22, 31, 32, 52, 112], "small": [21, 24, 97, 104, 110], "variou": 21, "tool": [21, 22, 32, 108], "help": [21, 112, 113], "shp2pgsql": 21, "shapefil": 21, "loader": 21, "ogr2ogr": 21, "vector": 21, "util": [21, 63, 108], "osm2pgsql": 21, "pleas": [21, 22, 31, 32, 51, 52, 83, 112], "note": [21, 22, 31, 42, 51, 112], "import": [21, 66, 108], "compat": [21, 108], "breakup": 21, "segment": [21, 31, 32, 69, 83, 94, 110, 117], "intersect": [21, 31, 66, 77, 83], "assign": [21, 27, 28, 34, 35, 37, 38, 40, 42, 44, 53, 55, 56, 62, 63, 64, 65, 80, 81, 82, 90, 91, 96], "complet": [21, 25, 31, 32, 68, 96], "high": 21, "state": [21, 112], "countri": [21, 117], "few": 21, "what": [21, 83, 108], "qualiti": 21, "usabl": 21, "mention": [21, 22, 96], "oper": [21, 22, 50, 68, 105, 112], "workshop": [21, 23], "street": [21, 32, 83], "map": [21, 117], "consult": [21, 112], "major": [21, 108], "option": [21, 22, 31, 32, 49, 51, 79, 83, 96, 108, 110], "due": [21, 25, 31, 32, 51, 52, 116], "said": 21, "likewis": [21, 32], "final": [21, 113], "doubl": [21, 85, 96, 108, 110], "sign": [21, 117], "st_length": 21, "999999999998": 21, "4000000000000004": 21, "abl": [21, 22, 66, 96, 110], "everyth": [21, 83, 110], "dataset": [21, 26], "ft": [21, 32], "tf": [21, 32], "opposit": [21, 96], "THEN": [21, 32, 49, 60, 66, 100], "els": [21, 32, 49, 60, 66, 100, 110], "drop": [21, 31, 51, 52, 66, 83, 99, 108], "mind": 21, "veri": [21, 66, 110], "specif": [21, 66, 108], "unwant": 21, "too": [21, 112], "encount": 21, "st_cross": [21, 66], "That": [21, 66], "correct": [21, 22, 31, 52, 66, 96, 105, 108], "tunnel": [21, 66], "bride": [21, 66], "over": [21, 49, 60, 66, 83, 85, 110], "incorrect": [21, 66, 83], "switch": [21, 22, 66], "pedestrian": [21, 58, 59, 66, 110], "portal": [21, 66], "again": [21, 66], "supplier": [21, 66], "view": [21, 66, 110], "local": [21, 66, 76, 77], "ones": [21, 66, 83], "st_astext": [21, 66, 110], "st_dump": [21, 66], "st_split": [21, 66], "linestr": [21, 51, 66], "rest": [21, 51, 66, 77], "old": [21, 24, 25, 27, 30, 34, 37, 66, 67, 70, 98, 108], "similar": [21, 26, 65, 66, 96], "trait": [21, 66, 117], "copi": [21, 66, 83, 108], "first_edg": [21, 66], "st_linelocatepoint": [21, 49, 66], "st_intersect": [21, 49, 66], "first_seg": [21, 66], "second_edg": [21, 66], "second_seg": [21, 66], "all_seg": [21, 66], "x1": [21, 27, 28, 29, 34, 35, 36, 49, 51, 66, 110], "y1": [21, 27, 28, 29, 34, 35, 36, 49, 51, 66, 110], "x2": [21, 27, 28, 29, 34, 35, 36, 49, 51, 66, 110], "y2": [21, 27, 28, 29, 34, 35, 36, 49, 51, 66, 110], "st_x": [21, 26, 49, 66, 110], "st_startpoint": [21, 49, 66, 110], "st_y": [21, 26, 49, 66, 110], "st_endpoint": [21, 49, 66, 110], "newli": [21, 66], "nv": [21, 66], "join": [21, 26, 49, 66, 77, 83, 85, 110], "signific": [21, 66, 108], "delet": [21, 46, 66, 77], "task": [21, 66, 77], "keep": [21, 40, 66, 77, 83, 110], "point_sql": [21, 49], "endcap": [21, 49], "flat": [21, 49], "st_makelin": [21, 26, 49, 110], "st_closestpoint": [21, 49], "new_lin": [21, 49], "st_dwithin": [21, 49], "prepare_cap": [21, 49], "row_numb": [21, 49, 60, 66, 85, 110], "partit": [21, 49, 92], "rn": [21, 49], "cap": [21, 49, 58, 59], "closest_vertex": [21, 49], "ON": [21, 22, 26, 49, 77, 85, 110], "info": [21, 49, 112], "ce": [21, 49], "e_geom": [21, 49], "three_opt": [21, 49], "fairli": 21, "method": [21, 22, 50, 51, 77, 96], "array_length": 21, "curb": 21, "easili": 21, "walk": 21, "top": [21, 85, 110], "big": [21, 51, 66], "cliff": 21, "eagl": 21, "divid": [21, 32, 92], "take": [21, 66, 96, 97, 116], "account": [21, 83, 96], "bump": 21, "signal": 21, "pgr_": [21, 108], "compulsori": [21, 116, 117], "string": [21, 32, 108], "contain": [21, 24, 31, 32, 40, 41, 47, 48, 51, 52, 78, 79, 83, 92, 97, 104], "addit": [21, 22, 108, 110, 113, 117, 118], "idea": [21, 92], "fourth": 21, "full": [21, 50, 66, 77, 108], "remain": 21, "everi": [21, 42, 47, 48, 62, 69, 75, 77, 83, 91, 105, 108], "tupl": 21, "specifi": [21, 96], "simplifi": [21, 108], "varieti": 21, "withpoint": [21, 100, 101, 102, 104, 106, 108], "uncategoris": 21, "rais": [21, 84, 96, 97, 116], "forbidden": [21, 50, 97, 108, 116], "nameless": 21, "strict": [21, 60, 97, 116], "u_turn_on_edg": [21, 60, 116], "avoid": [21, 60, 108, 116, 117], "tri": [21, 62, 91], "vetric": [21, 27, 34, 37, 40, 42, 53, 55, 63, 65], "regardless": 21, "interest": 21, "myarea": 21, "edit": 21, "Or": [21, 83], "titl": 21, "appropri": [21, 31, 32, 51, 52], "functiona": 21, "content": [22, 58, 59], "instruct": [22, 110, 112], "download": 22, "binari": [22, 42], "read": [22, 83], "tar": 22, "ball": 22, "xvfz": 22, "gz": 22, "cd": 22, "assum": 22, "mkdir": 22, "cmake": [22, 108], "sudo": 22, "individu": 22, "want": [22, 77, 110], "github": [22, 23, 108], "com": [22, 23, 42, 112], "archiv": [22, 37, 38], "git": [22, 68, 108], "repositori": 22, "clone": 22, "checkout": 22, "while": [22, 24, 97, 104], "demonstr": [22, 27, 28, 34, 35, 37, 38, 40, 53, 55, 56, 65, 117, 118], "postgis_full_vers": 22, "command": 22, "updat": [22, 26, 32, 49, 51, 77, 108, 110], "TO": [22, 99, 112], "createextens": 22, "sure": 22, "met": 22, "0x": 22, "74": [22, 85, 110], "standard": [22, 42, 108], "75": [22, 30, 32, 85, 99, 108, 110], "bgl": 22, "sphinx": [22, 108], "latex": 22, "doxygen": 22, "pg_prove": 22, "linux": [22, 108], "apt": 22, "dev": [22, 108, 112], "enter": [22, 32], "consol": 22, "systemctl": 22, "postgr": 22, "exit": [22, 32], "q": 22, "role": 22, "createus": 22, "interact": 22, "prompt": 22, "affirm": 22, "proce": 22, "succe": 22, "successfulli": 22, "password": 22, "previous": 22, "flag": [22, 32, 51, 96, 97, 101, 102], "man": 22, "libboost": 22, "pip": 22, "bootstrap": 22, "theme": 22, "texliv": 22, "libtap": 22, "parser": 22, "sourcehandl": 22, "perl": 22, "directori": 22, "effort": [22, 108], "comment": [22, 23], "with_doc": 22, "bool": 22, "off": [22, 58, 59], "build_html": 22, "build_doxi": 22, "build_latex": 22, "build_man": 22, "doc_use_bootstrap": 22, "dwith_doc": 22, "ddoc_use_bootstrap": 22, "doxi": 22, "platform": [22, 108], "reinstal": 22, "mingw": 22, "msy": 22, "makefil": 22, "rm": 22, "rf": 22, "tester": [22, 108], "doc_queries_gener": 22, "pl": [22, 96], "___pgr___test___": 22, "sh": [22, 108], "pg_prove_test": [22, 108], "dropdb": 22, "predecessor": 23, "pgdijkstra": 23, "written": 23, "sylvain": 23, "pasch": 23, "camptocamp": 23, "orknei": 23, "renam": [23, 30, 44, 51, 52, 64, 79, 90, 108], "maintain": 23, "georepubl": [23, 112], "paragon": [23, 112], "broad": 23, "commun": [23, 112], "osgeo": [23, 112], "foundat": 23, "osgeol": 23, "gnu": 23, "public": [23, 31, 32, 51, 52, 83, 110], "v2": [23, 108], "featur": [23, 96], "softwar": 23, "mit": [23, 83], "imaptool": 23, "header": [23, 108], "ashish": 23, "kumar": 23, "cayetano": 23, "benav": 23, "daniel": 23, "kastl": 23, "nitish": 23, "chauhan": 23, "rajat": 23, "shind": 23, "regina": 23, "ob": 23, "shobhit": 23, "chaurasia": 23, "swapnil": 23, "joshi": 23, "virginia": 23, "vergara": 23, "peopl": 23, "littl": 23, "issu": [23, 108, 112], "pull": [23, 108], "our": [23, 83], "product": 23, "pgroutinglay": 23, "entiti": 23, "host": [23, 112], "monetari": 23, "fund": 23, "googl": 23, "summer": 23, "aasheesh": 23, "tiwari": 23, "aditya": 23, "pratap": 23, "singh": 23, "adrien": 23, "berchet": 23, "akio": 23, "takubo": 23, "andrea": 23, "nardelli": 23, "anthoni": 23, "tasca": 23, "anton": 23, "patrushev": 23, "ashraf": 23, "hossain": 23, "christian": 23, "gonzalez": 23, "dave": 23, "pott": 23, "david": 23, "techer": 23, "deni": 23, "rykov": 23, "ema": 23, "miyawaki": 23, "esteban": 23, "zimanyi": 23, "florian": 23, "thurkow": 23, "freder": 23, "junod": 23, "gerald": 23, "fenoi": 23, "gudesa": 23, "venkata": 23, "akhil": 23, "hang": 23, "wu": 23, "himanshu": 23, "raj": 23, "imr": 23, "samu": 23, "jai": 23, "mahadeokar": 23, "jinfu": 23, "leng": 23, "kai": 23, "behnck": 23, "kishor": 23, "ko": 23, "nagas": 23, "mahmoud": 23, "sakr": 23, "manikata": 23, "kondeti": 23, "mario": 23, "basa": 23, "martin": 23, "wiesenhaan": 23, "maxim": [23, 41, 44, 64, 90], "dubinin": 23, "maoguang": 23, "wang": 23, "moham": 23, "bakli": 23, "zia": 23, "mukul": 23, "priya": 23, "razequl": 23, "islam": 23, "rohith": 23, "reddi": 23, "sarthak": 23, "agarw": 23, "sourabh": 23, "garg": 23, "stephen": 23, "woodbridg": [23, 108], "housseman": 23, "veenit": 23, "vidhan": 23, "jain": 23, "csi": 23, "tokyo": 23, "leopark": 23, "versaterm": 23, "inc": 23, "item": 23, "web": [23, 117], "site": 23, "net": 23, "migrat": 23, "longer": [24, 25, 26, 27, 29, 30, 34, 36, 37, 39, 57, 67, 70, 102, 108], "summari": [24, 25, 26, 27, 28, 29, 30, 34, 35, 36, 37, 38, 39, 40, 42, 44, 45, 50, 53, 54, 55, 56, 57, 58, 59, 63, 64, 65, 67, 69, 70, 71, 75, 77, 80, 81, 82, 84, 85, 86, 90, 94, 95, 100, 101, 102], "heap_path": [24, 97, 104], "roughli": [24, 97, 104], "heap": [24, 97, 104], "k_shortest_path_rout": 24, "aproxim": [25, 26], "simul": [25, 26, 29, 36, 39, 57, 102], "anneal": [25, 26], "relat": [25, 26, 31, 83, 108, 117, 118], "max_processing_tim": [25, 26], "tries_per_temperatur": [25, 26], "max_changes_per_temperatur": [25, 26], "max_consecutive_non_chang": [25, 26], "initial_temperatur": [25, 26], "final_temperatur": [25, 26], "cooling_factor": [25, 26], "prefer": [25, 30, 117, 118], "Will": 25, "As": [25, 108], "garante": 25, "fact": [25, 83], "forc": 25, "denot": [25, 40], "instanc": 25, "emtpi": [25, 26, 66, 100], "array_agg": [25, 29, 36, 39, 57, 66, 77, 84], "asymmetr": 25, "pointsofinterset": 25, "larger": [25, 92], "satisfi": 25, "pointsofinterest": [25, 96, 100, 101, 102, 103, 104, 110, 117, 118], "q1": 25, "pgr_euclediantsp": [26, 108], "kept": [26, 108, 117, 118], "arbitrarli": 26, "quit": 26, "499999999999": 26, "9999999": 26, "2360679775": [26, 85], "41421356237": [26, 85], "65028153987": 26, "06449510225": 26, "12132034356": 26, "18581544581": 26, "58113883008": 26, "76695427589": 26, "2669542759": 26, "58113883009": 26, "848093106": 26, "11803398875": 26, "9661270947": 26, "3803406571": 26, "583095189485": 26, "9634358466": 26, "860232526704": 26, "8236683733": 26, "2378819357": 26, "wi29": 26, "20833": 26, "3333": 26, "17100": 26, "0000": 26, "20900": 26, "17066": 26, "6667": 26, "21300": 26, "13016": 26, "21600": 26, "14150": 26, "14966": 26, "16500": 26, "22183": 26, "13133": 26, "22583": 26, "14300": 26, "22683": 26, "12716": 26, "23616": 26, "15866": 26, "23700": 26, "15933": 26, "23883": 26, "14533": 26, "24166": 26, "13250": 26, "25149": 26, "1667": 26, "12365": 26, "8333": 26, "26133": 26, "14500": 26, "26150": 26, "10550": 26, "26283": 26, "12766": 26, "26433": 26, "13433": 26, "26550": 26, "13850": 26, "26733": 26, "11683": 26, "27026": 26, "1111": 26, "13051": 26, "9444": 26, "27096": 26, "13415": 26, "27153": 26, "6111": 26, "13203": 26, "27166": 26, "9833": 26, "27233": 26, "10450": 26, "11783": 26, "27266": 26, "10383": 26, "27433": 26, "12400": 26, "27462": 26, "12992": 26, "2222": 26, "st_makepoint": [26, 110], "27603": 26, "2266": [26, 108], "91173136": 26, "28777": 26, "4854127": 26, "tsp_result": 26, "01020000001e000000f085c9545558d4400000000000b3d040000000000069d440107a36abaaaad040000000000018d54000000000001dd040107a36ab2a10d7401ff46c5655fdce40000000000025d740e10b93a9aa1ecf40f085c954d552d740e10b93a9aa62cc40107a36abaa99d7400000000000e1c940107a36ab4a8fd840e10b93a9ea26c840f085c954d5aad9401ff46c5655efc840f085c95455d0d940e10b93a9aa3cca40f085c9545585d940000000000052cc400000000080edd94000000000000dcb40a52c431c0776da40e10b93a9ea33ca40a52c431c6784da40e10b93a9aac9c940a52c431c8764da402c6519e2f87dc94000000000a0d1da4096b20c711c60c940f085c95455cada40000000000038c840f085c9545598da40e10b93a9aa03c740f085c954551bda40e10b93a9aad1c640f085c9545598da40000000000069c440107a36abaaa0da40e10b93a9aa47c440107a36abaa87da40e10b93a9aa34c340000000008089d94000000000009bc440f085c954d526d6401ff46c5655d6c840f085c954d5a9d540e10b93a9aaa6c9400000000000cdd4401ff46c56556cc940000000000018d5400000000000a3cb40f085c954d50dd6400000000000eecb40000000000018d5401ff46c56553bcd40f085c9545558d4400000000000b3d040": 26, "visuali": 26, "distinguish": [27, 34], "repeat": [27, 28, 34, 35, 37, 38, 40, 53, 55, 56, 65, 117, 118], "sort": [27, 28, 34, 35, 37, 38, 40, 53, 55, 56, 58, 59, 65, 94], "sumar": [28, 35, 38, 56], "internali": [29, 36], "inf": [29, 36], "notic": [29, 31, 32, 36, 39, 51, 52, 57, 66, 83, 99, 102, 112], "annael": [29, 36, 39, 57, 102, 108], "hint": [29, 36, 39, 51, 52, 57, 94, 102], "polygon": [30, 108], "break": [30, 98, 108], "55": [30, 85, 100, 108, 110], "stabl": 30, "argument": [30, 31, 51, 52], "outer": [30, 66], "ring": [30, 31, 83], "st_delaunytriangl": 30, "instead": [30, 108], "cgal": [30, 108], "spoon_radiu": 30, "spoon": 30, "_radiu": 30, "circumcent": 30, "radiu": 30, "variabl": 30, "st_area": 30, "st_collect": 30, "st_concavehul": 30, "ok": [31, 32, 51, 52, 83], "finish": [31, 32], "fail": [31, 32, 51, 52, 108], "toler": [31, 51, 83], "rows_wher": [31, 32, 51, 52, 83], "varchar": [31, 51, 52], "prerequisit": [31, 32, 108], "_vertices_pgr": [31, 32, 51, 52], "accept": [31, 51, 52, 108, 110], "schema": [31, 32, 51, 52, 83, 108], "well": [31, 32, 42, 51, 52, 83, 92, 117], "float8": [31, 51, 83, 96, 99], "snap": [31, 51], "disconnect": [31, 41, 47, 48, 51, 71, 86, 105, 111], "primari": [31, 51, 83, 85, 99, 110], "kei": [31, 51, 83, 85, 99, 110], "cnt": [31, 32, 51, 52, 83], "chk": [31, 32, 51, 52], "srid": [31, 51, 52, 66], "could": [31, 32, 51, 52, 77, 108], "determin": [31, 51, 52, 92], "ein": [31, 32, 51, 52], "eout": [31, 32, 51, 52], "simplest": [31, 51, 52], "clean": [31, 32, 83, 108], "FOR": [31, 32, 51, 52, 83], "edges_vertices_pgr": [31, 32, 51, 52, 83], "dead": [31, 49, 50, 83], "gap": [31, 83], "isol": [31, 83], "potenti": [31, 32, 83], "detect": [31, 83, 108], "occur": [31, 51, 52], "mytabl": [31, 51, 52], "got": [31, 32, 52], "st_srid": 31, "someth": 31, "went": 31, "wrong": [31, 32, 51, 52], "notat": [31, 32, 51, 52], "matter": [31, 51, 52], "displai": [31, 77], "othert": [31, 51, 52], "st_point": [31, 51, 52, 110], "other_geom": [31, 51, 52], "src": [31, 51, 52], "tgt": [31, 51, 52], "mygeom": [31, 51, 52], "mytable_vertices_pgr": [31, 52], "0001": 31, "place": [31, 96], "myhous": 31, "quote_liter": 31, "IF": [31, 51, 52, 66, 99], "onewai": 32, "sstreet": 32, "flip": [32, 108, 117, 118], "analys": 32, "pretti": 32, "power": 32, "none": 32, "logic": 32, "imposs": 32, "had": 32, "infinit": 32, "pile": 32, "why": 32, "care": 32, "feasibl": 32, "mistak": 32, "think": 32, "highwai": 32, "north": 32, "lane": 32, "mayb": [32, 83], "round": 32, "repair": 32, "vendor": 32, "geom_tabl": 32, "s_in_rul": 32, "s_out_rul": 32, "t_in_rul": 32, "t_out_rul": 32, "two_way_if_nul": 32, "rule": [32, 96], "treat": 32, "bi": [32, 108], "pgr_analyzeggraph": 32, "dir": [32, 83], "50": [32, 44, 64, 81, 84, 85, 90, 99, 100, 110], "cut": [33, 92], "whose": [33, 42, 46, 83], "increas": [33, 46, 58, 59, 77], "pgr_bddijsktra": 37, "cours": [37, 38], "spr06": [37, 38], "cos423": [37, 38], "handout": [37, 38], "epp": [37, 38], "20shortest": [37, 38], "20path": [37, 38], "20algorithm": [37, 38], "bidirectional_search": [37, 38], "bellman": [40, 53, 65, 108], "ford": [40, 53, 65, 108], "richard": 40, "lester": 40, "who": [40, 112], "publish": [40, 85, 110], "1958": 40, "respect": [40, 77, 96], "though": 40, "versatil": 40, "finit": 40, "furthermor": 40, "henc": 40, "_vid": [40, 42, 53, 100, 101], "e2": [40, 64, 80, 90, 92], "93ford_algorithm": 40, "n_seq": [41, 49, 93], "unlik": [41, 96, 101, 102], "known": [42, 67, 110], "unweight": [42, 92], "alledg": 42, "howev": [42, 65, 105], "constrain": 42, "variat": 42, "sssp": 42, "cp": 42, "01_bf": 42, "27s_algorithm": [42, 55, 56, 58, 59, 60], "specialized_vari": 42, "themselv": 43, "along": [43, 96, 117], "odd": 43, "cyclic": 43, "subgraph": [43, 67, 69, 70, 77, 86, 92, 95], "pgr_maxflowboykovkolmogorov": [44, 108], "polynomi": 44, "130": [44, 64, 81, 90, 110], "boykov_kolmogorov_max_flow": 44, "level": [45, 83], "descend": [45, 50, 54], "desc": [45, 54, 77], "bridge_": 46, "28graph_theori": [46, 79], "29": [46, 47, 63, 76, 79, 85, 100, 104, 110], "circuit": [47, 48], "31": [47, 63, 76, 85, 99, 100, 110], "32": [47, 63, 76, 85, 96, 100, 110], "33": [47, 63, 76, 85, 96, 100, 110], "reachabl": [49, 54, 93, 95], "cross": [49, 69], "split": [49, 77, 83], "pgr_contractgraph": [50, 108], "bug": [50, 108, 112], "currnetli": 50, "linear": [50, 53, 94, 108], "forbidden_vertic": 50, "contraction_ord": 50, "distinct": [50, 77], "pseudo": 50, "incorpor": 50, "built": [51, 68, 75, 108], "creation": [51, 108, 110], "otherwis": [51, 53, 94], "doesn": [51, 52, 108], "referenc": 51, "ege_t": 51, "unexpect": [51, 52, 96, 108], "raise_except": [51, 52], "recreat": [51, 83], "whole": 51, "appropiri": 51, "altern": [51, 97, 108], "skip": [51, 52, 66, 83, 110], "prepar": [51, 66, 108], "unlog": [51, 66], "010100000000000000000000000000000000000040": [51, 66, 110], "0101000000000000000000e03f0000000000000c40": [51, 66, 110], "0101000000000000000000f03f0000000000000040": [51, 66, 110], "999999999999": [51, 66, 110], "010100000068eeffffffffff3f0000000000000c40": [51, 66, 110], "010100000000000000000000400000000000000000": [51, 66, 110], "01010000000000000000000040000000000000f03f": [51, 66, 110], "010100000000000000000000400000000000000040": [51, 66, 110], "010100000000000000000000400000000000000840": [51, 66, 110], "010100000000000000000000400000000000001040": [51, 66, 110], "01010000000000000000000840000000000000f03f": [51, 66, 110], "010100000000000000000008400000000000000040": [51, 66, 110], "010100000000000000000008400000000000000840": [51, 66, 110], "01010000000000000000000c406666666666660240": [51, 66, 110], "01010000000000000000000c400000000000001040": [51, 66, 110], "01010000000000000000001040000000000000f03f": [51, 66, 110], "010100000000000000000010400000000000000040": [51, 66, 110], "010100000000000000000010400000000000000840": [51, 66, 110], "out_go": [51, 66], "eid": [51, 66, 77, 96], "in_com": [51, 66], "increment": 51, "requier": 52, "popul": 52, "tbd": [52, 77, 99], "othergeom": 52, "overview": [52, 83], "pgr_create_topologi": 52, "acycl": [53, 94], "dag": [53, 94], "reli": 53, "topolog": [53, 94], "impos": 53, "thu": [53, 65], "effici": [53, 62, 91], "either": [53, 117], "warn": [53, 94, 108], "topological_sort": [53, 94], "deep": 54, "backtrack": 54, "lead": [58, 59], "drt": [58, 59], "global": [58, 59], "car": [58, 59], "subwai": [58, 59], "station": [58, 59], "best": [58, 59, 65, 84, 85, 112], "buse": [58, 59], "uns": [58, 59], "equali": [58, 59], "table_of_cont": [58, 59], "fisrt": 59, "vertex_i": [60, 116], "vertex_": [60, 116], "_of": 60, "node_seq": 60, "equicost": [61, 103], "equi": 61, "resembl": [61, 103, 110], "tie": [61, 103], "brake": [61, 103], "arbitrari": [61, 103, 105, 117], "loop": [62, 108], "self": [62, 108], "parallel": [62, 105], "At": [62, 92], "chromat": 62, "proper": 62, "alwai": [62, 91, 96, 110], "implelent": 62, "underli": 63, "character": 63, "cannot": 63, "39": [63, 76, 85, 100, 110], "41": [63, 77, 85, 99, 100, 110], "42": [63, 85, 100, 110], "pgr_maxflowedmondskarp": [64, 108], "edmonds_karp_max_flow": 64, "93karp_algorithm": 64, "edward": 65, "moor": 65, "improv": [65, 108], "li": [65, 85, 110], "complex": 65, "experi": 65, "suggest": [65, 96], "significantli": [65, 112], "shortest_path_faster_algorithm": 65, "auxiliari": 66, "preced": 66, "startpoint": 66, "endpoint": [66, 76], "backend": 66, "main_sql": 66, "the_out": 66, "agg_out": 66, "the_in": 66, "agg_in": 66, "the_point": 66, "coalesc": [66, 96, 110], "adjust": 66, "dens": 67, "theta": 67, "date": 68, "pgsql": [68, 96], "upon": 69, "planar": 69, "drawn": 69, "dimension": 69, "Such": 69, "plane": 69, "admit": 69, "straight": 69, "k_5": 69, "k_": 69, "boyer": 69, "myrvold": 69, "k_1": 69, "boyer_myrvold": 69, "spars": 70, "use": 70, "possibli": [71, 86, 105], "leq": [72, 73, 74, 87, 88, 89], "immedi": 75, "domin": 75, "immidi": 75, "parent": 75, "lengauer": 75, "tarjan": [75, 93], "line_graph": [76, 77], "across": 77, "undefin": 77, "yellow": 77, "orang": 77, "unless": 77, "linegraph_edg": 77, "original_id": 77, "vertex_map": 77, "inspect": [77, 83], "targets_original_id": 77, "self_loop": 77, "assigned_vertic": 77, "cross_edg": 77, "source_original_id": 77, "dn": 77, "v1": [77, 108], "previu": 77, "u_turn": 77, "new_graph": 77, "new_graph_id_seq": 77, "nextval": [77, 110], "own": [77, 110], "setval": [77, 110], "uturn": 77, "complete_graph": 77, "make_connect": 78, "pgr_maximumcardinalitymatch": [79, 108], "independ": 79, "largest": 79, "mani": [79, 96, 108, 110, 117], "invers": 79, "ackermann": 79, "maximum_match": 79, "matching_": 79, "ackermann_funct": 79, "230": 80, "340": 80, "360": [80, 85, 110], "push_relabel_max_flow": [80, 90], "93relabel_maximum_flow_algorithm": [80, 90], "todo": 81, "statement": [81, 84, 85, 94, 110], "nonneg": [81, 82], "iter": [81, 82, 91], "world": [81, 82, 96, 117], "smaller": [81, 82], "200": [81, 85, 99, 110], "300": 81, "430": [81, 82], "160": 81, "260": [81, 85, 110], "390": 81, "520": 81, "680": 81, "760": [81, 82], "150": 81, "250": 81, "350": 81, "450": [81, 85, 110], "580": 81, "610": [81, 85, 110], "690": 81, "770": 81, "820": [81, 82, 85, 110], "240": [81, 99], "320": [81, 82], "successive_shortest_path_nonnegative_weight": [81, 82], "author": [83, 108], "nicola": 83, "ribot": 83, "copyright": 83, "write": [83, 112], "table_end": 83, "outal": [83, 108], "bring": 83, "often": 83, "correctli": 83, "invalid": 83, "broken": 83, "separ": [83, 96, 105, 108], "abil": [83, 117], "accommod": 83, "situat": 83, "against": [83, 108], "edge_table_nod": 83, "coincid": 83, "dd": 83, "suffix": 83, "old_id": 83, "sub_id": 83, "tell": 83, "untouch": 83, "edges_nod": 83, "edges_noded_vertices_pgr": 83, "field": 83, "interect": 83, "tho": 83, "track": [83, 108], "juction": 83, "fleet": [84, 85], "ma_capac": 84, "illeg": 84, "six": [84, 85], "demand": [84, 85, 110], "stop_id": 84, "pgr_gsoc_vrppdtw": [85, 108], "8284271247": 85, "2426406871": 85, "4787086646": 85, "lc101": [85, 110], "sintef": [85, 110], "projectweb": [85, 110], "pdptw": [85, 110], "lim": [85, 110], "benchmark": [85, 110], "vehcil": [85, 110], "v_lc101": [85, 110], "1236": [85, 110], "generate_seri": [85, 110], "lc101_c": [85, 110], "precis": [85, 96, 108, 110], "pindex": [85, 110], "dindex": [85, 110], "912": [85, 110], "967": [85, 110], "70": [85, 110], "825": [85, 110], "870": [85, 110], "66": [85, 110], "146": [85, 110], "727": [85, 110], "782": [85, 110], "69": [85, 110], "621": [85, 110], "702": [85, 110], "170": [85, 110], "225": [85, 110], "255": [85, 110], "324": [85, 110], "534": [85, 110], "605": [85, 110], "357": [85, 110], "410": [85, 110], "448": [85, 110], "505": [85, 110], "85": [85, 99, 110], "652": [85, 110], "721": [85, 110], "92": [85, 110], "567": [85, 110], "620": [85, 110], "384": [85, 110], "429": [85, 110], "475": [85, 110], "528": [85, 110], "148": [85, 110], "179": [85, 110], "254": [85, 110], "278": [85, 110], "345": [85, 110], "73": [85, 110], "52": [85, 100, 110], "914": [85, 110], "965": [85, 110], "812": [85, 110], "883": [85, 110], "732": [85, 110], "777": [85, 110], "103": [85, 110], "144": [85, 99, 110], "169": [85, 110], "224": [85, 110], "622": [85, 110], "701": [85, 110], "261": [85, 110], "316": [85, 110], "546": [85, 110], "593": [85, 110], "405": [85, 110], "449": [85, 110], "504": [85, 110], "237": [85, 110], "158": [85, 110], "751": [85, 110], "816": [85, 110], "283": [85, 110], "344": [85, 110], "665": [85, 110], "716": [85, 110], "105": [85, 110], "383": [85, 110], "434": [85, 110], "479": [85, 110], "522": [85, 110], "624": [85, 110], "264": [85, 110], "321": [85, 110], "166": [85, 110], "235": [85, 110], "149": [85, 99, 110], "359": [85, 110], "412": [85, 110], "541": [85, 110], "509": [85, 110], "1054": [85, 110], "1127": [85, 110], "632": [85, 110], "693": [85, 110], "1001": [85, 110], "1066": [85, 110], "815": [85, 110], "880": [85, 110], "725": [85, 110], "786": [85, 110], "101": [85, 99, 110], "969": [85, 110], "286": [85, 110], "347": [85, 110], "58": [85, 100, 110], "186": [85, 110], "257": [85, 110], "57": [85, 100, 110], "385": [85, 110], "436": [85, 110], "59": [85, 100, 110], "471": [85, 110], "651": [85, 110], "740": [85, 110], "562": [85, 110], "629": [85, 110], "531": [85, 110], "262": [85, 110], "317": [85, 110], "171": [85, 99, 110], "218": [85, 110], "102": [85, 110], "129": [85, 99, 110], "826": [85, 110], "875": [85, 110], "734": [85, 110], "916": [85, 110], "387": [85, 110], "456": [85, 110], "71": [85, 99, 110], "293": [85, 110], "478": [85, 110], "551": [85, 110], "353": [85, 110], "997": [85, 110], "1068": [85, 110], "203": [85, 110], "88": [85, 110], "574": [85, 110], "643": [85, 110], "109": [85, 99, 110], "104": [85, 99, 110], "79": [85, 99, 110], "668": [85, 110], "731": [85, 110], "769": [85, 110], "124": [85, 110], "369": [85, 110], "420": [85, 110], "83": [85, 110], "265": [85, 110], "338": [85, 110], "458": [85, 110], "523": [85, 110], "89": [85, 99, 110], "555": [85, 110], "612": [85, 110], "173": [85, 110], "238": [85, 110], "91": [85, 99, 110], "645": [85, 110], "708": [85, 110], "737": [85, 110], "802": [85, 110], "836": [85, 110], "889": [85, 110], "368": [85, 110], "441": [85, 110], "93": [85, 110], "518": [85, 110], "285": [85, 110], "336": [85, 110], "96": [85, 110], "196": [85, 110], "239": [85, 110], "98": [85, 110], "156": [85, 110], "97": [85, 110], "561": [85, 110], "106": [85, 99, 110], "743": [85, 110], "647": [85, 110], "726": [85, 110], "appropi": [85, 110], "p": [85, 110], "c_lc101": [85, 110], "relev": 85, "828": 85, "854": 85, "5412705652799": 85, "pgr_maxflowpushrelabel": [90, 108], "ident": 91, "rang": 91, "strategi": 91, "smallest": 91, "neighbor": 91, "stoerwagn": 92, "stoer": 92, "wagner": 92, "recurs": 92, "essenti": 92, "shrink": 92, "merg": 92, "intens": 92, "phase": 92, "chosen": 92, "simpli": 92, "whether": 92, "unconnect": 92, "sometim": [92, 96], "93wagner_algorithm": 92, "strong": 93, "answer": 94, "context": [94, 96, 112], "transit": 95, "closur": 95, "cluster": 95, "compres": 95, "rechabl": 95, "transitive_closur": 95, "pgr_trspviavertic": 96, "pgr_trspviaedg": 96, "shorthest": 96, "complic": 96, "navig": 96, "performamnc": 96, "wise": 96, "nearli": 96, "fast": 96, "rather": 96, "id1": 96, "id2": 96, "id3": 96, "has_rcost": 96, "restrict_sql": 96, "source_edg": 96, "source_po": 96, "target_edg": 96, "target_po": 96, "turn_restrict_sql": 96, "pct": 96, "shoot": [96, 108], "setup": 96, "mostli": 96, "easi": 96, "int4": 96, "prevent": 96, "remark": 96, "to_cost": [96, 110], "target_id": [96, 110], "via_path": [96, 108, 110], "comma": 96, "interpol": 96, "corner": 96, "percentag": 96, "commar": 96, "eadg": 96, "from_edg": [96, 110], "yet": 96, "wrapper": [96, 108, 112], "hide": 96, "clariti": 96, "_pgr_trsp": 96, "internal_funct": 96, "_pgr_withpointsvia": 96, "anyth": 96, "noth": 96, "autodectect": 96, "did": 96, "thrown": 96, "effect": 96, "invalidu": 96, "differenct": 96, "newpoint": [96, 110], "0101000000cdccccccccccfc3f9a9999999999d93f": 96, "010100000000000000000000409a9999999999d93f": 96, "0101000000cdcccccccccc10403333333333330340": 96, "010100000000000000000010403333333333330340": 96, "0101000000cdcccccccccc04409a99999999990940": 96, "0101000000cdcccccccccc04400000000000000840": 96, "0101000000333333333333d33fcdccccccccccfc3f": 96, "0101000000333333333333d33f0000000000000040": 96, "01010000003333333333330740cdccccccccccfc3f": 96, "01010000000000000000000840cdccccccccccfc3f": 96, "01010000009a99999999990140333333333333fb3f": 96, "01010000000000000000000040333333333333fb3f": 96, "explicitli": 96, "regardl": 96, "meaning": 96, "choos": 96, "inherit": 96, "stop_on_first": 97, "new_restrict": [97, 110], "client_min_messag": [99, 112], "solomon_100_rc_101": 99, "vrp_vehicl": 99, "vrp_distanc": 99, "oid": 99, "opo": 99, "tarriv": 99, "tdepart": 99, "110": 99, "120": 99, "131": 99, "141": 99, "155": 99, "162": 99, "172": 99, "208": 99, "161": 99, "460": 99, "rollback": 99, "order_unit": 99, "open_tim": 99, "close_tim": 99, "000000": 99, "145": 99, "139": 99, "125": 99, "121": 99, "119": 99, "case_no": 99, "the_matrix_info": 99, "src_id": 99, "dest_id": 99, "traveltim": 99, "temporari": 100, "points_sql": [100, 101, 102, 108], "driving_sid": [100, 101, 102, 103, 104, 117, 118], "path_at": 100, "statu": 100, "is_a": 100, "4th": 100, "6th": 100, "3th": 100, "5th": 100, "_": 101, "member": [101, 102], "1930": 105, "czech": 105, "vojt\u011bch": 105, "jarn\u00edk": 105, "cheapest": 105, "contrast": 105, "anywher": [106, 118], "via": [106, 117, 118], "commit": 108, "mileston": 108, "2400": 108, "focal": 108, "1891": 108, "revis": 108, "unus": 108, "category_id": 108, "reverse_category_id": 108, "combinations_t": 108, "usag": [108, 117, 118], "restructur": 108, "concept": 108, "2276": 108, "edgedisjointpath": 108, "2312": 108, "2357": 108, "clang": 108, "tidi": 108, "2216": 108, "2057": 108, "trspviaedg": 108, "2087": 108, "2201": 108, "2202": 108, "2203": 108, "2093": 108, "studio": 108, "2189": 108, "rhel": 108, "1883": 108, "metric_tsp_approx": 108, "1850": 108, "Near": 108, "astar": 108, "1825": 108, "honor": 108, "1849": 108, "point_xi": 108, "hpp": 108, "maco": 108, "environ": 108, "1861": 108, "1304": 108, "freebsd": 108, "bit": 108, "pgr_vronedepot": 108, "1356": 108, "port": 108, "1725": 108, "openbsd": 108, "1760": 108, "ubuntu": 108, "1770": 108, "1733": 108, "1647": 108, "1640": 108, "1616": 108, "1300": 108, "backport": 108, "1378": 108, "232": 108, "client": [108, 117], "cancel": 108, "1153": 108, "1188": 108, "1002": 108, "1004": 108, "1005": 108, "intermid": 108, "elimin": 108, "1006": 108, "loss": 108, "bdastar": 108, "bddijkstra": 108, "unnecessari": 108, "legaci": 108, "pgr_labelgraph": 108, "pgr_pointsaspolygon": 108, "1219": 108, "implicit": 108, "cast": 108, "1193": 108, "claus": 108, "1185": 108, "findpostgresql": 108, "1152": 108, "1098": 108, "1165": 108, "python3": 108, "perl5": 108, "pgr_bddijstra": 108, "fallthrugh": 108, "pointer": 108, "enhanc": 108, "pgr_pointtoedgenod": 108, "cname": 108, "__linux__": 108, "__glibc__": 108, "glibc": 108, "pgr_pointstovid": 108, "realiti": 108, "ambigu": 108, "leak": 108, "max_flow": 108, "regress": 108, "discrep": 108, "pgr_flip_edg": 108, "pgr_vidstodmatrix": 108, "pgr_pointstodmatrix": 108, "pgr_texttopoint": 108, "bogu": 108, "extern": 108, "fedora": 108, "gcc": 108, "row_wher": 108, "pgr_apspwarshal": 108, "pgr_apspjohnson": 108, "pgr_kdijkstracost": 108, "pgr_kdijkstrapath": 108, "pgr_makedistancematrix": 108, "_pgr_makedistancematrix": 108, "refactor": 108, "multi": 108, "hole": 108, "steve": 108, "conveni": 108, "pgr_flipedg": 108, "vertix_id": 108, "gsoc": 108, "pgr_vrppdtw": 108, "pgr_getcolumnnam": 108, "pgr_gettablenam": 108, "pgr_iscolumncndex": 108, "pgr_iscolumnint": 108, "pgr_quote_id": 108, "pgr_versionless": 108, "pgr_startpoint": 108, "pgr_endpoint": 108, "pgr_pointtoid": 108, "encapsul": 108, "prefix": [108, 110], "minor": 108, "abandon": 108, "goal": 108, "integr": 108, "easier": 108, "analyt": 108, "pgr_kdijkstra": 108, "solver": 108, "gaul": 108, "infrastructur": 108, "outstand": 108, "autom": 108, "trigger": 108, "modular": 108, "newer": 108, "re": [108, 112], "unifi": 108, "st_": 108, "shooting_star": 108, "discontinu": 108, "release_not": 108, "core": 108, "renumb": 108, "scheme": 108, "routing_postgi": 108, "bellow": 110, "cpaciti": 110, "oposit": 110, "therfor": 110, "reverse_": 110, "reverse_categori": 110, "convini": 110, "save": 110, "bigseri": 110, "recomend": 110, "gemetri": 110, "vertices_id_seq": 110, "collat": 110, "nullabl": 110, "regclass": 110, "here": 110, "fly": [110, 117], "pgrrout": 110, "st_lineinterpolatepoint": 110, "convin": 110, "soft": 110, "rid": 110, "arrow": [110, 117, 118], "click": 110, "enlarg": 110, "websit": 112, "tutori": 112, "compani": 112, "manag": 112, "tracker": 112, "ticket": 112, "priorit": 112, "unreport": 112, "explicit": 112, "replic": 112, "exact": 112, "necessari": 112, "older": 112, "earliest": 112, "pin": 112, "caus": 112, "debug": 112, "mailman": 112, "listinfo": 112, "topic": 112, "tag": 112, "subscrib": 112, "feed": 112, "profession": 112, "contact": 112, "organ": 112, "offic": [112, 117, 118], "germani": 112, "japan": 112, "corpor": 112, "paragoncorpor": 112, "netlab": 112, "capranica": 112, "itali": 112, "suitabl": 113, "supli": 113, "aditionali": 115, "intend": 116, "continuo": 116, "besid": 116, "outsid": 117, "thought": 117, "perman": 117, "tempor": 117, "confus": 117, "interes": [117, 118], "restaur": [117, 118], "supermarket": [117, 118], "represent": [117, 118], "foloww": [117, 118], "squar": [117, 118], "accord": [117, 118], "achiv": [117, 118], "rema": [117, 118], "recursevli": [117, 118], "compos": 118}, "objects": {}, "objtypes": {}, "objnames": {}, "titleterms": {"bf": [0, 72, 87], "categori": [0, 1, 2, 4, 13, 14, 16, 19, 109, 111, 116, 117], "paramet": [0, 3, 4, 5, 6, 9, 14, 15, 16, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 99, 100, 101, 102, 103, 104, 116, 117, 118], "option": [0, 3, 4, 5, 6, 14, 15, 24, 25, 26, 27, 28, 29, 34, 35, 36, 37, 38, 39, 40, 42, 45, 50, 54, 55, 56, 57, 58, 59, 60, 61, 63, 65, 66, 67, 70, 72, 74, 76, 84, 85, 87, 89, 97, 100, 101, 102, 103, 104, 116, 117, 118], "inner": [0, 4, 6, 9, 14, 15, 16, 18, 20, 21, 24, 25, 26, 27, 28, 29, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 99, 100, 101, 102, 103, 104, 105, 116, 117, 118], "queri": [0, 4, 6, 9, 14, 15, 16, 18, 20, 21, 24, 25, 26, 27, 28, 29, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 99, 100, 101, 102, 103, 104, 105, 116, 117, 118], "edg": [0, 6, 9, 12, 14, 15, 16, 18, 21, 24, 27, 28, 29, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 100, 101, 102, 103, 104, 110, 116, 117, 118], "sql": [0, 4, 6, 9, 14, 15, 16, 18, 21, 24, 25, 26, 27, 28, 29, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 100, 101, 102, 103, 104, 116, 117, 118], "result": [0, 6, 10, 12, 14, 18, 24, 25, 26, 27, 28, 29, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 46, 47, 48, 49, 50, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 103, 104, 116], "column": [0, 4, 6, 10, 12, 14, 18, 21, 24, 25, 26, 27, 28, 29, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 103, 104, 116], "see": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 111, 113, 114, 115, 116, 117, 118], "also": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 111, 113, 114, 115, 116, 117, 118], "df": [1, 45, 54, 74, 89], "k": 2, "shortest": [2, 21, 66, 96], "path": [2, 21, 55, 60, 66, 96], "travel": 3, "sale": 3, "person": 3, "famili": [3, 5, 6, 7, 8, 9, 10, 11, 12, 15, 18, 19, 20, 105, 109, 113, 114, 115, 118], "function": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 17, 18, 19, 20, 21, 105, 106, 109, 113, 114, 115, 118], "tabl": [3, 12, 19, 21, 26, 31, 51, 52, 66, 77, 96, 110], "content": [3, 4, 19, 108, 117, 118], "gener": [3, 13, 14, 18, 19, 21, 25, 116], "inform": [3, 12, 13, 14, 18, 21, 23, 49, 66, 116], "problem": [3, 9, 15, 25, 26, 112], "definit": [3, 15, 21, 25, 26], "origin": [3, 77, 85, 110], "characterist": [3, 4, 8, 13, 14, 25, 26, 58, 59, 84, 85], "tsp": [3, 25, 26], "vehicl": [4, 84, 85, 110], "rout": [4, 21, 51, 60, 66, 77, 96], "experiment": [4, 9, 17, 40, 42, 43, 45, 47, 48, 53, 62, 65, 69, 75, 76, 77, 78, 81, 82, 84, 85, 92, 94, 95, 97, 99, 114], "introduct": [4, 6, 12, 15, 23, 96, 114, 117, 118], "pick": [4, 84, 85, 110], "deliveri": 4, "deliv": [4, 84, 85, 110], "order": [4, 23, 84, 85, 110], "matrix": [4, 14, 25, 84], "return": [4, 21, 30, 40, 45, 54, 65, 68, 84, 85], "summari": 4, "row": 4, "handl": 4, "capac": 4, "demand": 4, "unit": 4, "locat": [4, 96], "time": 4, "factor": [4, 5], "A": [5, 7], "descript": [5, 7, 9, 20, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105], "astar": [5, 27, 28, 29, 34, 35, 36], "advanc": [5, 15, 117, 118], "document": [5, 15, 18, 117, 118], "heurist": 5, "all": 6, "pair": 6, "perform": [6, 21], "data": [6, 12, 21, 25, 26, 66, 77, 110], "bidirect": [7, 8], "dijkstra": [8, 15, 58, 59], "synopsi": [8, 14, 84, 85], "chines": 9, "postman": 9, "color": 10, "compon": [11, 21, 49], "contract": [12, 21, 50], "dead": [12, 21], "end": [12, 21, 60], "vertex": [12, 21, 25, 45, 49, 54, 61, 66, 72, 73, 74, 77, 87, 88, 89, 96, 103], "undirect": [12, 55, 110], "graph": [12, 21, 55, 66, 77, 110], "direct": [12, 55, 110], "oper": 12, "linear": [12, 21], "The": [12, 15, 60, 77, 85, 96, 110], "cycl": 12, "sampl": [12, 110], "construct": 12, "databas": [12, 21, 22, 51, 66], "add": [12, 77], "addit": [12, 24, 25, 26, 27, 28, 29, 31, 32, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 49, 50, 51, 52, 53, 54, 55, 56, 57, 60, 61, 63, 64, 65, 66, 69, 75, 77, 80, 81, 82, 90, 92, 94, 96, 97, 99, 100, 101, 102, 103, 104], "store": [12, 26, 77], "updat": [12, 21, 66], "vertic": [12, 21, 45, 49, 51, 54, 60, 61, 66, 72, 73, 74, 77, 87, 88, 89, 96, 103, 110, 117, 118], "belong": 12, "us": [12, 25, 55, 77, 96, 102], "case": 12, "1": [12, 25, 55, 96, 108], "both": 12, "sourc": [12, 22], "target": 12, "2": [12, 55, 96, 108], "an": [12, 25], "subgraph": 12, "3": [12, 55, 108], "cost": [13, 14, 21, 26, 55, 60, 110], "point": [14, 21, 25, 96, 100, 101, 102, 103, 104, 110, 117, 118], "combin": [15, 18, 21, 27, 28, 34, 35, 37, 38, 40, 42, 44, 53, 55, 56, 58, 59, 63, 64, 65, 80, 81, 82, 90, 100, 101, 110, 117, 118], "drive": [16, 61, 100, 101, 103, 104, 117, 118], "distanc": [16, 61, 103], "flow": [18, 21], "adcanc": 18, "pgrout": [19, 21, 108], "concept": [19, 21], "avail": 19, "offici": 19, "releas": [19, 23, 108], "note": [19, 108], "kruskal": 20, "reverse_cost": [21, 55, 110], "without": [21, 66], "geometri": [21, 26, 66, 110], "wiki": 21, "exampl": [21, 24, 25, 26, 27, 28, 29, 31, 32, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 49, 50, 51, 52, 53, 54, 55, 56, 57, 60, 61, 63, 64, 65, 66, 69, 75, 77, 80, 81, 82, 83, 85, 90, 92, 94, 96, 97, 99, 100, 101, 102, 103, 104], "prepar": [21, 49], "creat": [21, 26, 51, 66, 77, 117, 118], "insert": [21, 66], "find": [21, 66], "load": 21, "build": [21, 22], "topologi": [21, 51, 66, 101, 110, 113], "adjust": 21, "length": 21, "base": 21, "code": 21, "check": [21, 49, 66], "cross": [21, 66], "ad": [21, 26, 66, 77], "split": [21, 66], "new": [21, 66], "remov": [21, 66, 77], "surplu": [21, 66], "disconnect": [21, 49], "storag": [21, 49], "connect": [21, 25, 49], "save": [21, 49], "get": [21, 22, 26, 49, 55], "closest": [21, 49], "": [21, 31, 51, 52, 60], "structur": 21, "overload": 21, "One": [21, 27, 28, 34, 35, 37, 38, 40, 42, 44, 53, 55, 56, 58, 59, 60, 63, 64, 65, 80, 81, 82, 90, 100, 101], "mani": [21, 27, 28, 34, 35, 37, 38, 40, 42, 44, 53, 55, 56, 58, 59, 63, 64, 65, 80, 81, 82, 90, 100, 101], "id": 21, "x": [21, 108], "y": 21, "restrict": [21, 77, 96, 97, 110, 116], "via": [21, 60, 96, 116], "For": [21, 55], "trsp": [21, 96], "multipl": [21, 45, 54, 61, 72, 73, 74, 87, 88, 89, 103], "select": 21, "non": 21, "span": [21, 111], "tree": [21, 111], "tip": 21, "how": 21, "contribut": 21, "instal": 22, "short": 22, "version": [22, 96], "enabl": 22, "upgrad": 22, "depend": 22, "configur": 22, "variabl": 22, "test": [22, 26], "licens": 23, "contributor": 23, "thi": 23, "individu": 23, "alphabet": 23, "corpor": 23, "sponsor": 23, "past": 23, "present": 23, "more": 23, "pgr_ksp": 24, "signatur": [24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104], "ksp": [24, 97, 104], "pgr_tsp": [25, 102], "start": 25, "from": [25, 55, 77, 96], "interest": [25, 96, 110], "asymetr": 25, "incomplet": 25, "pgr_tspeuclidean": 26, "coordin": 26, "29": [26, 55], "citi": 26, "western": 26, "sahara": 26, "visual": 26, "purpos": 26, "total": 26, "tour": 26, "pgr_astar": 27, "pgr_astarcost": 28, "pgr_astarcostmatrix": 29, "pgr_alphashap": 30, "valu": [30, 31, 51, 52, 77], "pgr_analyzegraph": 31, "usag": [31, 51, 52, 100], "when": [31, 51, 52, 60, 66, 117, 118], "match": [31, 51, 52], "default": [31, 51, 52], "do": [31, 51, 52], "NOT": [31, 51, 52], "pgr_analyzeonewai": 32, "pgr_articulationpoint": 33, "pgr_bdastar": 34, "pgr_bdastarcost": 35, "pgr_bdastarcostmatrix": 36, "pgr_bddijkstra": 37, "pgr_bddijkstracost": 38, "pgr_bddijkstracostmatrix": 39, "pgr_bellmanford": 40, "pgr_biconnectedcompon": 41, "pgr_binarybreadthfirstsearch": 42, "pgr_bipartit": 43, "pgr_boykovkolmogorov": 44, "pgr_breadthfirstsearch": 45, "singl": [45, 54, 61, 72, 73, 74, 87, 88, 89, 103], "pgr_bridg": 46, "pgr_chinesepostman": 47, "pgr_chinesepostmancost": 48, "pgr_connectedcompon": 49, "pgr_contract": 50, "pgr_createtopologi": 51, "make": [51, 66], "sure": [51, 66], "doe": [51, 66, 101, 103, 117, 118], "have": [51, 66], "vertices_t": [51, 66], "clean": [51, 66], "up": [51, 66], "inspect": [51, 66], "With": [51, 100, 101, 102, 103, 104, 118], "full": 51, "output": 51, "pgr_createverticest": 52, "pgr_dagshortestpath": 53, "resturn": [53, 82], "pgr_depthfirstsearch": 54, "propos": [54, 58, 59, 60, 66, 91, 100, 101, 102, 103, 104, 106], "pgr_dijkstra": 55, "6": [55, 108], "10": 55, "7": 55, "12": 55, "4": [55, 108], "5": [55, 108], "solut": 55, "8": [55, 108], "9": [55, 108], "11": 55, "13": 55, "14": 55, "15": 55, "16": 55, "onli": 55, "17": 55, "18": 55, "19": 55, "20": 55, "21": 55, "22": 55, "23": 55, "24": 55, "25": 55, "26": 55, "27": 55, "28": 55, "30": 55, "31": 55, "32": 55, "equval": 55, "between": 55, "33": 55, "34": 55, "35": 55, "36": 55, "37": 55, "pgr_dijkstracost": 56, "pgr_dijkstracostmatrix": 57, "pgr_dijkstranear": 58, "Near": [58, 59], "pgr_dijkstranearcost": 59, "pgr_dijkstravia": 60, "main": [60, 110], "aggreg": 60, "third": 60, "node": [60, 77], "visit": [60, 100], "ar": [60, 66], "reach": 60, "statu": 60, "pass": [60, 100], "front": [60, 100], "pgr_drivingdist": 61, "pgr_edgecolor": 62, "pgr_edgedisjointpath": 63, "pgr_edmondskarp": 64, "pgr_edwardmoor": 65, "pgr_extractvertic": 66, "line": 66, "i": 66, "known": [66, 96], "identifi": [66, 77], "dryrun": 66, "execut": 66, "pgr_floydwarshal": 67, "pgr_full_vers": 68, "pgr_isplanar": 69, "pgr_johnson": 70, "pgr_kruskal": 71, "pgr_kruskalbf": 72, "pgr_kruskaldd": 73, "pgr_kruskaldf": 74, "pgr_lengauertarjandominatortre": 75, "pgr_linegraph": 76, "pgr_linegraphful": 77, "transform": [77, 114], "map": 77, "fill": 77, "soft": 77, "idenifi": 77, "simplifi": 77, "leaf": 77, "give": 77, "veric": 77, "self": 77, "loop": 77, "complet": 77, "newli": 77, "calcul": 77, "pgr_makeconnect": 78, "pgr_maxcardinalitymatch": 79, "pgr_maxflow": 80, "pgr_maxflowmincost": 81, "pgr_maxflowmincost_cost": 82, "pgr_nodenetwork": 83, "imag": [83, 110], "compar": 83, "pgr_pickdeliv": 84, "pgr_pickdelivereuclidean": 85, "pgr_prim": 86, "pgr_primbf": 87, "pgr_primdd": 88, "pgr_primdf": 89, "pgr_pushrelabel": 90, "pgr_sequentialvertexcolor": 91, "pgr_stoerwagn": 92, "pgr_strongcompon": 93, "pgr_topologicalsort": 94, "pgr_transitiveclosur": 95, "pgr_trsp": 96, "turn": 96, "support": [96, 110, 112], "issu": 96, "differ": 96, "wai": 96, "repres": 96, "found": 96, "same": 96, "user": 96, "contradict": 96, "equal": 96, "number": 96, "prototyp": 96, "pgr_turnrestrictedpath": 97, "special": 97, "pgr_version": 98, "pgr_vrponedepot": 99, "pgr_withpoint": 100, "variat": 100, "right": [100, 101, 104, 117, 118], "side": [100, 101, 103, 104, 117, 118], "left": [100, 101, 104, 117, 118], "pgr_withpointscost": 101, "matter": [101, 103, 117, 118], "pgr_withpointscostmatrix": 102, "pgr_withpointsdd": 103, "pgr_withpointsksp": 104, "prim": 105, "refer": 107, "0": 108, "chang": 108, "05": 108, "03": 108, "02": 108, "01": 108, "0b": 108, "0a": 108, "outsid": 110, "fillup": 110, "report": 112, "mail": 112, "list": 112, "gi": 112, "stackexchang": 112, "commerci": 112, "travers": 115, "withpoint": [117, 118], "about": [117, 118], "temporari": [117, 118], "On": [117, 118], "hand": [117, 118], "network": [117, 118]}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx": 57}, "alltitles": {"BFS - Category": [[0, "bfs-category"]], "Parameters": [[0, "parameters"], [4, "parameters"], [6, "parameters"], [9, "parameters"], [14, "parameters"], [15, "parameters"], [16, "parameters"], [21, "parameters"], [24, "parameters"], [25, "parameters"], [26, "parameters"], [27, "parameters"], [28, "parameters"], [29, "parameters"], [30, "parameters"], [31, "parameters"], [32, "parameters"], [33, "parameters"], [34, "parameters"], [35, "parameters"], [36, "parameters"], [37, "parameters"], [38, "parameters"], [39, "parameters"], [40, "parameters"], [41, "parameters"], [42, "parameters"], [43, "parameters"], [44, "parameters"], [45, "parameters"], [46, "parameters"], [47, "parameters"], [48, "parameters"], [49, "parameters"], [50, "parameters"], [51, "parameters"], [52, "parameters"], [53, "parameters"], [54, "parameters"], [55, "parameters"], [56, "parameters"], [57, "parameters"], [58, "parameters"], [59, "parameters"], [60, "parameters"], [61, "parameters"], [62, "parameters"], [63, "parameters"], [64, "parameters"], [65, "parameters"], [66, "parameters"], [67, "parameters"], [69, "parameters"], [70, "parameters"], [71, "parameters"], [72, "parameters"], [73, "parameters"], [74, "parameters"], [75, "parameters"], [76, "parameters"], [77, "parameters"], [78, "parameters"], [79, "parameters"], [80, "parameters"], [81, "parameters"], [82, "parameters"], [83, "parameters"], [84, "parameters"], [85, "parameters"], [86, "parameters"], [87, "parameters"], [88, "parameters"], [89, "parameters"], [90, "parameters"], [91, "parameters"], [92, "parameters"], [93, "parameters"], [94, "parameters"], [95, "parameters"], [97, "parameters"], [99, "parameters"], [100, "parameters"], [101, "parameters"], [102, "parameters"], [103, "parameters"], [104, "parameters"], [116, "parameters"], [117, "parameters"], [118, "parameters"]], "BFS optional parameters": [[0, "bfs-optional-parameters"], [72, "bfs-optional-parameters"], [87, "bfs-optional-parameters"]], "Inner Queries": [[0, "inner-queries"], [4, "inner-queries"], [6, "inner-queries"], [9, "inner-queries"], [14, "inner-queries"], [15, "inner-queries"], [16, "inner-queries"], [18, "inner-queries"], [20, "inner-queries"], [21, "inner-queries"], [24, "inner-queries"], [25, "inner-queries"], [26, "inner-queries"], [27, "inner-queries"], [28, "inner-queries"], [29, "inner-queries"], [33, "inner-queries"], [34, "inner-queries"], [35, "inner-queries"], [36, "inner-queries"], [37, "inner-queries"], [38, "inner-queries"], [39, "inner-queries"], [40, "inner-queries"], [41, "inner-queries"], [42, "inner-queries"], [43, "inner-queries"], [44, "inner-queries"], [45, "inner-queries"], [46, "inner-queries"], [47, "inner-queries"], [48, "inner-queries"], [49, "inner-queries"], [50, "inner-queries"], [53, "inner-queries"], [54, "inner-queries"], [55, "inner-queries"], [56, "inner-queries"], [57, "inner-queries"], [58, "inner-queries"], [59, "inner-queries"], [60, "inner-queries"], [61, "inner-queries"], [62, "inner-queries"], [63, "inner-queries"], [64, "inner-queries"], [65, "inner-queries"], [66, "inner-queries"], [67, "inner-queries"], [69, "inner-queries"], [70, "inner-queries"], [71, "inner-queries"], [72, "inner-queries"], [73, "inner-queries"], [74, "inner-queries"], [75, "inner-queries"], [76, "inner-queries"], [77, "inner-queries"], [78, "inner-queries"], [79, "inner-queries"], [80, "inner-queries"], [81, "inner-queries"], [82, "inner-queries"], [86, "inner-queries"], [87, "inner-queries"], [88, "inner-queries"], [89, "inner-queries"], [90, "inner-queries"], [91, "inner-queries"], [92, "inner-queries"], [93, "inner-queries"], [94, "inner-queries"], [95, "inner-queries"], [97, "inner-queries"], [99, "inner-queries"], [100, "inner-queries"], [101, "inner-queries"], [102, "inner-queries"], [103, "inner-queries"], [104, "inner-queries"], [105, "inner-queries"], [116, "inner-queries"], [117, "inner-queries"], [118, "inner-queries"]], "Edges SQL": [[0, "edges-sql"], [6, "edges-sql"], [9, "edges-sql"], [14, "edges-sql"], [15, "edges-sql"], [16, "edges-sql"], [18, "edges-sql"], [21, "edges-sql"], [24, "edges-sql"], [27, "edges-sql"], [28, "edges-sql"], [29, "edges-sql"], [33, "edges-sql"], [34, "edges-sql"], [35, "edges-sql"], [36, "edges-sql"], [37, "edges-sql"], [38, "edges-sql"], [39, "edges-sql"], [40, "edges-sql"], [41, "edges-sql"], [42, "edges-sql"], [43, "edges-sql"], [44, "edges-sql"], [45, "edges-sql"], [46, "edges-sql"], [47, "edges-sql"], [48, "edges-sql"], [49, "edges-sql"], [50, "edges-sql"], [53, "edges-sql"], [54, "edges-sql"], [55, "edges-sql"], [56, "edges-sql"], [57, "edges-sql"], [58, "edges-sql"], [59, "edges-sql"], [60, "edges-sql"], [61, "edges-sql"], [62, "edges-sql"], [63, "edges-sql"], [64, "edges-sql"], [65, "edges-sql"], [66, "edges-sql"], [67, "edges-sql"], [69, "edges-sql"], [70, "edges-sql"], [71, "edges-sql"], [72, "edges-sql"], [73, "edges-sql"], [74, "edges-sql"], [75, "edges-sql"], [76, "edges-sql"], [77, "edges-sql"], [78, "edges-sql"], [79, "edges-sql"], [80, "edges-sql"], [81, "edges-sql"], [82, "edges-sql"], [86, "edges-sql"], [87, "edges-sql"], [88, "edges-sql"], [89, "edges-sql"], [90, "edges-sql"], [91, "edges-sql"], [92, "edges-sql"], [93, "edges-sql"], [94, "edges-sql"], [95, "edges-sql"], [97, "edges-sql"], [100, "edges-sql"], [101, "edges-sql"], [102, "edges-sql"], [103, "edges-sql"], [104, "edges-sql"], [116, "edges-sql"], [117, "edges-sql"], [118, "edges-sql"]], "Result Columns": [[0, "result-columns"], [6, "result-columns"], [10, "result-columns"], [14, "result-columns"], [18, "result-columns"], [24, "result-columns"], [25, "result-columns"], [26, "result-columns"], [27, "result-columns"], [28, "result-columns"], [29, "result-columns"], [33, "result-columns"], [34, "result-columns"], [35, "result-columns"], [36, "result-columns"], [37, "result-columns"], [38, "result-columns"], [39, "result-columns"], [41, "result-columns"], [42, "result-columns"], [43, "result-columns"], [44, "result-columns"], [46, "result-columns"], [47, "result-columns"], [48, "result-columns"], [49, "result-columns"], [50, "result-columns"], [55, "result-columns"], [56, "result-columns"], [57, "result-columns"], [58, "result-columns"], [59, "result-columns"], [60, "result-columns"], [61, "result-columns"], [62, "result-columns"], [63, "result-columns"], [64, "result-columns"], [66, "result-columns"], [67, "result-columns"], [69, "result-columns"], [70, "result-columns"], [71, "result-columns"], [72, "result-columns"], [73, "result-columns"], [74, "result-columns"], [75, "result-columns"], [76, "result-columns"], [77, "result-columns"], [78, "result-columns"], [79, "result-columns"], [80, "result-columns"], [81, "result-columns"], [86, "result-columns"], [87, "result-columns"], [88, "result-columns"], [89, "result-columns"], [90, "result-columns"], [91, "result-columns"], [92, "result-columns"], [93, "result-columns"], [94, "result-columns"], [95, "result-columns"], [97, "result-columns"], [98, "result-columns"], [99, "result-columns"], [100, "result-columns"], [101, "result-columns"], [102, "result-columns"], [103, "result-columns"], [104, "result-columns"], [116, "result-columns"]], "See Also": [[0, "see-also"], [1, "see-also"], [3, "see-also"], [4, "see-also"], [5, "see-also"], [6, "see-also"], [7, "see-also"], [8, "see-also"], [9, "see-also"], [10, "see-also"], [11, "see-also"], [12, "see-also"], [13, "see-also"], [14, "see-also"], [15, "see-also"], [16, "see-also"], [17, "see-also"], [18, "see-also"], [20, "see-also"], [22, "see-also"], [24, "see-also"], [25, "see-also"], [26, "see-also"], [27, "see-also"], [28, "see-also"], [29, "see-also"], [30, "see-also"], [31, "see-also"], [32, "see-also"], [33, "see-also"], [34, "see-also"], [35, "see-also"], [36, "see-also"], [37, "see-also"], [38, "see-also"], [39, "see-also"], [40, "see-also"], [41, "see-also"], [42, "see-also"], [43, "see-also"], [44, "see-also"], [45, "see-also"], [46, "see-also"], [47, "see-also"], [48, "see-also"], [49, "see-also"], [50, "see-also"], [51, "see-also"], [52, "see-also"], [53, "see-also"], [54, "see-also"], [55, "see-also"], [56, "see-also"], [57, "see-also"], [58, "see-also"], [59, "see-also"], [60, "see-also"], [61, "see-also"], [62, "see-also"], [63, "see-also"], [64, "see-also"], [65, "see-also"], [66, "see-also"], [67, "see-also"], [68, "see-also"], [69, "see-also"], [70, "see-also"], [71, "see-also"], [72, "see-also"], [73, "see-also"], [74, "see-also"], [75, "see-also"], [76, "see-also"], [77, "see-also"], [78, "see-also"], [79, "see-also"], [80, "see-also"], [81, "see-also"], [82, "see-also"], [83, "see-also"], [84, "see-also"], [85, "see-also"], [86, "see-also"], [87, "see-also"], [88, "see-also"], [89, "see-also"], [90, "see-also"], [91, "see-also"], [92, "see-also"], [93, "see-also"], [94, "see-also"], [95, "see-also"], [96, "see-also"], [97, "see-also"], [98, "see-also"], [99, "see-also"], [100, "see-also"], [101, "see-also"], [102, "see-also"], [103, "see-also"], [104, "see-also"], [105, "see-also"], [106, "see-also"], [107, "see-also"], [109, "see-also"], [111, "see-also"], [113, "see-also"], [114, "see-also"], [115, "see-also"], [116, "see-also"], [117, "see-also"], [118, "see-also"]], "DFS - Category": [[1, "dfs-category"]], "K shortest paths - Category": [[2, "k-shortest-paths-category"]], "Traveling Sales Person - Family of functions": [[3, "traveling-sales-person-family-of-functions"]], "Table of Contents": [[3, "table-of-contents"], [19, "table-of-contents"]], "General Information": [[3, "general-information"], [13, "general-information"], [14, "general-information"], [116, "general-information"]], "Problem Definition": [[3, "problem-definition"], [25, "problem-definition"], [26, "problem-definition"]], "Origin": [[3, "origin"]], "Characteristics": [[3, "characteristics"], [4, "characteristics"], [8, "characteristics"], [13, "characteristics"], [14, "characteristics"], [25, "characteristics"], [26, "characteristics"], [58, "characteristics"], [59, "characteristics"], [84, "characteristics"], [85, "characteristics"]], "TSP optional parameters": [[3, "tsp-optional-parameters"], [25, "tsp-optional-parameters"], [26, "tsp-optional-parameters"]], "Vehicle Routing Functions - Category (Experimental)": [[4, "vehicle-routing-functions-category-experimental"]], "Contents": [[4, "contents"], [108, "contents"], [117, "contents"], [118, "contents"]], "Introduction": [[4, "introduction"], [6, "introduction"], [12, "introduction"], [15, "introduction"], [23, "introduction"], [96, "introduction"], [114, "introduction"], [117, "introduction"], [118, "introduction"]], "Pick & Delivery": [[4, "pick-delivery"]], "Pick & deliver": [[4, "pick-deliver"]], "Pick-Deliver optional parameters": [[4, "pick-deliver-optional-parameters"], [84, "pick-deliver-optional-parameters"], [85, "pick-deliver-optional-parameters"]], "Orders SQL": [[4, "orders-sql"], [84, "orders-sql"], [85, "orders-sql"]], "Vehicles SQL": [[4, "vehicles-sql"], [84, "vehicles-sql"], [85, "vehicles-sql"]], "Matrix SQL": [[4, "matrix-sql"], [25, "matrix-sql"], [84, "matrix-sql"]], "Return columns": [[4, "return-columns"], [21, "return-columns"], [40, "return-columns"], [45, "return-columns"], [54, "return-columns"], [65, "return-columns"], [68, "return-columns"], [84, "return-columns"], [85, "return-columns"]], "Summary Row": [[4, "summary-row"]], "Handling Parameters": [[4, "handling-parameters"]], "Capacity and Demand Units Handling": [[4, "capacity-and-demand-units-handling"]], "Locations": [[4, "locations"]], "Time Handling": [[4, "time-handling"]], "Factor handling": [[4, "factor-handling"]], "A* - Family of functions": [[5, "a-family-of-functions"]], "Description": [[5, "description"], [7, "description"], [9, "description"], [20, "description"], [24, "description"], [25, "description"], [26, "description"], [27, "description"], [28, "description"], [29, "description"], [30, "description"], [31, "description"], [32, "description"], [33, "description"], [34, "description"], [35, "description"], [36, "description"], [37, "description"], [38, "description"], [39, "description"], [40, "description"], [41, "description"], [42, "description"], [43, "description"], [44, "description"], [45, "description"], [46, "description"], [47, "description"], [48, "description"], [49, "description"], [50, "description"], [51, "description"], [52, "description"], [53, "description"], [54, "description"], [55, "description"], [56, "description"], [57, "description"], [58, "description"], [59, "description"], [60, "description"], [61, "description"], [62, "description"], [63, "description"], [64, "description"], [65, "description"], [66, "description"], [67, "description"], [68, "description"], [69, "description"], [70, "description"], [71, "description"], [72, "description"], [73, "description"], [74, "description"], [75, "description"], [76, "description"], [77, "description"], [78, "description"], [79, "description"], [80, "description"], [81, "description"], [82, "description"], [83, "description"], [86, "description"], [87, "description"], [88, "description"], [89, "description"], [90, "description"], [91, "description"], [92, "description"], [93, "description"], [94, "description"], [95, "description"], [96, "description"], [97, "description"], [98, "description"], [99, "description"], [100, "description"], [101, "description"], [102, "description"], [103, "description"], [104, "description"], [105, "description"]], "aStar optional Parameters": [[5, "astar-optional-parameters"], [27, "astar-optional-parameters"], [28, "astar-optional-parameters"], [29, "astar-optional-parameters"], [34, "astar-optional-parameters"], [35, "astar-optional-parameters"], [36, "astar-optional-parameters"]], "Advanced documentation": [[5, "advanced-documentation"], [15, "advanced-documentation"], [117, "advanced-documentation"]], "Heuristic": [[5, "heuristic"]], "Factor": [[5, "factor"]], "All Pairs - Family of Functions": [[6, "all-pairs-family-of-functions"]], "Optional parameters": [[6, "optional-parameters"], [14, "optional-parameters"], [15, "optional-parameters"], [24, "optional-parameters"], [27, "optional-parameters"], [28, "optional-parameters"], [29, "optional-parameters"], [34, "optional-parameters"], [35, "optional-parameters"], [36, "optional-parameters"], [37, "optional-parameters"], [38, "optional-parameters"], [39, "optional-parameters"], [40, "optional-parameters"], [45, "optional-parameters"], [54, "optional-parameters"], [55, "optional-parameters"], [56, "optional-parameters"], [57, "optional-parameters"], [60, "optional-parameters"], [61, "optional-parameters"], [63, "optional-parameters"], [65, "optional-parameters"], [66, "optional-parameters"], [67, "optional-parameters"], [70, "optional-parameters"], [76, "optional-parameters"], [97, "optional-parameters"], [100, "optional-parameters"], [101, "optional-parameters"], [102, "optional-parameters"], [103, "optional-parameters"], [104, "optional-parameters"], [117, "optional-parameters"], [118, "optional-parameters"]], "Performance": [[6, "performance"]], "Data": [[6, "data"]], "Results": [[6, "results"]], "Bidirectional A* - Family of functions": [[7, "bidirectional-a-family-of-functions"]], "Bidirectional Dijkstra - Family of functions": [[8, "bidirectional-dijkstra-family-of-functions"]], "Synopsis": [[8, "synopsis"], [14, "synopsis"], [84, "synopsis"], [85, "synopsis"]], "Chinese Postman Problem - Family of functions (Experimental)": [[9, "chinese-postman-problem-family-of-functions-experimental"]], "Coloring - Family of functions": [[10, "coloring-family-of-functions"]], "Components - Family of functions": [[11, "components-family-of-functions"]], "Contraction - Family of functions": [[12, "contraction-family-of-functions"]], "Dead end contraction": [[12, "dead-end-contraction"]], "Dead end": [[12, "dead-end"]], "Dead end vertex on undirected graph": [[12, "dead-end-vertex-on-undirected-graph"]], "Dead end vertex on directed graph": [[12, "dead-end-vertex-on-directed-graph"]], "Operation: Dead End Contraction": [[12, "operation-dead-end-contraction"]], "Linear contraction": [[12, "linear-contraction"]], "Linear": [[12, "linear"]], "Linear vertex on undirected graph": [[12, "linear-vertex-on-undirected-graph"]], "Linear vertex on directed graph": [[12, "linear-vertex-on-directed-graph"]], "Operation: Linear Contraction": [[12, "operation-linear-contraction"]], "The cycle": [[12, "the-cycle"]], "Contracting sample data": [[12, "contracting-sample-data"]], "Construction of the graph in the database": [[12, "construction-of-the-graph-in-the-database"]], "Contraction results": [[12, "contraction-results"]], "Add additional columns": [[12, "add-additional-columns"]], "Store contraction information": [[12, "store-contraction-information"]], "The vertex table update": [[12, "the-vertex-table-update"]], "The edge table update": [[12, "the-edge-table-update"]], "The contracted graph": [[12, "the-contracted-graph"]], "Vertices that belong to the contracted graph.": [[12, "vertices-that-belong-to-the-contracted-graph"]], "Edges that belong to the contracted graph.": [[12, "edges-that-belong-to-the-contracted-graph"]], "Contracted graph": [[12, "contracted-graph"]], "Using the contracted graph": [[12, "using-the-contracted-graph"]], "Case 1: Both source and target belong to the contracted graph.": [[12, "case-1-both-source-and-target-belong-to-the-contracted-graph"]], "Case 2: Source and/or target belong to an edge subgraph.": [[12, "case-2-source-and-or-target-belong-to-an-edge-subgraph"]], "Case 3: Source and/or target belong to a vertex.": [[12, "case-3-source-and-or-target-belong-to-a-vertex"]], "Cost - Category": [[13, "cost-category"]], "Cost Matrix - Category": [[14, "cost-matrix-category"]], "Points SQL": [[14, "points-sql"], [21, "points-sql"], [100, "points-sql"], [101, "points-sql"], [102, "points-sql"], [103, "points-sql"], [104, "points-sql"], [117, "points-sql"], [118, "points-sql"]], "Dijkstra - Family of functions": [[15, "dijkstra-family-of-functions"]], "Combinations SQL": [[15, "combinations-sql"], [18, "combinations-sql"], [21, "combinations-sql"], [27, "combinations-sql"], [28, "combinations-sql"], [34, "combinations-sql"], [35, "combinations-sql"], [37, "combinations-sql"], [38, "combinations-sql"], [40, "combinations-sql"], [42, "combinations-sql"], [44, "combinations-sql"], [53, "combinations-sql"], [55, "combinations-sql"], [56, "combinations-sql"], [58, "combinations-sql"], [59, "combinations-sql"], [63, "combinations-sql"], [64, "combinations-sql"], [65, "combinations-sql"], [80, "combinations-sql"], [81, "combinations-sql"], [82, "combinations-sql"], [90, "combinations-sql"], [100, "combinations-sql"], [101, "combinations-sql"], [117, "combinations-sql"], [118, "combinations-sql"]], "The problem definition (Advanced documentation)": [[15, "the-problem-definition-advanced-documentation"]], "Driving Distance - Category": [[16, "driving-distance-category"]], "Experimental Functions": [[17, "experimental-functions"]], "Flow - Family of functions": [[18, "flow-family-of-functions"]], "Flow Functions General Information": [[18, "flow-functions-general-information"]], "Adcanced Documentation": [[18, "adcanced-documentation"]], "General": [[19, "general"], [21, "general"]], "Pgrouting Concepts": [[19, "pgrouting-concepts"]], "Function Families": [[19, "routingfunctions"], [109, "function-families"]], "Functions by categories": [[19, "functions-by-categories"], [109, "functions-by-categories"]], "Available Functions but not official pgRouting functions": [[19, "available-functions-but-not-official-pgrouting-functions"]], "Release Notes": [[19, "release-notes"], [108, "release-notes"]], "Kruskal - Family of functions": [[20, "kruskal-family-of-functions"]], "pgRouting Concepts": [[21, "pgrouting-concepts"]], "Graphs": [[21, "graphs"]], "Graph definition": [[21, "graph-definition"]], "Graph with cost": [[21, "graph-with-cost"]], "Graph with cost and reverse_cost": [[21, "graph-with-cost-and-reverse-cost"]], "Graphs without geometries": [[21, "graphs-without-geometries"], [66, "graphs-without-geometries"]], "Wiki example": [[21, "wiki-example"]], "Prepare the database": [[21, "prepare-the-database"]], "Create a table": [[21, "create-a-table"]], "Insert the data": [[21, "insert-the-data"], [66, "insert-the-data"]], "Find the shortest path": [[21, "find-the-shortest-path"], [66, "find-the-shortest-path"]], "Vertex information": [[21, "vertex-information"], [66, "vertex-information"]], "Graphs with geometries": [[21, "graphs-with-geometries"]], "Create a routing Database": [[21, "create-a-routing-database"]], "Load Data": [[21, "load-data"]], "Build a routing topology": [[21, "build-a-routing-topology"]], "Adjust costs": [[21, "adjust-costs"]], "Update costs to length of geometry": [[21, "update-costs-to-length-of-geometry"]], "Update costs based on codes": [[21, "update-costs-based-on-codes"]], "Check the Routing Topology": [[21, "check-the-routing-topology"]], "Crossing edges": [[21, "crossing-edges"], [66, "crossing-edges"]], "Adding split edges": [[21, "adding-split-edges"], [66, "adding-split-edges"]], "Adding new vertices": [[21, "adding-new-vertices"], [66, "adding-new-vertices"]], "Updating edges topology": [[21, "updating-edges-topology"], [66, "updating-edges-topology"]], "Removing the surplus edges": [[21, "removing-the-surplus-edges"], [66, "removing-the-surplus-edges"]], "Updating vertices topology": [[21, "updating-vertices-topology"], [66, "updating-vertices-topology"]], "Checking for crossing edges": [[21, "checking-for-crossing-edges"], [66, "checking-for-crossing-edges"]], "Disconnected graphs": [[21, "disconnected-graphs"]], "Prepare storage for connection information": [[21, "prepare-storage-for-connection-information"], [49, "prepare-storage-for-connection-information"]], "Save the vertices connection information": [[21, "save-the-vertices-connection-information"], [49, "save-the-vertices-connection-information"]], "Save the edges connection information": [[21, "save-the-edges-connection-information"], [49, "save-the-edges-connection-information"]], "Get the closest vertex": [[21, "get-the-closest-vertex"], [49, "get-the-closest-vertex"]], "Connecting components": [[21, "connecting-components"], [49, "connecting-components"]], "Checking components": [[21, "checking-components"], [49, "checking-components"]], "Contraction of a graph": [[21, "contraction-of-a-graph"]], "Dead ends": [[21, "dead-ends"]], "Linear edges": [[21, "linear-edges"]], "Function\u2019s structure": [[21, "function-s-structure"]], "": [[21, null], [21, null], [24, null], [25, "index-0"], [26, "index-0"], [27, null], [27, null], [27, null], [27, null], [27, null], [27, null], [28, null], [28, null], [28, null], [28, null], [28, null], [28, null], [29, null], [30, "index-0"], [31, null], [32, null], [33, null], [34, null], [34, null], [34, null], [34, null], [34, null], [34, null], [35, null], [35, null], [35, null], [35, null], [35, null], [35, null], [36, null], [37, null], [37, null], [37, null], [37, null], [37, null], [37, null], [38, null], [38, null], [38, null], [38, null], [38, null], [38, null], [39, null], [40, null], [40, null], [40, null], [40, null], [40, null], [40, null], [41, null], [42, null], [42, null], [42, null], [42, null], [42, null], [42, null], [43, "index-0"], [44, null], [44, null], [44, null], [44, null], [44, null], [44, null], [45, null], [45, null], [45, null], [46, null], [47, "index-0"], [48, "index-0"], [49, null], [50, "index-0"], [51, null], [52, null], [53, null], [53, null], [53, null], [53, null], [53, null], [53, null], [54, null], [54, null], [54, null], [55, null], [55, null], [55, null], [55, null], [55, null], [55, null], [56, null], [56, null], [56, null], [56, null], [56, null], [56, null], [57, null], [58, null], [58, null], [58, null], [58, null], [58, null], [59, null], [59, null], [59, null], [59, null], [59, null], [60, null], [61, null], [61, null], [61, null], [62, "index-0"], [63, null], [63, null], [63, null], [63, null], [63, null], [63, null], [64, null], [64, null], [64, null], [64, null], [64, null], [64, null], [65, null], [65, null], [65, null], [65, null], [65, null], [65, null], [66, "index-0"], [67, null], [68, null], [69, "index-0"], [70, null], [71, null], [72, null], [72, null], [72, null], [73, null], [73, null], [73, null], [74, null], [74, null], [74, null], [75, null], [76, null], [77, null], [78, null], [79, "index-0"], [80, null], [80, null], [80, null], [80, null], [80, null], [80, null], [81, null], [81, null], [81, null], [81, null], [81, null], [81, null], [82, null], [82, null], [82, null], [82, null], [82, null], [82, null], [84, null], [84, null], [84, null], [85, null], [85, null], [85, null], [86, null], [87, null], [87, null], [87, null], [88, null], [88, null], [88, null], [89, null], [89, null], [89, null], [90, null], [90, null], [90, null], [90, null], [90, null], [90, null], [91, "index-0"], [92, "index-0"], [93, null], [94, "index-0"], [95, "index-0"], [97, "index-0"], [98, null], [100, null], [100, null], [100, null], [100, null], [100, null], [100, null], [101, null], [101, null], [101, null], [101, null], [101, null], [101, null], [102, null], [103, null], [103, null], [103, null], [104, null]], "Function\u2019s overloads": [[21, "function-s-overloads"]], "One to One": [[21, "one-to-one"], [27, "one-to-one"], [28, "one-to-one"], [34, "one-to-one"], [35, "one-to-one"], [37, "one-to-one"], [38, "one-to-one"], [40, "one-to-one"], [42, "one-to-one"], [44, "one-to-one"], [53, "one-to-one"], [55, "one-to-one"], [56, "one-to-one"], [63, "one-to-one"], [64, "one-to-one"], [65, "one-to-one"], [80, "one-to-one"], [81, "one-to-one"], [82, "one-to-one"], [90, "one-to-one"], [100, "one-to-one"], [101, "one-to-one"]], "One to Many": [[21, "one-to-many"], [27, "one-to-many"], [28, "one-to-many"], [34, "one-to-many"], [35, "one-to-many"], [37, "one-to-many"], [38, "one-to-many"], [40, "one-to-many"], [42, "one-to-many"], [44, "one-to-many"], [53, "one-to-many"], [55, "one-to-many"], [56, "one-to-many"], [58, "one-to-many"], [59, "one-to-many"], [63, "one-to-many"], [64, "one-to-many"], [65, "one-to-many"], [80, "one-to-many"], [81, "one-to-many"], [82, "one-to-many"], [90, "one-to-many"], [100, "one-to-many"], [101, "one-to-many"]], "Many to One": [[21, "many-to-one"], [27, "many-to-one"], [28, "many-to-one"], [34, "many-to-one"], [35, "many-to-one"], [37, "many-to-one"], [38, "many-to-one"], [40, "many-to-one"], [42, "many-to-one"], [44, "many-to-one"], [53, "many-to-one"], [55, "many-to-one"], [56, "many-to-one"], [58, "many-to-one"], [59, "many-to-one"], [63, "many-to-one"], [64, "many-to-one"], [65, "many-to-one"], [80, "many-to-one"], [81, "many-to-one"], [82, "many-to-one"], [90, "many-to-one"], [100, "many-to-one"], [101, "many-to-one"]], "Many to Many": [[21, "many-to-many"], [27, "many-to-many"], [28, "many-to-many"], [34, "many-to-many"], [35, "many-to-many"], [37, "many-to-many"], [38, "many-to-many"], [40, "many-to-many"], [42, "many-to-many"], [44, "many-to-many"], [53, "many-to-many"], [55, "many-to-many"], [56, "many-to-many"], [58, "many-to-many"], [59, "many-to-many"], [63, "many-to-many"], [64, "many-to-many"], [65, "many-to-many"], [80, "many-to-many"], [81, "many-to-many"], [82, "many-to-many"], [90, "many-to-many"], [100, "many-to-many"], [101, "many-to-many"]], "Combinations": [[21, "combinations"], [27, "combinations"], [28, "combinations"], [34, "combinations"], [35, "combinations"], [37, "combinations"], [38, "combinations"], [40, "combinations"], [42, "combinations"], [44, "combinations"], [53, "combinations"], [55, "combinations"], [56, "combinations"], [58, "combinations"], [59, "combinations"], [63, "combinations"], [64, "combinations"], [65, "combinations"], [80, "combinations"], [81, "combinations"], [82, "combinations"], [90, "combinations"], [100, "combinations"], [101, "combinations"], [110, "combinations"]], "General without id": [[21, "general-without-id"]], "General with (X,Y)": [[21, "general-with-x-y"]], "Flow": [[21, "flow"]], "Restrictions SQL": [[21, "restrictions-sql"], [97, "restrictions-sql"], [116, "restrictions-sql"]], "Parameters for the Via functions": [[21, "parameters-for-the-via-functions"]], "For the TRSP functions": [[21, "for-the-trsp-functions"]], "Return columns for a path": [[21, "return-columns-for-a-path"]], "Multiple paths": [[21, "multiple-paths"]], "Selective for multiple paths.": [[21, "selective-for-multiple-paths"]], "Non selective for multiple paths": [[21, "non-selective-for-multiple-paths"]], "Return columns for cost functions": [[21, "return-columns-for-cost-functions"]], "Return columns for flow functions": [[21, "return-columns-for-flow-functions"]], "Return columns for spanning tree functions": [[21, "return-columns-for-spanning-tree-functions"]], "Performance Tips": [[21, "performance-tips"]], "For the Routing functions": [[21, "for-the-routing-functions"]], "How to contribute": [[21, "how-to-contribute"]], "Installation": [[22, "installation"]], "Short Version": [[22, "short-version"]], "Get the sources": [[22, "get-the-sources"]], "Enabling and upgrading in the database": [[22, "enabling-and-upgrading-in-the-database"]], "Dependencies": [[22, "dependencies"]], "Configuring": [[22, "configuring"]], "Configurable variables": [[22, "configurable-variables"]], "Building": [[22, "building"]], "Testing": [[22, "testing"]], "Licensing": [[23, "licensing"]], "Contributors": [[23, "contributors"]], "This Release Contributors": [[23, "this-release-contributors"]], "Individuals in this release (in alphabetical order)": [[23, "individuals-in-this-release-in-alphabetical-order"]], "Corporate Sponsors in this release (in alphabetical order)": [[23, "corporate-sponsors-in-this-release-in-alphabetical-order"]], "Contributors Past & Present:": [[23, "contributors-past-present"]], "Individuals (in alphabetical order)": [[23, "individuals-in-alphabetical-order"]], "Corporate Sponsors (in alphabetical order)": [[23, "corporate-sponsors-in-alphabetical-order"]], "More Information": [[23, "more-information"]], "pgr_KSP": [[24, "pgr-ksp"]], "Signatures": [[24, "signatures"], [25, "signatures"], [26, "signatures"], [27, "signatures"], [28, "signatures"], [29, "signatures"], [30, "signatures"], [32, "signatures"], [33, "signatures"], [34, "signatures"], [35, "signatures"], [36, "signatures"], [37, "signatures"], [38, "signatures"], [39, "signatures"], [40, "signatures"], [41, "signatures"], [42, "signatures"], [43, "signatures"], [44, "signatures"], [45, "signatures"], [46, "signatures"], [47, "signatures"], [48, "signatures"], [49, "signatures"], [50, "signatures"], [51, "signatures"], [52, "signatures"], [53, "signatures"], [54, "signatures"], [55, "signatures"], [56, "signatures"], [57, "signatures"], [58, "signatures"], [59, "signatures"], [60, "signatures"], [61, "signatures"], [62, "signatures"], [63, "signatures"], [64, "signatures"], [65, "signatures"], [66, "signatures"], [67, "signatures"], [68, "signatures"], [69, "signatures"], [70, "signatures"], [71, "signatures"], [72, "signatures"], [73, "signatures"], [74, "signatures"], [75, "signatures"], [76, "signatures"], [77, "signatures"], [78, "signatures"], [79, "signatures"], [80, "signatures"], [81, "signatures"], [82, "signatures"], [86, "signatures"], [87, "signatures"], [88, "signatures"], [89, "signatures"], [90, "signatures"], [91, "signatures"], [92, "signatures"], [93, "signatures"], [94, "signatures"], [95, "signatures"], [97, "signatures"], [99, "signatures"], [100, "signatures"], [101, "signatures"], [102, "signatures"], [103, "signatures"], [104, "signatures"]], "KSP Optional parameters": [[24, "ksp-optional-parameters"], [97, "ksp-optional-parameters"], [104, "ksp-optional-parameters"]], "Additional Examples": [[24, "additional-examples"], [25, "additional-examples"], [26, "additional-examples"], [27, "additional-examples"], [28, "additional-examples"], [29, "additional-examples"], [31, "additional-examples"], [32, "additional-examples"], [34, "additional-examples"], [35, "additional-examples"], [36, "additional-examples"], [37, "additional-examples"], [38, "additional-examples"], [39, "additional-examples"], [40, "additional-examples"], [42, "additional-examples"], [44, "additional-examples"], [45, "additional-examples"], [49, "additional-examples"], [50, "additional-examples"], [51, "additional-examples"], [52, "additional-examples"], [53, "additional-examples"], [54, "additional-examples"], [55, "additional-examples"], [56, "additional-examples"], [57, "additional-examples"], [60, "additional-examples"], [61, "additional-examples"], [63, "additional-examples"], [64, "additional-examples"], [65, "additional-examples"], [66, "additional-examples"], [69, "additional-examples"], [75, "additional-examples"], [77, "additional-examples"], [80, "additional-examples"], [81, "additional-examples"], [82, "additional-examples"], [90, "additional-examples"], [96, "additional-examples"], [97, "additional-examples"], [100, "additional-examples"], [101, "additional-examples"], [102, "additional-examples"], [103, "additional-examples"], [104, "additional-examples"]], "pgr_TSP": [[25, "pgr-tsp"]], "Start from vertex 1": [[25, "start-from-vertex-1"]], "Using points of interest to generate an asymetric matrix.": [[25, "using-points-of-interest-to-generate-an-asymetric-matrix"]], "Connected incomplete data": [[25, "connected-incomplete-data"]], "pgr_TSPeuclidean": [[26, "pgr-tspeuclidean"]], "Coordinates SQL": [[26, "coordinates-sql"]], "Test 29 cities of Western Sahara": [[26, "test-29-cities-of-western-sahara"]], "Creating a table for the data and storing the data": [[26, "creating-a-table-for-the-data-and-storing-the-data"]], "Adding a geometry (for visual purposes)": [[26, "adding-a-geometry-for-visual-purposes"]], "Total tour cost": [[26, "total-tour-cost"]], "Getting a geometry of the tour": [[26, "getting-a-geometry-of-the-tour"]], "Visual results": [[26, "visual-results"]], "pgr_aStar": [[27, "pgr-astar"]], "pgr_aStarCost": [[28, "pgr-astarcost"]], "pgr_aStarCostMatrix": [[29, "pgr-astarcostmatrix"]], "pgr_alphaShape": [[30, "pgr-alphashape"]], "Return Value": [[30, "return-value"]], "pgr_analyzeGraph": [[31, "pgr-analyzegraph"]], "Usage when the edge table\u2019s columns MATCH the default values:": [[31, "usage-when-the-edge-table-s-columns-match-the-default-values"], [51, "usage-when-the-edge-table-s-columns-match-the-default-values"]], "Usage when the edge table\u2019s columns DO NOT MATCH the default values:": [[31, "usage-when-the-edge-table-s-columns-do-not-match-the-default-values"], [51, "usage-when-the-edge-table-s-columns-do-not-match-the-default-values"], [52, "usage-when-the-edge-table-s-columns-do-not-match-the-default-values"]], "pgr_analyzeOneWay": [[32, "pgr-analyzeoneway"]], "pgr_articulationPoints": [[33, "pgr-articulationpoints"]], "pgr_bdAstar": [[34, "pgr-bdastar"]], "pgr_bdAstarCost": [[35, "pgr-bdastarcost"]], "pgr_bdAstarCostMatrix": [[36, "pgr-bdastarcostmatrix"]], "pgr_bdDijkstra": [[37, "pgr-bddijkstra"]], "pgr_bdDijkstraCost": [[38, "pgr-bddijkstracost"]], "pgr_bdDijkstraCostMatrix": [[39, "pgr-bddijkstracostmatrix"]], "pgr_bellmanFord - Experimental": [[40, "pgr-bellmanford-experimental"]], "pgr_biconnectedComponents": [[41, "pgr-biconnectedcomponents"]], "pgr_binaryBreadthFirstSearch - Experimental": [[42, "pgr-binarybreadthfirstsearch-experimental"]], "Optional Parameters": [[42, "optional-parameters"], [50, "optional-parameters"]], "pgr_bipartite -Experimental": [[43, "pgr-bipartite-experimental"]], "Additional Example": [[43, "additional-example"]], "pgr_boykovKolmogorov": [[44, "pgr-boykovkolmogorov"]], "pgr_breadthFirstSearch - Experimental": [[45, "pgr-breadthfirstsearch-experimental"]], "Single vertex": [[45, "single-vertex"], [54, "single-vertex"], [72, "single-vertex"], [73, "single-vertex"], [74, "single-vertex"], [87, "single-vertex"], [88, "single-vertex"], [89, "single-vertex"], [103, "single-vertex"]], "Multiple vertices": [[45, "multiple-vertices"], [54, "multiple-vertices"], [72, "multiple-vertices"], [73, "multiple-vertices"], [74, "multiple-vertices"], [87, "multiple-vertices"], [88, "multiple-vertices"], [89, "multiple-vertices"], [103, "multiple-vertices"]], "DFS optional parameters": [[45, "dfs-optional-parameters"], [54, "dfs-optional-parameters"], [74, "dfs-optional-parameters"], [89, "dfs-optional-parameters"]], "pgr_bridges": [[46, "pgr-bridges"]], "pgr_chinesePostman - Experimental": [[47, "pgr-chinesepostman-experimental"]], "pgr_chinesePostmanCost - Experimental": [[48, "pgr-chinesepostmancost-experimental"]], "pgr_connectedComponents": [[49, "pgr-connectedcomponents"]], "Connecting disconnected components": [[49, "connecting-disconnected-components"]], "pgr_contraction": [[50, "pgr-contraction"]], "Contraction optional parameters": [[50, "contraction-optional-parameters"]], "pgr_createTopology": [[51, "pgr-createtopology"]], "Create a routing topology": [[51, "create-a-routing-topology"], [66, "create-a-routing-topology"]], "Make sure the database does not have the vertices_table": [[51, "make-sure-the-database-does-not-have-the-vertices-table"], [66, "make-sure-the-database-does-not-have-the-vertices-table"]], "Clean up the columns of the routing topology to be created": [[51, "clean-up-the-columns-of-the-routing-topology-to-be-created"], [66, "clean-up-the-columns-of-the-routing-topology-to-be-created"]], "Create the vertices table": [[51, "create-the-vertices-table"], [66, "create-the-vertices-table"]], "Inspect the vertices table": [[51, "inspect-the-vertices-table"], [66, "inspect-the-vertices-table"]], "Create the routing topology on the edge table": [[51, "create-the-routing-topology-on-the-edge-table"], [66, "create-the-routing-topology-on-the-edge-table"]], "Inspect the routing topology": [[51, "inspect-the-routing-topology"], [66, "inspect-the-routing-topology"]], "With full output": [[51, "with-full-output"]], "pgr_createVerticesTable": [[52, "pgr-createverticestable"]], "pgr_dagShortestPath - Experimental": [[53, "pgr-dagshortestpath-experimental"]], "Resturn Columns": [[53, "resturn-columns"], [82, "resturn-columns"]], "pgr_depthFirstSearch - Proposed": [[54, "pgr-depthfirstsearch-proposed"]], "pgr_dijkstra": [[55, "pgr-dijkstra"]], "For directed graphs with cost and reverse_cost columns": [[55, "for-directed-graphs-with-cost-and-reverse-cost-columns"]], "1) Path from 6 to 10": [[55, "path-from-6-to-10"]], "2) Path from 6 to 7": [[55, "path-from-6-to-7"]], "3) Path from 12 to 10": [[55, "path-from-12-to-10"]], "4) Path from 12 to 7": [[55, "path-from-12-to-7"]], "5) Using One to Many to get the solution of examples 1 and 2": [[55, "using-one-to-many-to-get-the-solution-of-examples-1-and-2"]], "6) Using Many to One to get the solution of examples 2 and 4": [[55, "using-many-to-one-to-get-the-solution-of-examples-2-and-4"]], "7) Using Many to Many to get the solution of examples 1 to 4": [[55, "using-many-to-many-to-get-the-solution-of-examples-1-to-4"]], "8) Using Combinations to get the solution of examples 1 to 3": [[55, "using-combinations-to-get-the-solution-of-examples-1-to-3"]], "For undirected graphs with cost and reverse_cost columns": [[55, "for-undirected-graphs-with-cost-and-reverse-cost-columns"]], "9) Path from 6 to 10": [[55, "id1"]], "10) Path from 6 to 7": [[55, "id2"]], "11) Path from 12 to 10": [[55, "id3"]], "12) Path from 12 to 7": [[55, "id4"]], "13) Using One to Many to get the solution of examples 9 and 10": [[55, "using-one-to-many-to-get-the-solution-of-examples-9-and-10"]], "14) Using Many to One to get the solution of examples 10 and 12": [[55, "using-many-to-one-to-get-the-solution-of-examples-10-and-12"]], "15) Using Many to Many to get the solution of examples 9 to 12": [[55, "using-many-to-many-to-get-the-solution-of-examples-9-to-12"]], "16) Using Combinations to get the solution of examples 9 to 11": [[55, "using-combinations-to-get-the-solution-of-examples-9-to-11"]], "For directed graphs only with cost column": [[55, "for-directed-graphs-only-with-cost-column"]], "17) Path from 6 to 10": [[55, "id5"]], "18) Path from 6 to 7": [[55, "id6"]], "19) Path from 12 to 10": [[55, "id7"]], "20) Path from 12 to 7": [[55, "id8"]], "21) Using One to Many to get the solution of examples 17 and 18": [[55, "using-one-to-many-to-get-the-solution-of-examples-17-and-18"]], "22) Using Many to One to get the solution of examples 18 and 20": [[55, "using-many-to-one-to-get-the-solution-of-examples-18-and-20"]], "23) Using Many to Many to get the solution of examples 17 to 20": [[55, "using-many-to-many-to-get-the-solution-of-examples-17-to-20"]], "24) Using Combinations to get the solution of examples 17 to 19": [[55, "using-combinations-to-get-the-solution-of-examples-17-to-19"]], "For undirected graphs only with cost column": [[55, "for-undirected-graphs-only-with-cost-column"]], "25) Path from 6 to 10": [[55, "id9"]], "26) Path from 6 to 7": [[55, "id10"]], "27) Path from 12 to 10": [[55, "id11"]], "28) Path from 12 to 7": [[55, "id12"]], "29) Using One to Many to get the solution of examples 25 and 26": [[55, "using-one-to-many-to-get-the-solution-of-examples-25-and-26"]], "30) Using Many to One to get the solution of examples 26 and 28": [[55, "using-many-to-one-to-get-the-solution-of-examples-26-and-28"]], "31) Using Many to Many to get the solution of examples 25 to 28": [[55, "using-many-to-many-to-get-the-solution-of-examples-25-to-28"]], "32) Using Combinations to get the solution of examples 25 to 27": [[55, "using-combinations-to-get-the-solution-of-examples-25-to-27"]], "Equvalences between signatures": [[55, "equvalences-between-signatures"]], "33) Using One to One": [[55, "using-one-to-one"]], "34) Using One to Many": [[55, "using-one-to-many"]], "35) Using Many to One": [[55, "using-many-to-one"]], "36) Using Many to Many": [[55, "using-many-to-many"]], "37) Using Combinations": [[55, "using-combinations"]], "pgr_dijkstraCost": [[56, "pgr-dijkstracost"]], "pgr_dijkstraCostMatrix": [[57, "pgr-dijkstracostmatrix"]], "pgr_dijkstraNear - Proposed": [[58, "pgr-dijkstranear-proposed"]], "Dijkstra optional parameters": [[58, "dijkstra-optional-parameters"], [59, "dijkstra-optional-parameters"]], "Near optional parameters": [[58, "near-optional-parameters"], [59, "near-optional-parameters"]], "pgr_dijkstraNearCost - Proposed": [[59, "pgr-dijkstranearcost-proposed"]], "pgr_dijkstraVia - Proposed": [[60, "pgr-dijkstravia-proposed"]], "One Via": [[60, "one-via"]], "Via optional parameters": [[60, "via-optional-parameters"], [116, "via-optional-parameters"]], "The main query": [[60, "the-main-query"]], "Aggregate cost of the third path.": [[60, "aggregate-cost-of-the-third-path"]], "Route\u2019s aggregate cost of the route at the end of the third path.": [[60, "route-s-aggregate-cost-of-the-route-at-the-end-of-the-third-path"]], "Nodes visited in the route.": [[60, "nodes-visited-in-the-route"]], "The aggregate costs of the route when the visited vertices are reached.": [[60, "the-aggregate-costs-of-the-route-when-the-visited-vertices-are-reached"]], "Status of \u201cpasses in front\u201d or \u201cvisits\u201d of the nodes.": [[60, "status-of-passes-in-front-or-visits-of-the-nodes"]], "pgr_drivingDistance": [[61, "pgr-drivingdistance"]], "Single Vertex": [[61, "single-vertex"]], "Multiple Vertices": [[61, "multiple-vertices"]], "Driving distance optional parameters": [[61, "driving-distance-optional-parameters"], [103, "driving-distance-optional-parameters"]], "pgr_edgeColoring - Experimental": [[62, "pgr-edgecoloring-experimental"]], "pgr_edgeDisjointPaths": [[63, "pgr-edgedisjointpaths"]], "pgr_edmondsKarp": [[64, "pgr-edmondskarp"]], "pgr_edwardMoore - Experimental": [[65, "pgr-edwardmoore-experimental"]], "pgr_extractVertices \u2013 Proposed": [[66, "pgr-extractvertices-proposed"]], "When line geometry is known": [[66, "when-line-geometry-is-known"]], "When vertex geometry is known": [[66, "when-vertex-geometry-is-known"]], "When identifiers of vertices are known": [[66, "when-identifiers-of-vertices-are-known"]], "Dryrun execution": [[66, "dryrun-execution"]], "pgr_floydWarshall": [[67, "pgr-floydwarshall"]], "pgr_full_version": [[68, "pgr-full-version"]], "pgr_isPlanar - Experimental": [[69, "pgr-isplanar-experimental"]], "pgr_johnson": [[70, "pgr-johnson"]], "pgr_kruskal": [[71, "pgr-kruskal"]], "pgr_kruskalBFS": [[72, "pgr-kruskalbfs"]], "pgr_kruskalDD": [[73, "pgr-kruskaldd"]], "pgr_kruskalDFS": [[74, "pgr-kruskaldfs"]], "pgr_lengauerTarjanDominatorTree -Experimental": [[75, "pgr-lengauertarjandominatortree-experimental"]], "pgr_lineGraph - Experimental": [[76, "pgr-linegraph-experimental"]], "pgr_lineGraphFull - Experimental": [[77, "pgr-linegraphfull-experimental"]], "The data": [[77, "the-data"]], "The transformation": [[77, "the-transformation"]], "Creating table that identifies transformed vertices": [[77, "creating-table-that-identifies-transformed-vertices"]], "Store edge results": [[77, "store-edge-results"]], "Create the mapping table": [[77, "create-the-mapping-table"]], "Filling the mapping table": [[77, "filling-the-mapping-table"]], "Adding a soft restriction": [[77, "adding-a-soft-restriction"]], "Idenifying the restriction": [[77, "idenifying-the-restriction"]], "Adding a value to the restriction": [[77, "adding-a-value-to-the-restriction"]], "Simplifying leaf vertices": [[77, "simplifying-leaf-vertices"]], "Using the vertex map give the leaf verices their original value.": [[77, "using-the-vertex-map-give-the-leaf-verices-their-original-value"]], "Removing self loops on leaf nodes": [[77, "removing-self-loops-on-leaf-nodes"]], "Complete routing graph": [[77, "complete-routing-graph"]], "Add edges from the original graph": [[77, "add-edges-from-the-original-graph"]], "Add the newly calculated edges": [[77, "add-the-newly-calculated-edges"]], "Using the routing graph": [[77, "using-the-routing-graph"]], "pgr_makeConnected - Experimental": [[78, "pgr-makeconnected-experimental"]], "pgr_maxCardinalityMatch": [[79, "pgr-maxcardinalitymatch"]], "pgr_maxFlow": [[80, "pgr-maxflow"]], "pgr_maxFlowMinCost - Experimental": [[81, "pgr-maxflowmincost-experimental"]], "pgr_maxFlowMinCost_Cost - Experimental": [[82, "pgr-maxflowmincost-cost-experimental"]], "pgr_nodeNetwork": [[83, "pgr-nodenetwork"]], "Examples": [[83, "examples"]], "Images": [[83, "images"], [110, "images"]], "Comparing the results": [[83, "comparing-the-results"]], "pgr_pickDeliver - Experimental": [[84, "pgr-pickdeliver-experimental"]], "Signature": [[84, "signature"], [85, "signature"], [98, "signature"]], "pgr_pickDeliverEuclidean - Experimental": [[85, "pgr-pickdelivereuclidean-experimental"]], "Example": [[85, "example"]], "The vehicles": [[85, "the-vehicles"], [110, "the-vehicles"]], "The original orders": [[85, "the-original-orders"], [110, "the-original-orders"]], "The orders": [[85, "the-orders"], [110, "the-orders"]], "The query": [[85, "the-query"]], "pgr_prim": [[86, "pgr-prim"]], "pgr_primBFS": [[87, "pgr-primbfs"]], "pgr_primDD": [[88, "pgr-primdd"]], "pgr_primDFS": [[89, "pgr-primdfs"]], "pgr_pushRelabel": [[90, "pgr-pushrelabel"]], "pgr_sequentialVertexColoring - Proposed": [[91, "pgr-sequentialvertexcoloring-proposed"]], "pgr_stoerWagner - Experimental": [[92, "pgr-stoerwagner-experimental"]], "Additional Example:": [[92, "additional-example"], [99, "additional-example"]], "pgr_strongComponents": [[93, "pgr-strongcomponents"]], "pgr_topologicalSort - Experimental": [[94, "pgr-topologicalsort-experimental"]], "Additional examples": [[94, "additional-examples"]], "pgr_transitiveClosure - Experimental": [[95, "pgr-transitiveclosure-experimental"]], "pgr_trsp - Turn Restriction Shortest Path (TRSP)": [[96, "pgr-trsp-turn-restriction-shortest-path-trsp"]], "Support for Vias": [[96, "support-for-vias"]], "Known Issues": [[96, "known-issues"]], "The restrictions": [[96, "the-restrictions"]], "The \u201cVertices\u201d signature version": [[96, "the-vertices-signature-version"]], "1 Different ways to represent \u2018no path found`": [[96, "different-ways-to-represent-no-path-found"]], "1 Routing from/to same location": [[96, "routing-from-to-same-location"]], "1 User contradictions": [[96, "user-contradictions"]], "The \u201cEdges\u201d signature version": [[96, "the-edges-signature-version"]], "2 Different ways to represent \u2018no path found`": [[96, "id1"]], "Paths with equal number of vertices and edges": [[96, "paths-with-equal-number-of-vertices-and-edges"]], "2 Routing from/to same location": [[96, "id2"]], "2 User contradictions": [[96, "id3"]], "Using a points of interest table": [[96, "using-a-points-of-interest-table"]], "Routing from a vertex to a point": [[96, "routing-from-a-vertex-to-a-point"]], "prototypes": [[96, "prototypes"]], "pgr_turnRestrictedPath - Experimental": [[97, "pgr-turnrestrictedpath-experimental"]], "Special optional parameters": [[97, "special-optional-parameters"]], "pgr_version": [[98, "pgr-version"]], "pgr_vrpOneDepot - Experimental": [[99, "pgr-vrponedepot-experimental"]], "pgr_withPoints - Proposed": [[100, "pgr-withpoints-proposed"]], "With points optional parameters": [[100, "with-points-optional-parameters"], [101, "with-points-optional-parameters"], [102, "with-points-optional-parameters"], [103, "with-points-optional-parameters"], [104, "with-points-optional-parameters"], [118, "with-points-optional-parameters"]], "Usage variations": [[100, "usage-variations"]], "Passes in front or visits with right side driving.": [[100, "passes-in-front-or-visits-with-right-side-driving"]], "Passes in front or visits with left side driving.": [[100, "passes-in-front-or-visits-with-left-side-driving"]], "pgr_withPointsCost - Proposed": [[101, "pgr-withpointscost-proposed"]], "Right side driving topology": [[101, "right-side-driving-topology"]], "Left side driving topology": [[101, "left-side-driving-topology"]], "Does not matter driving side driving topology": [[101, "does-not-matter-driving-side-driving-topology"]], "pgr_withPointsCostMatrix - proposed": [[102, "pgr-withpointscostmatrix-proposed"]], "Use with pgr_TSP.": [[102, "use-with-pgr-tsp"]], "pgr_withPointsDD - Proposed": [[103, "pgr-withpointsdd-proposed"]], "Driving side does not matter": [[103, "driving-side-does-not-matter"], [117, "driving-side-does-not-matter"], [118, "driving-side-does-not-matter"]], "pgr_withPointsKSP - Proposed": [[104, "pgr-withpointsksp-proposed"]], "Left driving side": [[104, "left-driving-side"], [117, "left-driving-side"], [118, "left-driving-side"]], "Right driving side": [[104, "right-driving-side"], [117, "right-driving-side"], [118, "right-driving-side"]], "Prim - Family of functions": [[105, "prim-family-of-functions"]], "Proposed Functions": [[106, "proposed-functions"]], "Reference": [[107, "reference"]], "pgRouting 3.3.4 Release Notes": [[108, "pgrouting-3-3-4-release-notes"]], "pgRouting 3.3.3 Release Notes": [[108, "pgrouting-3-3-3-release-notes"]], "pgRouting 3.3.2 Release Notes": [[108, "pgrouting-3-3-2-release-notes"]], "pgRouting 3.3.1 Release Notes": [[108, "pgrouting-3-3-1-release-notes"]], "pgRouting 3.3.0 Release Notes": [[108, "pgrouting-3-3-0-release-notes"]], "pgRouting 3.2.2 Release Notes": [[108, "pgrouting-3-2-2-release-notes"]], "pgRouting 3.2.1 Release Notes": [[108, "pgrouting-3-2-1-release-notes"]], "pgRouting 3.2.0 Release Notes": [[108, "pgrouting-3-2-0-release-notes"]], "pgRouting 3.1.4 Release Notes": [[108, "pgrouting-3-1-4-release-notes"]], "pgRouting 3.1.3 Release Notes": [[108, "pgrouting-3-1-3-release-notes"]], "pgRouting 3.1.2 Release Notes": [[108, "pgrouting-3-1-2-release-notes"]], "pgRouting 3.1.1 Release Notes": [[108, "pgrouting-3-1-1-release-notes"]], "pgRouting 3.1.0 Release Notes": [[108, "pgrouting-3-1-0-release-notes"]], "pgRouting 3.0.6 Release Notes": [[108, "pgrouting-3-0-6-release-notes"]], "pgRouting 3.0.5 Release Notes": [[108, "pgrouting-3-0-5-release-notes"]], "pgRouting 3.0.4 Release Notes": [[108, "pgrouting-3-0-4-release-notes"]], "pgRouting 3.0.3 Release Notes": [[108, "pgrouting-3-0-3-release-notes"]], "pgRouting 3.0.2 Release Notes": [[108, "pgrouting-3-0-2-release-notes"]], "pgRouting 3.0.1 Release Notes": [[108, "pgrouting-3-0-1-release-notes"]], "pgRouting 3.0.0 Release Notes": [[108, "pgrouting-3-0-0-release-notes"]], "pgRouting 2.6.3 Release Notes": [[108, "pgrouting-2-6-3-release-notes"]], "pgRouting 2.6.2 Release Notes": [[108, "pgrouting-2-6-2-release-notes"]], "pgRouting 2.6.1 Release Notes": [[108, "pgrouting-2-6-1-release-notes"]], "pgRouting 2.6.0 Release Notes": [[108, "pgrouting-2-6-0-release-notes"]], "pgRouting 2.5.5 Release Notes": [[108, "pgrouting-2-5-5-release-notes"]], "pgRouting 2.5.4 Release Notes": [[108, "pgrouting-2-5-4-release-notes"]], "pgRouting 2.5.3 Release Notes": [[108, "pgrouting-2-5-3-release-notes"]], "pgRouting 2.5.2 Release Notes": [[108, "pgrouting-2-5-2-release-notes"]], "pgRouting 2.5.1 Release Notes": [[108, "pgrouting-2-5-1-release-notes"]], "pgRouting 2.5.0 Release Notes": [[108, "pgrouting-2-5-0-release-notes"]], "pgRouting 2.4.2 Release Notes": [[108, "pgrouting-2-4-2-release-notes"]], "pgRouting 2.4.1 Release Notes": [[108, "pgrouting-2-4-1-release-notes"]], "pgRouting 2.4.0 Release Notes": [[108, "pgrouting-2-4-0-release-notes"]], "pgRouting 2.3.2 Release Notes": [[108, "pgrouting-2-3-2-release-notes"]], "pgRouting 2.3.1 Release Notes": [[108, "pgrouting-2-3-1-release-notes"]], "pgRouting 2.3.0 Release Notes": [[108, "pgrouting-2-3-0-release-notes"]], "pgRouting 2.2.4 Release Notes": [[108, "pgrouting-2-2-4-release-notes"]], "pgRouting 2.2.3 Release Notes": [[108, "pgrouting-2-2-3-release-notes"]], "pgRouting 2.2.2 Release Notes": [[108, "pgrouting-2-2-2-release-notes"]], "pgRouting 2.2.1 Release Notes": [[108, "pgrouting-2-2-1-release-notes"]], "pgRouting 2.2.0 Release Notes": [[108, "pgrouting-2-2-0-release-notes"]], "pgRouting 2.1.0 Release Notes": [[108, "pgrouting-2-1-0-release-notes"]], "pgRouting 2.0.1 Release Notes": [[108, "pgrouting-2-0-1-release-notes"]], "pgRouting 2.0.0 Release Notes": [[108, "pgrouting-2-0-0-release-notes"]], "pgRouting 1.x Release Notes": [[108, "pgrouting-1-x-release-notes"]], "Changes for release 1.05": [[108, "changes-for-release-1-05"]], "Changes for release 1.03": [[108, "changes-for-release-1-03"]], "Changes for release 1.02": [[108, "changes-for-release-1-02"]], "Changes for release 1.01": [[108, "changes-for-release-1-01"]], "Changes for release 1.0": [[108, "changes-for-release-1-0"]], "Changes for release 1.0.0b": [[108, "changes-for-release-1-0-0b"]], "Changes for release 1.0.0a": [[108, "changes-for-release-1-0-0a"]], "Changes for release 0.9.9": [[108, "changes-for-release-0-9-9"]], "Changes for release 0.9.8": [[108, "changes-for-release-0-9-8"]], "Sample Data": [[110, "sample-data"]], "Main graph": [[110, "main-graph"]], "Edges": [[110, "edges"]], "Edges data": [[110, "edges-data"]], "Vertices": [[110, "vertices"]], "Vertices data": [[110, "vertices-data"]], "The topology": [[110, "the-topology"]], "Topology data": [[110, "topology-data"]], "Points outside the graph": [[110, "points-outside-the-graph"]], "Points of interest": [[110, "points-of-interest"]], "Points of interest fillup": [[110, "points-of-interest-fillup"]], "Points of interest geometry": [[110, "points-of-interest-geometry"]], "Points of interest data": [[110, "points-of-interest-data"]], "Support tables": [[110, "support-tables"]], "Combinations data": [[110, "combinations-data"]], "Restrictions": [[110, "restrictions"]], "Directed graph with cost and reverse_cost": [[110, "directed-graph-with-cost-and-reverse-cost"]], "Undirected graph with cost and reverse_cost": [[110, "undirected-graph-with-cost-and-reverse-cost"]], "Directed graph with cost": [[110, "directed-graph-with-cost"]], "Undirected graph with cost": [[110, "undirected-graph-with-cost"]], "Pick & Deliver Data": [[110, "pick-deliver-data"]], "Spanning Tree - Category": [[111, "spanning-tree-category"]], "Support": [[112, "support"]], "Reporting Problems": [[112, "reporting-problems"]], "Mailing List and GIS StackExchange": [[112, "mailing-list-and-gis-stackexchange"]], "Commercial Support": [[112, "commercial-support"]], "Topology - Family of Functions": [[113, "topology-family-of-functions"]], "Transformation - Family of functions (Experimental)": [[114, "transformation-family-of-functions-experimental"]], "Traversal - Family of functions": [[115, "traversal-family-of-functions"]], "Via - Category": [[116, "via-category"]], "withPoints - Category": [[117, "withpoints-category"]], "About points": [[117, "about-points"], [118, "about-points"]], "Driving side": [[117, "driving-side"], [118, "driving-side"]], "Creating temporary vertices": [[117, "creating-temporary-vertices"], [118, "creating-temporary-vertices"]], "On a right hand side driving network": [[117, "on-a-right-hand-side-driving-network"], [118, "on-a-right-hand-side-driving-network"]], "On a left hand side driving network": [[117, "on-a-left-hand-side-driving-network"], [118, "on-a-left-hand-side-driving-network"]], "When driving side does not matter": [[117, "when-driving-side-does-not-matter"], [118, "when-driving-side-does-not-matter"]], "withPoints - Family of functions": [[118, "withpoints-family-of-functions"]], "Advanced Documentation": [[118, "advanced-documentation"]]}, "indexentries": {"tsp": [[25, "index-0"]], "tspeuclidean": [[26, "index-0"]], "astar(many to many)": [[27, "index-3"]], "astar(many to one)": [[27, "index-2"]], "astar(one to one)": [[27, "index-0"]], "astarcost(combinations) - proposed on v3.2": [[27, "index-4"], [28, "index-4"]], "astar(one to many)": [[27, "index-1"]], "astarcost(many to many)": [[28, "index-3"]], "astarcost(many to one)": [[28, "index-2"]], "astarcost(one to many)": [[28, "index-1"]], "astarcost(one to one)": [[28, "index-0"]], "astarcostmatrix": [[29, "index-0"]], "alphashape": [[30, "index-0"]], "articulationpoints": [[33, "index-0"]], "bdastar(combinations) - proposed on v3.2": [[34, "index-4"]], "bdastar(many to many)": [[34, "index-3"]], "bdastar(many to one)": [[34, "index-2"]], "bdastar(one to many)": [[34, "index-1"]], "bdastar(one to one)": [[34, "index-0"]], "bdastarcost(combinations) - proposed on v3.2": [[35, "index-4"]], "bdastarcost(many to many)": [[35, "index-3"]], "bdastarcost(many to one)": [[35, "index-2"]], "bdastarcost(one to many)": [[35, "index-1"]], "bdastarcost(one to one)": [[35, "index-0"]], "bdastarcostmatrix": [[36, "index-0"]], "bddijkstra(combinations) - proposed on v3.2": [[37, "index-4"]], "bddijkstra(many to many)": [[37, "index-3"]], "bddijkstra(many to one)": [[37, "index-2"]], "bddijkstra(one to many)": [[37, "index-1"]], "bddijkstra(one to one)": [[37, "index-0"]], "bddijkstracost(combinations) - proposed on v3.2": [[38, "index-4"]], "bddijkstracost(many to many)": [[38, "index-3"]], "bddijkstracost(many to one)": [[38, "index-2"]], "bddijkstracost(one to many)": [[38, "index-1"]], "bddijkstracost(one to one)": [[38, "index-0"]], "bddijkstracostmatrix": [[39, "index-0"]], "bellmanford(combinations) - experimental on v3.2": [[40, "index-4"]], "bellmanford(many to many) - experimental on v3.0": [[40, "index-3"]], "bellmanford(one to many) - experimental on v3.0": [[40, "index-1"]], "bellman_ford(many to one) - experimental on v3.0": [[40, "index-2"]], "bellman_ford(one to one) - experimental on v3.0": [[40, "index-0"]], "biconnectedcomponents": [[41, "index-0"]], "binarybreadthfirstsearch(combinations) - experimental on v3.2": [[42, "index-4"]], "binarybreadthfirstsearch(many to many) - experimental on v3.0": [[42, "index-3"]], "binarybreadthfirstsearch(many to one) - experimental on v3.0": [[42, "index-2"]], "binarybreadthfirstsearch(one to many) - experimental on v3.0": [[42, "index-1"]], "binarybreadthfirstsearch(one to one) - experimental on v3.0": [[42, "index-0"]], "bipartite - experimental on v3.2": [[43, "index-0"]], "boykovkolmogorov(combinations) - proposed on v3.2": [[44, "index-4"]], "boykovkolmogorov(many to many)": [[44, "index-3"]], "boykovkolmogorov(many to one)": [[44, "index-2"]], "boykovkolmogorov(one to many)": [[44, "index-1"]], "boykovkolmogorov(one to one)": [[44, "index-0"]], "breadthfirstsearch(multiple vertices) - experimental on v3.0": [[45, "index-1"]], "breadthfirstsearch(single vertex) - experimental on v3.0": [[45, "index-0"]], "bridges": [[46, "index-0"]], "chinesepostman - experimental on v3.0": [[47, "index-0"]], "chinesepostmancost - experimental on v3.0": [[48, "index-0"]], "connectedcomponents": [[49, "index-0"]], "contraction": [[50, "index-0"]], "dagshortestpath(combinations) - experimental on v3.2": [[53, "index-4"]], "dagshortestpath(many to many) - experimental on v3.0": [[53, "index-3"]], "dagshortestpath(many to one) - experimental on v3.0": [[53, "index-2"]], "dagshortestpath(one to many) - experimental on v3.0": [[53, "index-1"]], "dagshortestpath(one to one) - experimental on v3.0": [[53, "index-0"]], "depthfirstsearch(multiple vertices) - proposed on v3.3": [[54, "index-1"]], "depthfirstsearch(single vertex) - proposed on v3.3": [[54, "index-0"]], "dijkstra(combinations) - proposed on v3.1": [[55, "index-4"]], "dijkstra(many to many)": [[55, "index-3"]], "dijkstra(many to one)": [[55, "index-2"]], "dijkstra(one to many)": [[55, "index-1"]], "dijkstra(one to one)": [[55, "index-0"]], "dijkstracost(combinations) - proposed on v3.1": [[56, "index-4"]], "dijkstracost(many to many)": [[56, "index-3"]], "dijkstracost(many to one)": [[56, "index-2"]], "dijkstracost(one to many)": [[56, "index-1"]], "dijkstracost(one to one)": [[56, "index-0"]], "dijkstracostmatrix": [[57, "index-0"]], "dijkstranear(combinations) - proposed on v3.3": [[58, "index-3"]], "dijkstranear(many to many) - proposed on v3.3": [[58, "index-2"]], "dijkstranear(many to one) - proposed on v3.3": [[58, "index-1"]], "dijkstranear(one to many) - proposed on v3.3": [[58, "index-0"]], "dijkstranearcost(combinations) - proposed on v3.3": [[59, "index-3"]], "dijkstranearcost(many to many) - proposed on v3.3": [[59, "index-2"]], "dijkstranearcost(many to one) - proposed on v3.3": [[59, "index-1"]], "dijkstranearcost(one to many) - proposed on v3.3": [[59, "index-0"]], "dijkstravia - proposed on 2.2": [[60, "index-0"]], "drivingdistance(multiple vertices)": [[61, "index-1"]], "drivingdistance(single vertex)": [[61, "index-0"]], "edgecoloring - experimental on v3.3": [[62, "index-0"]], "edgedisjointpaths(combinations) -- proposed on v3.2": [[63, "index-4"]], "edgedisjointpaths(many to many)": [[63, "index-3"]], "edgedisjointpaths(many to one)": [[63, "index-2"]], "edgedisjointpaths(one to many)": [[63, "index-1"]], "edgedisjointpaths(one to one)": [[63, "index-0"]], "edmondskarp(combinations) - proposed on v3.2": [[64, "index-4"]], "edmondskarp(many to many)": [[64, "index-3"]], "edmondskarp(many to one)": [[64, "index-2"]], "edmondskarp(one to many)": [[64, "index-1"]], "edmondskarp(one to one)": [[64, "index-0"]], "edwardmoore(combinations) - experimental on v3.2": [[65, "index-4"]], "edwardmoore(many to many) - experimental on v3.0": [[65, "index-3"]], "edwardmoore(many to one) - experimental on v3.0": [[65, "index-2"]], "edwardmoore(one to many) - experimental on v3.0": [[65, "index-1"]], "edwardmoore(one to one) - experimental on v3.0": [[65, "index-0"]], "pgr_extractvertices - proposed on v3.3": [[66, "index-0"]], "full_version": [[68, "index-0"]], "isplanar - experimental on v3.2": [[69, "index-0"]], "kruskal": [[71, "index-0"]], "kruskalbfs(multiple vertices)": [[72, "index-1"]], "kruskalbfs(single vertex)": [[72, "index-0"]], "kruskaldd(multiple vertices)": [[73, "index-1"]], "kruskaldd(single vertex)": [[73, "index-0"]], "kruskaldfs(multiple vertices)": [[74, "index-1"]], "kruskaldfs(single vertex)": [[74, "index-0"]], "lengauertarjandominatortree - experimental on v3.2": [[75, "index-0"]], "linegraph - experimental on v2.5": [[76, "index-0"]], "linegraphfull - experimental on v2.6": [[77, "index-0"]], "makeconnected - experimental on v3.2": [[78, "index-0"]], "maximumcardinalitymatch": [[79, "index-0"]], "maxflow(combinations) - proposed on v3.2": [[80, "index-4"]], "maxflow(many to many)": [[80, "index-3"]], "maxflow(many to one)": [[80, "index-2"]], "maxflow(one to many)": [[80, "index-1"]], "maxflow(one to one)": [[80, "index-0"]], "maxflowmincost(combinations) -- experimental on v3.2": [[81, "index-4"]], "maxflowmincost(many to many) - experimental on v3.0": [[81, "index-3"]], "maxflowmincost(many to one) - experimental on v3.0": [[81, "index-2"]], "maxflowmincost(one to many) - experimental on v3.0": [[81, "index-1"]], "maxflowmincost(one to one) - experimental on v3.0": [[81, "index-0"]], "maxflowmincost_cost(combinations) - experimental on v3.2": [[82, "index-4"]], "maxflowmincost_cost(many to many) - experimental on v3.0": [[82, "index-3"]], "maxflowmincost_cost(many to one) - experimental on v3.0": [[82, "index-2"]], "maxflowmincost_cost(one to many) - experimental on v3.0": [[82, "index-1"]], "maxflowmincost_cost(one to one) - experimental on v3.0": [[82, "index-0"]], "pgr_nodenetwork": [[83, "index-0"]], "pgr_pickdeliver - experimental on v3.0": [[84, "index-0"]], "pgr_pickdelivereuclidean - experimental on 3.0": [[85, "index-0"]], "prim": [[86, "index-0"]], "primbfs(multiple vertices)": [[87, "index-1"]], "primbfs(single vertex)": [[87, "index-0"]], "primdd(multiple vertices)": [[88, "index-1"]], "primdd(single vertex)": [[88, "index-0"]], "primdfs(multiple vertices)": [[89, "index-1"]], "primdfs(single vertex)": [[89, "index-0"]], "pushrelabel(combinations) - proposed on v3.2": [[90, "index-4"]], "pushrelabel(many to many)": [[90, "index-3"]], "pushrelabel(many to one)": [[90, "index-2"]], "pushrelabel(one to many)": [[90, "index-1"]], "pushrelabel(one to one)": [[90, "index-0"]], "sequentialvertexcoloring - proposed on v3.3": [[91, "index-0"]], "stoerwagner - experimental on v3.0": [[92, "index-0"]], "strongcomponents": [[93, "index-0"]], "topologicalsort - experimental on v3.0": [[94, "index-0"]], "transitiveclosure - experimental on v3.0": [[95, "index-0"]], "trsp(text,integer,integer,boolean,boolean)": [[96, "index-0"]], "trsp(text,integer,integer,boolean,boolean,text)": [[96, "index-0"]], "trspviaedges - prototype": [[96, "index-0"]], "trspviavertices - prototype": [[96, "index-0"]], "turnrestrictedpath - experimental on v3.0": [[97, "index-0"]], "version": [[98, "index-0"]], "withpoints(combinations) - proposed on v3.2": [[100, "index-4"]], "withpoints(many to many) - proposed on v2.2": [[100, "index-3"]], "withpoints(many to one) - proposed on v2.2": [[100, "index-2"]], "withpoints(one to many) - proposed on v2.2": [[100, "index-1"]], "withpoints(one to one) - proposed on v2.2": [[100, "index-0"]], "withpointscost(combinations) -- proposed on v3.2": [[101, "index-4"]], "withpointscost(many to many) - proposed on v2.2": [[101, "index-3"]], "withpointscost(many to one) - proposed on v2.2": [[101, "index-2"]], "withpointscost(one to many) - proposed on v2.2": [[101, "index-1"]], "withpointscost(one to one) - proposed on v2.2": [[101, "index-0"]], "withpointscostmatrix - proposed": [[102, "index-0"]], "withpointsdd(multiple vertices) - proposed on v2.2": [[103, "index-1"]], "withpointsdd(single vertex) - proposed on v2.2": [[103, "index-0"]], "withpointsksp - proposed on v2.2": [[104, "index-0"]]}})